a:684:{i:0;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:8:"SAMR-338";s:6:"status";s:11:"Implemented";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:31:"Update Java side AWS/Azure SDKs";s:11:"description";s:0:"";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:14:"implemented by";a:2:{i:0;s:9:"MEIF-2280";i:1;s:7:"SA-4783";}}s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-241";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586272840;s:7:"updated";i:1586272840;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:1;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@6b47cc59[id=1842,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 8,startDate=2020-05-25T16:59:54.772+01:00,endDate=2020-06-15T04:59:00.000+01:00,completeDate=2020-06-14T21:20:31.570+01:00,sequence=1842,goal=]";i:1;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@3654cde3[id=1843,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 9,startDate=2020-06-14T21:29:12.965+01:00,endDate=2020-07-05T09:29:00.000+01:00,completeDate=2020-07-05T17:26:57.684+01:00,sequence=1843,goal=]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4885";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:37:"Small changes needed in SA IoT manual";s:11:"description";s:762:"While verifying SA IoT manual, I observed following minor issues.

* The HTML version contains release month and release year on title page. It should be removed.
!image-2020-06-01-20-26-32-730.png|thumbnail!
* The note in chapter 1 should say:
{code:java}
please follow the chapter 5 "Building With MEIF and Device Configuration" of meif_mel_omni_gs.pdf document.
{code}
* Remove following pre-requisite from *Extracting Azure Parameters* section:
{code:java}
You have created a consumer group on Azure. For more information, refer to https://
docs.microsoft.com/en-us/rest/api/eventhub/create-consumer-group.
{code}
* In *Profiling and Tracing* a Device section, the note just above step # 3 of procedure should say *section* instead of *chapter*.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:12:"is Tested By";a:1:{i:0;s:9:"MEIF-2479";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593442907;s:7:"updated";i:1594389206;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:2;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4867";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:66:"Telemetry data cannot be imported from Azure cloud into SA session";s:11:"description";s:1100:"*Steps Followed*
 * Boot MEL Omni service stick image with MEIF support on target. {{azure-agent}} will be running as background service. MEL Omni can be built by following the steps mentioned in [MEIF-1.4 - Getting Started Guide|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide].
 * Install MEIF and MEL Omni at a single location.
 * Create a remote connection for Microsoft Azure. Make sure to specify a valid _Event Hub-compatible endpoint_ string while creating the connection.
 * Create an SA project and a session in it. Add CPU Utilization agent to the session.
 * Run the profiling session for some time.

*Results*

At the completion of profiling session, agent will be populated with trace data. But telemetry data will not be imported into the session.

Following error will be shown in IDE though the Event Hub-compatible endpoint string is valid:

!image-2020-04-08-12-51-42-390.png|thumbnail!

Please see [^Session 3.zip] with imported trace data. Telemetry data is not available in it.
But the error indicated by IDE looks confusing.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:13:"Is Blocked By";a:1:{i:0;s:8:"CB-12341";}}}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:50400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587988047;s:7:"updated";i:1589282881;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:8:"samr-338";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:3;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4866";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:65:"Unable to import trace data via Microsoft Azure remote connection";s:11:"description";s:636:"*Steps Followed*
 * Boot MEL Omni service stick image with MEIF support on target. MEL Omni can be built by following the steps mentioned in [MEIF-1.4 - Getting Started Guide|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide].
 * Install MEIF and MEL Omni at a single location.
 * Create a remote connection for Microsoft Azure.
 * Create an SA project and an empty session in it.
 * Import trace data from Azure cloud storage via the remote connection created on step 1.

*Results*

Import will fail with following error:

!image-2020-04-07-12-37-43-194.png!

Please see [^.log] for details.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587989891;s:7:"updated";i:1589282889;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:8:"samr-338";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:4;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4854";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:92:"SA seems to get disconnected from AWS cloud side while downloading trace data from S3 bucket";s:11:"description";s:721:"Please see the attached screencast ([^trace_data_downloaing.mp4]). Tracing works fine on device side but when SA seems to get disconnected while trying to download trace data.

I have manually run aws-agent with sudo just to see if there is some on device side or not. There is no issue on target side.

Please see the attached issue report ([^issue-report-20200313-62455.zip]) for details.

Trace data file is uploaded to cloud but then gets deleted. So user is not able to download it manually later.

I did not see this issue with following environment:

CodeBench: [ftp://qaftp.pkl.mentorg.com/pub/files/codebench/Fir/jenkins/653/]
 MEIF: [ftp://qaftp.pkl.mentorg.com/pub/files/MEIF/1.4.0/200220-222208/]";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:79200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587719399;s:7:"updated";i:1589282671;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:8:"samr-338";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:5;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:3:{i:0;s:319:"com.atlassian.greenhopper.service.sprint.Sprint@1e42b1d9[id=1839,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 5,startDate=2020-03-22T14:44:57.389Z,endDate=2020-04-13T01:01:00.000+01:00,completeDate=2020-04-13T01:13:51.592+01:00,sequence=1839,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+05]";i:1;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";i:2;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@721e9539[id=1841,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 7,startDate=2020-05-03T23:31:29.451+01:00,endDate=2020-05-24T21:48:00.000+01:00,completeDate=2020-05-25T16:52:39.634+01:00,sequence=1841,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+07]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4849";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:79:"No documentation on how to get the  AWS and Azure parameter values for   SA IoT";s:11:"description";s:388:"while working on MEIF-2358, i found no documentation where i could find how to get the parameters required by SA IoT configurator.

for AWS these parameters include
region
accesskeyid
sharedaccesskey
bucket name

for Azure these parameters include
iot hub connection string
strogae account connection string
sotrage container name
event hub compatible endpoint
consumer group";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:52800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589827711;s:7:"updated";i:1594389279;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:6;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:319:"com.atlassian.greenhopper.service.sprint.Sprint@1e42b1d9[id=1839,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 5,startDate=2020-03-22T14:44:57.389Z,endDate=2020-04-13T01:01:00.000+01:00,completeDate=2020-04-13T01:13:51.592+01:00,sequence=1839,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+05]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4848";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:77:"SA IoT device tracing user's manual is missing under MEIF pdf docs directory ";s:11:"description";s:179:"While installing MEIF over codebench only two guides are present under MEIF pdf docs directory (MEIF user maunal and MEIF GSG). SA IoT device tracing user's manual is not present.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585833549;s:7:"updated";i:1589355567;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:5:"tools";i:2;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:7;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@2363bb02[id=1838,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 4,startDate=2020-03-01T01:37:12.078Z,endDate=2020-03-22T11:54:00.000Z,completeDate=2020-03-22T14:40:24.468Z,sequence=1838,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+04]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4847";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"Unable to launch profile session on AWS IoT device";s:11:"description";s:10010:"*Building of MEL Omni*

Followed steps mentioned at https://jira.alm.mentorg.com/browse/MEIF-2282?focusedCommentId=691076&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-691076 to build MEL Omni with MEIF support for AWS backend.

Due to MEIF-2352, removed the if else block present between *{{deb-systemd-helper enable run-media-persistent.mount}}* and *{{$\{APPEND_POST_INSTALL}}}* from <mel_omni_repo>/industrial-meif/recipes-core/meif/files/postinst script.

[^local.conf] is also attached. AWS build time options were updated as per [https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-BuildTimeConfigurations.] 

On booting the development image on target using the service stick image, aws-agent ran fine and the thing shadow was updated on AWS cloud side. Booting instructions were followed from [https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-CreateaBootDiskImage.]

The shadow document appeared as follows:
{code:java}
{
  "reported": {
    "firmware_update": false,
    "firmware_update_url": "",
    "do_telemetry": true,
    "telemetry_interval_ms": 2500,
    "target_state": "running",
    "firmware_image_name": "Linux 4.19.98 #1 SMP Tue Feb 25 11:42:52 UTC 2020 x86_64",
    "firmware_update_state": "",
    "system_platform": "unknown",
    "system_processor": "Intel(R) Atom(TM) Processor E3940 @ 1.60GHz",
    "battery_level": 100,
    "device_type": "Gateway",
    "memory_total": "3861468 kB",
    "installed_ram": "3861468 kB",
    "ip_addr": "",
    "manufacturer": "Unknown",
    "created_time": "Tue Feb 25 11:42:52 UTC 2020",
    "startup_time": "Wed Feb 26 11:49:44 UTC 2020",
    "swap_total": "0 kB",
    "firmware_version": "1.0",
    "model_number": "Rev.A",
    "serial_number": "C3D2-R2P0",
    "available_power_source_0": 1,
    "power_source_voltage_0": 5,
    "power_source_current_0": 1,
    "error_code_0": 0,
    "TracingAgent": {
      "Version": "1.0",
      "Type": "lttng",
      "Diagnostics": {
        "noarch.mettools.tracescript.version": "1.2.0",
        "noarch.mettools.tracescript.path": "/run/media/persistent/met_trace.sh",
        "noarch.mettools.tracescript.md5": "910993a61ffafe9d5a6350585035ca60",
        "noarch.mettools.tracescript.feature.userspace.context_support": "<NOT AVAILABLE>",
        "noarch.lttng.version.number": "2.10.6",
        "noarch.mettools.tracescript.soinfo_xml": "true",
        "elf32.lttng.lttng-sessiond.version": "<NOT AVAILABLE>",
        "elf32.lttng.lttng-sessiond.path": "<NOT AVAILABLE>",
        "elf32.lttng.lttng-consumerd.version": "<NOT AVAILABLE>",
        "elf32.lttng.lttng-consumerd.path": "<NOT AVAILABLE>",
        "elf32.lttng.lttng.version": "<NOT AVAILABLE>",
        "elf32.lttng.lttng.path": "<NOT AVAILABLE>",
        "elf32.lttng.babeltrace.version": "<NOT AVAILABLE>",
        "elf32.lttng.babeltrace.path": "<NOT AVAILABLE>",
        "elf32.mettools.forktrace.path": "<NOT AVAILABLE>",
        "elf32.mettools.lcktrace.path": "<NOT AVAILABLE>",
        "elf32.mettools.lcktrigger.path": "<NOT AVAILABLE>",
        "elf32.mettools.memtrace.path": "<NOT AVAILABLE>",
        "elf32.lttng.ust.dl.path": "<NOT AVAILABLE>",
        "elf32.lttng.ust.cyg-profile.path": "<NOT AVAILABLE>",
        "elf32.lttng.ust.cyg-profile-fast.path": "<NOT AVAILABLE>",
        "elf32.lttng.ust.fork.path": "<NOT AVAILABLE>",
        "elf32.lttng.ust.libc-wrapper.path": "<NOT AVAILABLE>",
        "elf32.lttng.ust.pthread-wrapper.path": "<NOT AVAILABLE>",
        "elf64.lttng.lttng-sessiond.version": "2.10.6",
        "elf64.lttng.lttng-sessiond.path": "/usr/bin/lttng-sessiond",
        "elf64.lttng.lttng-consumerd.version": "2.10.6",
        "elf64.lttng.lttng-consumerd.path": "/usr/lib/x86_64-linux-gnu/lttng/libexec/lttng-consumerd",
        "elf64.lttng.lttng.version": "(LTTng Trace Control) 2.10.6 - KeKriek",
        "elf64.lttng.lttng.path": "/usr/bin/lttng",
        "elf64.lttng.babeltrace.version": "BabelTrace Trace Viewer and Converter 1.5.6",
        "elf64.lttng.babeltrace.path": "/usr/bin/babeltrace",
        "elf64.mettools.forktrace.path": "<NOT AVAILABLE>",
        "elf64.mettools.lcktrace.path": "<NOT AVAILABLE>",
        "elf64.mettools.lcktrigger.path": "<NOT AVAILABLE>",
        "elf64.mettools.memtrace.path": "<NOT AVAILABLE>",
        "elf64.lttng.ust.dl.path": "/usr/lib/x86_64-linux-gnu/liblttng-ust-dl.so.0",
        "elf64.lttng.ust.cyg-profile.path": "/usr/lib/x86_64-linux-gnu/liblttng-ust-cyg-profile.so.0",
        "elf64.lttng.ust.cyg-profile-fast.path": "/usr/lib/x86_64-linux-gnu/liblttng-ust-cyg-profile-fast.so.0",
        "elf64.lttng.ust.fork.path": "/usr/lib/x86_64-linux-gnu/liblttng-ust-fork.so.0",
        "elf64.lttng.ust.libc-wrapper.path": "/usr/lib/x86_64-linux-gnu/liblttng-ust-libc-wrapper.so.0",
        "elf64.lttng.ust.pthread-wrapper.path": "/usr/lib/x86_64-linux-gnu/liblttng-ust-pthread-wrapper.so.0",
        "test.lttng.userspace": "<NOT AVAILABLE>",
        "test.lttng.userspace.buffers_pid": "<NOT AVAILABLE>",
        "test.lttng.context.ip": "<NOT AVAILABLE>",
        "test.lttng.event_exclusion": "<NOT AVAILABLE>",
        "test.lttng.kernel": "<NOT AVAILABLE>"
      }
    }
  }
}
{code}
*Profiling*

On Windows 10 host, SA IoT component was installed over CodeBench integration build. SA IoT profile launch was created for *ipc127e_tools_qa* device and AWS remote connection with following parameters.
 * Region: us-west-2
 * Access Key Id: AKIAWWERQ47PKOYG7DTN
 * Secret Access Key: 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
 * S3 Bucket Name: mentor-esd-pbu-device-fileupload-meif-1.4.0

An SA session was created with Linux Application Profile template. On profiling the session, following error was thrown in IDE:
{code:java}
An error occurred when starting profiling the device 'ipc127e_tools_qa'.
 The following agents are not compatible with the target system:
"CPU Utilization" requires LTTng Kernel Trace version 2.0 or higher but less than 2.7 (LTTng Kernel Trace was not found on the target); or it requires LTTng Kernel Trace version 2.0 or higher (LTTng Kernel Trace was not found on the target).
 "Function Calls" requires LTTng User Space Trace version 2.4 or higher, including feature 'noarch.mettools.tracescript.feature.userspace.context_support' (LTTng User Space Trace was not found on the target); or it requires LTTng User Space Trace (LTTng User Space Trace was not found on the target).
 "Function Calls Statistics" requires LTTng User Space Trace version 2.4 or higher, including feature 'noarch.mettools.tracescript.feature.userspace.context_support' (LTTng User Space Trace was not found on the target); or it requires LTTng User Space Trace (LTTng User Space Trace was not found on the target).
 "All LTTng kernel-space tracing events" requires LTTng Kernel Trace version 2.0 or higher (LTTng Kernel Trace was not found on the target).
Additional information:
 elf64.lttng.ust.fork.path /usr/lib/x86_64-linux-gnu/liblttng-ust-fork.so.0
 elf64.lttng.babeltrace.version BabelTrace Trace Viewer and Converter 1.5.6
 elf64.lttng.ust.pthread-wrapper.path /usr/lib/x86_64-linux-gnu/liblttng-ust-pthread-wrapper.so.0
 elf64.lttng.lttng.path /usr/bin/lttng
 elf64.lttng.ust.cyg-profile.path /usr/lib/x86_64-linux-gnu/liblttng-ust-cyg-profile.so.0
 noarch.mettools.tracescript.soinfo_xml true
 elf64.lttng.lttng-sessiond.version 2.10.6
 elf64.lttng.lttng-sessiond.path /usr/bin/lttng-sessiond
 noarch.mettools.tracescript.path /run/media/persistent/met_trace.sh
 elf64.lttng.lttng-consumerd.path /usr/lib/x86_64-linux-gnu/lttng/libexec/lttng-consumerd
 elf64.lttng.ust.libc-wrapper.path /usr/lib/x86_64-linux-gnu/liblttng-ust-libc-wrapper.so.0
 elf64.lttng.babeltrace.path /usr/bin/babeltrace
 elf64.lttng.ust.dl.path /usr/lib/x86_64-linux-gnu/liblttng-ust-dl.so.0
 noarch.mettools.tracescript.version 1.2.0
 elf64.lttng.lttng-consumerd.version 2.10.6
 elf64.lttng.lttng.version (LTTng Trace Control) 2.10.6 - KeKriek
 noarch.lttng.version.number 2.10.6
 noarch.mettools.tracescript.md5 910993a61ffafe9d5a6350585035ca60
 elf64.lttng.ust.cyg-profile-fast.path /usr/lib/x86_64-linux-gnu/liblttng-ust-cyg-profile-fast.so.0
{code}
After discussing the issue with [~tgatterw], it was found that aws-agent was running under "meif" user which was not part of "tracing" group.
{code:java}
omni@localhost:~$ ps aux | grep aws
 meif       548  1.3  0.2  26976  9208 ?        Ss   16:10   0:05 /usr/bin/aws-agent
 omni      1985  0.0  0.0   6384   892 pts/1    S+   16:17   0:00 grep aws
omni@localhost:~${code}{code}
{code:java}
omni@localhost:~$ cat /etc/group | grep tracing
 tracing:x:113:omni
omni@localhost:~${code}{code}
After adding "meif" user to "tracing" group and rebooting the device, *{{"test.lttng.userspace": "<NOT AVAILABLE>",}}* was changed to *{{"test.lttng.userspace": "true",}}* but *{{"test.lttng.kernel": "<NOT AVAILABLE>"}}* did not update.

I re-launched the profile session with UST and kernel agent, but same issue occurred because of kernel agent.

!image-2020-02-27-10-58-19-995.png|thumbnail!

If I add only UST agent i.e. Function Calls to the session, profiling session started. But on completion of the session, trace data was not imported into the session.

!image-2020-02-27-11-03-26-904.png|thumbnail!";s:10:"issuelinks";a:2:{s:3:"out";a:3:{s:6:"Blocks";a:1:{i:0;s:9:"MEIF-2293";}s:8:"fixed by";a:1:{i:0;s:9:"MEIF-2358";}s:10:"relates to";a:1:{i:0;s:9:"MEIF-2358";}}s:2:"in";a:1:{s:13:"Is Blocked By";a:1:{i:0;s:9:"MEIF-2358";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583829113;s:7:"updated";i:1589282644;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:8:"samr-338";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:8;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@2363bb02[id=1838,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 4,startDate=2020-03-01T01:37:12.078Z,endDate=2020-03-22T11:54:00.000Z,completeDate=2020-03-22T14:40:24.468Z,sequence=1838,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+04]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4843";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:92:"Remote Azure connection is able to be created when wrong Storage Container Name is specified";s:11:"description";s:868:"Remote Azure connection is able to be created when wrong Storage Container Name is specified. Attached are the three screenshots which provide further details on the issue. 
 *Azure 1.PNG:* I have added an invaid  Storage Container Name and the Finish button is still blue (assumption = should be disable)

*Azure 2.PNG:* Adding all the strings disable the Finish button.

*Azure 3.PNG:* Removing the strings one by one shows that adding the Storage Account Connection String disables the finish button and shows the error when invalid Storage Container Name  is provided.

Steps to reproduce the issue: 
 1- Go to Remote System Explorer
 2- Create New connection for Azure
 3- Add Invalid Storage Container Name
 4- The Finish button will not get disable.

_*Note:* Azure connection is able to be created when wrong Storage Container Name is specified_";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583159671;s:7:"updated";i:1589283947;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:8:"samr-338";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:9;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:7:"SA-4783";s:6:"sprint";a:2:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@59de698d[id=1837,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 3,startDate=2020-02-09T16:37:53.840Z,endDate=2020-03-01T02:43:00.000Z,completeDate=2020-03-01T01:36:45.408Z,sequence=1791,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+03]";i:1;s:319:"com.atlassian.greenhopper.service.sprint.Sprint@1e42b1d9[id=1839,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 5,startDate=2020-03-22T14:44:57.389Z,endDate=2020-04-13T01:01:00.000+01:00,completeDate=2020-04-13T01:13:51.592+01:00,sequence=1839,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+05]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4830";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:22:"Update SA IoT Document";s:11:"description";s:105:"Document SAMR-338 
Update the product version, copyright years, legal information, and OSS documentation";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:10:"depends on";a:1:{i:0;s:7:"SA-4786";}}s:2:"in";a:2:{s:10:"implements";a:1:{i:0;s:7:"SA-4783";}s:12:"is Tested By";a:1:{i:0;s:9:"MEIF-2292";}}}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586111956;s:7:"updated";i:1588072999;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:10;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:7:"SA-4783";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@14f120ed[id=1836,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 2,startDate=2020-01-18T23:10:46.876Z,endDate=2020-02-08T10:05:00.000Z,completeDate=2020-02-09T16:28:50.981Z,sequence=1790,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+02]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4788";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:29:"Update Java side Azure SDK #2";s:11:"description";s:106:"This is a follow-up issue for SA-4785 in case the SDK changed in a way that we need to adopt SA side code.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:7:"SA-4783";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:14:"Not Applicable";s:14:"resolutiondate";i:1578994569;s:7:"updated";i:1578994569;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:11;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:7:"SA-4783";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@14f120ed[id=1836,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 2,startDate=2020-01-18T23:10:46.876Z,endDate=2020-02-08T10:05:00.000Z,completeDate=2020-02-09T16:28:50.981Z,sequence=1790,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+02]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4787";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:27:"Update Java side AWS SDK #2";s:11:"description";s:106:"This is a follow-up issue for SA-4784 in case the SDK changed in a way that we need to adopt SA side code.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:7:"SA-4783";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:14:"Not Applicable";s:14:"resolutiondate";i:1578994520;s:7:"updated";i:1578994520;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:12;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:7:"SA-4783";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@14f120ed[id=1836,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 2,startDate=2020-01-18T23:10:46.876Z,endDate=2020-02-08T10:05:00.000Z,completeDate=2020-02-09T16:28:50.981Z,sequence=1790,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+02]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4786";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:46:"Apply for Java side OSS approvals for MEIF 1.4";s:11:"description";s:48:"Get the OSS approvals for the new Java side SDKs";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:7:"SA-4830";}s:10:"implements";a:1:{i:0;s:7:"SA-4783";}}}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:90000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580393152;s:7:"updated";i:1591190607;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:13;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:7:"SA-4783";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@11ec09c0[id=1835,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 1,startDate=2019-12-28T16:17:50.915Z,endDate=2020-01-18T03:12:00.000Z,completeDate=2020-01-18T23:03:48.577Z,sequence=1745,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+01]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4785";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:26:"Update Java side Azure SDK";s:11:"description";s:166:"Update the Java side AWS SDK version to the same version used for MEIF 1.4 in MEIF-1932

In case there are issues during updating there is a follow-up issue SA-4788";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:10:"depends on";a:1:{i:0;s:9:"MEIF-1932";}}s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:7:"SA-4783";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578994038;s:7:"updated";i:1578994038;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:14;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:7:"SA-4783";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@11ec09c0[id=1835,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 1,startDate=2019-12-28T16:17:50.915Z,endDate=2020-01-18T03:12:00.000Z,completeDate=2020-01-18T23:03:48.577Z,sequence=1745,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+01]";}s:12:"story_points";i:0;s:3:"key";s:7:"SA-4784";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:24:"Update Java side AWS SDK";s:11:"description";s:166:"Update the Java side AWS SDK version to the same version used for MEIF 1.4 in MEIF-1931

In case there are issues during updating there is a follow-up issue SA-4787";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:10:"depends on";a:1:{i:0;s:9:"MEIF-1931";}}s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:7:"SA-4783";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578994016;s:7:"updated";i:1578994016;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:15;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:7:"SA-4783";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:31:"Update Java side AWS/Azure SDKs";s:11:"description";s:0:"";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:14:"implemented by";a:6:{i:0;s:7:"SA-4786";i:1;s:7:"SA-4830";i:2;s:7:"SA-4784";i:3;s:7:"SA-4785";i:4;s:7:"SA-4787";i:5;s:7:"SA-4788";}}s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:8:"SAMR-338";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580560328;s:7:"updated";i:1581506096;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:16;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:3:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:8:"MELO-390";s:6:"status";s:9:"Completed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:65:"WINDOWS 10 :Build Failed using melomni-devshell.ps1 and Codebench";s:11:"description";s:203590:"*Issue:*
 -------
WINDOWS 10 : Build Failed using melomni-devshell.sh

*Steps to reproduce:*
 ---------------------
 1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200427_0400/omni-windows-x64-online-2.0.0.exe
 Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200428-222207/outputs/meif-windows-x64-1.4.0.zip

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) cd <mel-omni-installation-path>/mel-omni-os/2/

6) ./melomni-devshell.ps1 -c -d ../../aws_build -l ./meif/support/isar/industrial-meif -m 
industrial-pc
7) updated cloud variables in local.conf file

8)  ./melomni-devshell.ps1 -b -d ../../aws_build 

Expected Output:
--------------------------
Build should get completed without any error

Actual Output:
-------------------
Build get failed
{code}
PS C:\mgc\embedded\mel-omni-os\2> .\melomni-devshell.ps1 -b -d ..\..\aws-build
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-image
    service-stick-image
Parsing recipes: 100% |#######################################################################################################################################################| Time: 0:00:14
Parsing of 119 .bb files complete (0 cached, 119 parsed). 119 targets, 0 skipped, 1 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |####################################################################################################################################################| Time: 0:00:45
NOTE: No setscene tasks
NOTE: Executing Tasks
ERROR: meif-1.0-r0 do_dpkg_build: Error executing a python function in exec_python_func() autogenerated:

The stack trace of python calls that resulted in this exception/failure was:
File: 'exec_python_func() autogenerated', lineno: 2, function: <module>
     0001:
 *** 0002:do_dpkg_build(d)
     0003:
File: '/mel-omni-os/isar/meta/classes/dpkg-base.bbclass', lineno: 130, function: do_dpkg_build
     0126:python do_dpkg_build() {
     0127:    lock = bb.utils.lockfile(d.getVar("REPO_ISAR_DIR") + "/isar.lock",
     0128:                             shared=True)
     0129:    bb.build.exec_func("dpkg_do_mounts", d)
 *** 0130:    bb.build.exec_func("dpkg_runbuild", d)
     0131:    bb.build.exec_func("dpkg_undo_mounts", d)
     0132:    bb.utils.unlockfile(lock)
     0133:}
     0134:
File: '/mel-omni-os/isar/bitbake/lib/bb/build.py', lineno: 249, function: exec_func
     0245:    with bb.utils.fileslocked(lockfiles):
     0246:        if ispython:
     0247:            exec_func_python(func, d, runfile, cwd=adir)
     0248:        else:
 *** 0249:            exec_func_shell(func, d, runfile, cwd=adir)
     0250:
     0251:    try:
     0252:        curcwd = os.getcwd()
     0253:    except:
File: '/mel-omni-os/isar/bitbake/lib/bb/build.py', lineno: 450, function: exec_func_shell
     0446:    with open(fifopath, 'r+b', buffering=0) as fifo:
     0447:        try:
     0448:            bb.debug(2, "Executing shell function %s" % func)
     0449:            with open(os.devnull, 'r+') as stdin, logfile:
 *** 0450:                bb.process.run(cmd, shell=False, stdin=stdin, log=logfile, extrafiles=[(fifo,readfifo)])
     0451:        finally:
     0452:            os.unlink(fifopath)
     0453:
     0454:    bb.debug(2, "Shell function %s finished" % func)
File: '/mel-omni-os/isar/bitbake/lib/bb/process.py', lineno: 182, function: run
     0178:        if not stderr is None:
     0179:            stderr = stderr.decode("utf-8")
     0180:
     0181:    if pipe.returncode != 0:
 *** 0182:        raise ExecutionError(cmd, pipe.returncode, stdout, stderr)
     0183:    return stdout, stderr
Exception: bb.process.ExecutionError: Execution of '/home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/run.dpkg_runbuild.43501' failed with exit code 2:
dpkg-buildpackage: info: source package meif
dpkg-buildpackage: info: source version 1.0
dpkg-buildpackage: info: source distribution stable
dpkg-buildpackage: info: source changed by Fahad Arslan <fahad_arslan@mentor.com>
 dpkg-source -I --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean
   dh_testdir
   dh_auto_clean
   dh_clean
        rm -f debian/debhelper-build-stamp
        rm -rf debian/.debhelper/
        rm -f -- debian/meif.substvars debian/files
        rm -fr -- debian/meif/ debian/tmp/
        find .  \( \( \
                \( -path .\*/.git -o -path .\*/.svn -o -path .\*/.bzr -o -path .\*/.hg -o -path .\*/CVS -o -path .\*/.pc -o -path .\*/_darcs \) -prune -o -type f -a \
                \( -name '#*#' -o -name '.*~' -o -name '*~' -o -name DEADJOE \
                 -o -name '*.orig' -o -name '*.rej' -o -name '*.bak' \
                 -o -name '.*.orig' -o -name .*.rej -o -name '.SUMS' \
                 -o -name TAGS -o \( -path '*/.deps/*' -a -name '*.P' \) \
                \) -exec rm -f {} + \) -o \
                \( -type d -a -name autom4te.cache -prune -exec rm -rf {} + \) \)
 dpkg-source -I -b .
dpkg-source: warning: no source format specified in debian/source/format, see dpkg-source(1)
dpkg-source: warning: source directory 'meif' is not <sourcepackage>-<upstreamversion> 'meif-1.0'
dpkg-source: info: using source format '1.0'
dpkg-source: info: building meif in meif_1.0.tar.gz
dpkg-source: info: building meif in meif_1.0.dsc
 debian/rules build
dh build
   dh_testdir
   dh_update_autotools_config
   debian/rules override_dh_auto_configure
make[1]: Entering directory '/home/builder/meif/mel-omni-os/meif'
dh_auto_configure --    -DDEMO_ENABLE_TRACING=off    -DBUILD_VERBOSE=on    -DOS=linux    -DCLOUD=aws    -DLINUX_LIBDIR=        -DAWS_IOT_HOST_MQTT_ADDR=ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com     -DAWS_IOT_HOST_MQTT_PORT=8883     -DAWS_IOT_CLIENT_MQTT_CLIENT_ID=ravi_iot     -DAWS_IOT_CLIENT_MY_THING_NAME=ravi_iot     -DAWS_IOT_SECURITY_ROOT_CA_FILENAME=aws-rootca.pem     -DAWS_IOT_SECURITY_CERTIFICATE_FILENAME=aws-devcrt.pem     -DAWS_IOT_SECURITY_PRIVATE_KEY_FILENAME=aws-prvkey.pem     -DAWS_USE_THREADING=on     -DAWS_IOT_CERTS_DIR=/home/builder/meif     -DAWS_IOT_CERTS_TGT_DIR=/etc/ssl/certs     -DMEIF_AGENT_USES_SWUPDATE=yes    -DMEIF_AGENT_AUTOSTART_SERVICE=/home/builder/meif/meif-agent-autostart.service    -DMEIF_AGENT_CONFIG_SERVICE=/home/builder/meif/meif-agent-config.service    -DMEIF_AGENT_CONFIG_SCRIPT=/home/builder/meif/meif-agent-config    -DMEIF_DOCKER_DAEMON_SERVICE=/home/builder/meif/dummy.txt    -DMEIF_RUN_TIME_CONFIGURATION=/home/builder/meif/meif.ini
        install -d obj-x86_64-linux-gnu
        cd obj-x86_64-linux-gnu && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=None -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_INSTALL_LOCALSTATEDIR=/var -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON "-GUnix Makefiles" -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu -DDEMO_ENABLE_TRACING=off -DBUILD_VERBOSE=on -DOS=linux -DCLOUD=aws -DLINUX_LIBDIR= -DAWS_IOT_HOST_MQTT_ADDR=ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com -DAWS_IOT_HOST_MQTT_PORT=8883 -DAWS_IOT_CLIENT_MQTT_CLIENT_ID=ravi_iot -DAWS_IOT_CLIENT_MY_THING_NAME=ravi_iot -DAWS_IOT_SECURITY_ROOT_CA_FILENAME=aws-rootca.pem -DAWS_IOT_SECURITY_CERTIFICATE_FILENAME=aws-devcrt.pem -DAWS_IOT_SECURITY_PRIVATE_KEY_FILENAME=aws-prvkey.pem -DAWS_USE_THREADING=on -DAWS_IOT_CERTS_DIR=/home/builder/meif -DAWS_IOT_CERTS_TGT_DIR=/etc/ssl/certs -DMEIF_AGENT_USES_SWUPDATE=yes -DMEIF_AGENT_AUTOSTART_SERVICE=/home/builder/meif/meif-agent-autostart.service -DMEIF_AGENT_CONFIG_SERVICE=/home/builder/meif/meif-agent-config.service -DMEIF_AGENT_CONFIG_SCRIPT=/home/builder/meif/meif-agent-config -DMEIF_DOCKER_DAEMON_SERVICE=/home/builder/meif/dummy.txt -DMEIF_RUN_TIME_CONFIGURATION=/home/builder/meif/meif.ini ..
-- The C compiler identification is GNU 8.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
/home/builder/meif/dummy.txt does not exist.
/home/builder/meif/dummy.txt does not exist.
/home/builder/meif/dummy.txt does not exist.
/home/builder/meif/dummy.txt does not exist.
/home/builder/meif/dummy.txt does not exist.
-- Configuring done
WARNING: Target "meif_docker_daemon" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
WARNING: Target "shadow_sample" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
WARNING: Target "shadow_sample_console_echo" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
WARNING: Target "subscribe_publish_library_sample" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
WARNING: Target "subscribe_publish_sample" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
WARNING: Target "agent" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
-- Generating done
CMake Warning:
  Manually-specified variables were not used by the project:

    CMAKE_EXPORT_NO_PACKAGE_REGISTRY
    CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY
    CMAKE_INSTALL_LIBDIR
    CMAKE_INSTALL_LOCALSTATEDIR
    CMAKE_INSTALL_SYSCONFDIR


-- Build files have been written to: /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu
make[1]: Leaving directory '/home/builder/meif/mel-omni-os/meif'
   debian/rules override_dh_auto_build
make[1]: Entering directory '/home/builder/meif/mel-omni-os/meif'
dh_auto_build  --  agent
        cd obj-x86_64-linux-gnu && make -j1 agent
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -S/home/builder/meif/mel-omni-os/meif -B/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 agent
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -S/home/builder/meif/mel-omni-os/meif -B/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles 62
make -f CMakeFiles/Makefile2 samples/aws/CMakeFiles/agent.dir/all
make[4]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f CMakeFiles/meif.dir/build.make CMakeFiles/meif.dir/depend
make[5]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/builder/meif/mel-omni-os/meif /home/builder/meif/mel-omni-os/meif /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/meif.dir/DependInfo.cmake --color=
Scanning dependencies of target meif
make[5]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f CMakeFiles/meif.dir/build.make CMakeFiles/meif.dir/build
make[5]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
[  1%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_buffer.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_buffer.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_buffer.c
[  3%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_common.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_common.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_common.c
[  4%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_lite_client.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_lite_client.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_lite_client.c
[  6%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_meif_socket.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_meif_socket.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_meif_socket.c
[  8%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_parser.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_parser.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_parser.c
[  9%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_ssl.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_ssl.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_ssl.c
[ 11%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt.c
[ 12%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_addresses.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_addresses.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_addresses.c
[ 14%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_empty_tree.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_empty_tree.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_empty_tree.c
[ 16%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_overlay.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_overlay.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_overlay.c
[ 17%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_region.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_region.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_region.c
[ 19%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_ro.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_ro.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_ro.c
[ 20%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_rw.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_rw.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_rw.c
[ 22%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_strerror.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_strerror.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_strerror.c
[ 24%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_sw.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_sw.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_sw.c
[ 25%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_wip.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_wip.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_wip.c
[ 27%] Building C object CMakeFiles/meif.dir/framework/common/parson/parson.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/parson/parson.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/parson/parson.c
[ 29%] Building C object CMakeFiles/meif.dir/framework/common/utils/dict_container.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/dict_container.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/dict_container.c
[ 30%] Building C object CMakeFiles/meif.dir/framework/common/utils/downloader.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/downloader.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/downloader.c
[ 32%] Building C object CMakeFiles/meif.dir/framework/common/utils/inet_pton.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/inet_pton.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/inet_pton.c
[ 33%] Building C object CMakeFiles/meif.dir/framework/common/utils/utf8_decode.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/utf8_decode.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/utf8_decode.c
[ 35%] Building C object CMakeFiles/meif.dir/framework/common/utils/util_str.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/util_str.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/util_str.c
[ 37%] Building C object CMakeFiles/meif.dir/framework/common/utils/util_uri.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/util_uri.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/util_uri.c
[ 38%] Building C object CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/devcmd_svcs/devcmd.c
[ 40%] Building C object CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/devcmd_svcs/devcmd_list.c
[ 41%] Building C object CMakeFiles/meif.dir/framework/services/devcmd_svcs/linux/linux_devcmd.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/devcmd_svcs/linux/linux_devcmd.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/devcmd_svcs/linux/linux_devcmd.c
[ 43%] Building C object CMakeFiles/meif.dir/framework/services/trace_svcs/trace_cmds.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/trace_svcs/trace_cmds.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/trace_cmds.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/trace_cmds.c:22:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:27: warning: "AWS_BUILD" redefined
 #define AWS_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/trace_cmds.c:22:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:28: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/trace_cmds.c:22:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:29: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/trace_cmds.c:22:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 45%] Building C object CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_agent.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_agent.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.c:45:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:27: warning: "AWS_BUILD" redefined
 #define AWS_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.c:45:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:28: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.c:45:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:29: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.c:45:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 46%] Building C object CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_cmds.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_cmds.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_cmds.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_cmds.c:26:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:27: warning: "AWS_BUILD" redefined
 #define AWS_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_cmds.c:26:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:28: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_cmds.c:26:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:29: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_cmds.c:26:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 48%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_file.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_file.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_file.c
[ 50%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_locks.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_locks.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_locks.c
[ 51%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_memory.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_memory.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_memory.c
[ 53%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_system.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_system.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_system.c
/home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_system.c: In function 'env_reboot':
/home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_system.c:202:5: warning: ignoring return value of 'system', declared with attribute warn_unused_result [-Wunused-result]
     system("sudo systemctl reboot");
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[ 54%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_thread.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_thread.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_thread.c
[ 56%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_time.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_time.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_time.c
[ 58%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/external_libs/jsmn/jsmn.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/external_libs/jsmn/jsmn.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn/jsmn.c
[ 59%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/threads_meif_wrapper.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/threads_meif_wrapper.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif/threads_meif_wrapper.c
[ 61%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/timer_meif_wrapper.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/timer_meif_wrapper.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif/timer_meif_wrapper.c
[ 62%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_interface.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_interface.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_jobs_interface.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_jobs_interface.h:37,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_jobs_interface.c:16:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 64%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_json.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_json.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_jobs_json.c
[ 66%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_topics.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_topics.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_jobs_topics.c
[ 67%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_types.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_types.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_jobs_types.c
[ 69%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_json_utils.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_json_utils.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_json_utils.c
[ 70%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client.c:45:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 72%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_common_internal.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_common_internal.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_common_internal.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_common_internal.c:43:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 74%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_connect.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_connect.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_connect.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_connect.c:44:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 75%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_publish.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_publish.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_publish.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h:51,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_publish.c:43:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 77%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_subscribe.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_subscribe.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_subscribe.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h:51,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_subscribe.c:42:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 79%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_unsubscribe.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_unsubscribe.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_unsubscribe.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h:51,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_unsubscribe.c:42:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 80%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_yield.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_yield.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_yield.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h:51,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_yield.c:42:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 82%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow.c:26:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 83%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_actions.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_actions.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow_actions.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_shadow_interface.h:40,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_shadow_actions.h:23,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow_actions.c:25:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 85%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_json.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_json.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow_json.c
[ 87%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_records.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_records.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow_records.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_shadow_interface.h:40,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_shadow_records.h:25,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow_records.c:25:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 88%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/platform/linux/mbedtls/network_mbedtls_wrapper.c.o
/usr/bin/cc -DAWS_BUILD -DAWS_DEMO_CMDS -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/platform/linux/mbedtls/network_mbedtls_wrapper.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls/network_mbedtls_wrapper.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls/network_mbedtls_wrapper.c:23:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 90%] Linking C static library build/None/libmeif.a
/usr/bin/cmake -P CMakeFiles/meif.dir/cmake_clean_target.cmake
/usr/bin/cmake -E cmake_link_script CMakeFiles/meif.dir/link.txt --verbose=1
/usr/bin/ar qc build/None/libmeif.a  CMakeFiles/meif.dir/framework/common/http/src/http_buffer.c.o CMakeFiles/meif.dir/framework/common/http/src/http_common.c.o CMakeFiles/meif.dir/framework/common/http/src/http_lite_client.c.o CMakeFiles/meif.dir/framework/common/http/src/http_meif_socket.c.o CMakeFiles/meif.dir/framework/common/http/src/http_parser.c.o CMakeFiles/meif.dir/framework/common/http/src/http_ssl.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_addresses.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_empty_tree.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_overlay.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_region.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_ro.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_rw.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_strerror.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_sw.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_wip.c.o CMakeFiles/meif.dir/framework/common/parson/parson.c.o CMakeFiles/meif.dir/framework/common/utils/dict_container.c.o CMakeFiles/meif.dir/framework/common/utils/downloader.c.o CMakeFiles/meif.dir/framework/common/utils/inet_pton.c.o CMakeFiles/meif.dir/framework/common/utils/utf8_decode.c.o CMakeFiles/meif.dir/framework/common/utils/util_str.c.o CMakeFiles/meif.dir/framework/common/utils/util_uri.c.o CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd.c.o CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o CMakeFiles/meif.dir/framework/services/devcmd_svcs/linux/linux_devcmd.c.o CMakeFiles/meif.dir/framework/services/trace_svcs/trace_cmds.c.o CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_agent.c.o CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_cmds.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_file.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_locks.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_memory.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_system.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_thread.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_time.c.o CMakeFiles/meif.dir/framework/cloud/aws/external_libs/jsmn/jsmn.c.o CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/threads_meif_wrapper.c.o CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/timer_meif_wrapper.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_interface.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_json.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_topics.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_types.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_json_utils.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_common_internal.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_connect.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_publish.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_subscribe.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_unsubscribe.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_yield.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_actions.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_json.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_records.c.o CMakeFiles/meif.dir/framework/cloud/aws/platform/linux/mbedtls/network_mbedtls_wrapper.c.o
/usr/bin/ranlib build/None/libmeif.a
make[5]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
[ 90%] Built target meif
make -f samples/aws/CMakeFiles/agent.dir/build.make samples/aws/CMakeFiles/agent.dir/depend
make[5]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/builder/meif/mel-omni-os/meif /home/builder/meif/mel-omni-os/meif/samples/aws /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws/CMakeFiles/agent.dir/DependInfo.cmake --color=
Scanning dependencies of target agent
make[5]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f samples/aws/CMakeFiles/agent.dir/build.make samples/aws/CMakeFiles/agent.dir/build
make[5]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
[ 91%] Building C object samples/aws/CMakeFiles/agent.dir/aws.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cc -DAWS_BUILD -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/agent.dir/aws.c.o   -c /home/builder/meif/mel-omni-os/meif/samples/aws/aws.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws.c:42:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:27: warning: "AWS_BUILD" redefined
 #define AWS_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws.c:42:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:28: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws.c:42:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:29: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws.c:42:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 93%] Building C object samples/aws/CMakeFiles/agent.dir/aws_devcmds.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cc -DAWS_BUILD -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/agent.dir/aws_devcmds.c.o   -c /home/builder/meif/mel-omni-os/meif/samples/aws/aws_devcmds.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws_devcmds.c:24:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:27: warning: "AWS_BUILD" redefined
 #define AWS_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws_devcmds.c:24:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:28: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws_devcmds.c:24:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:29: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws_devcmds.c:24:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 95%] Building C object samples/aws/CMakeFiles/agent.dir/linux/aws_trace_hooks.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cc -DAWS_BUILD -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/agent.dir/linux/aws_trace_hooks.c.o   -c /home/builder/meif/mel-omni-os/meif/samples/aws/linux/aws_trace_hooks.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/aws_trace_hooks.c:25:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:27: warning: "AWS_BUILD" redefined
 #define AWS_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/aws_trace_hooks.c:25:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:28: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/aws_trace_hooks.c:25:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:29: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/aws_trace_hooks.c:25:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 96%] Building C object samples/aws/CMakeFiles/agent.dir/linux/linux_aws.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cc -DAWS_BUILD -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/agent.dir/linux/linux_aws.c.o   -c /home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:31:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:27: warning: "AWS_BUILD" redefined
 #define AWS_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:31:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:28: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:31:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:29: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:31:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'aws_get_mem_total':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:395:31: warning: format '%u' expects argument of type 'unsigned int', but argument 4 has type 'uint64_t' {aka 'long unsigned int'} [-Wformat=]
     snprintf(buf, buf_size, "%u kB", value);
                              ~^      ~~~~~
                              %lu
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'aws_get_swap_total':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:402:31: warning: format '%u' expects argument of type 'unsigned int', but argument 4 has type 'uint64_t' {aka 'long unsigned int'} [-Wformat=]
     snprintf(buf, buf_size, "%u kB", value);
                              ~^      ~~~~~
                              %lu
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'main':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:445:49: warning: format '%lu' expects argument of type 'long unsigned int', but argument 3 has type 'int' [-Wformat=]
         printf("\r\nError: \'%s\' larger than %lu\r\n", app_name, ENV_MAX_PATH);
                                               ~~^
                                               %u
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'aws_get_cpu_usage':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:338:5: warning: ignoring return value of 'fscanf', declared with attribute warn_unused_result [-Wunused-result]
     fscanf(f, "%s %" SCNu64 "%" SCNu64 "%" SCNu64 "%" SCNu64, cpu, &user, &nice, &sys, &idle);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'get_from_meminfo':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:362:9: warning: ignoring return value of 'fgets', declared with attribute warn_unused_result [-Wunused-result]
         fgets(buf, 100, f);
         ^~~~~~~~~~~~~~~~~~
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:365:5: warning: ignoring return value of 'fscanf', declared with attribute warn_unused_result [-Wunused-result]
     fscanf(f, "%s %" SCNu64, buf, value);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'main':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:454:9: warning: ignoring return value of 'fscanf', declared with attribute warn_unused_result [-Wunused-result]
         fscanf(pid_file, "%d", &agent_pid);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:608:5: warning: ignoring return value of 'chdir', declared with attribute warn_unused_result [-Wunused-result]
     chdir("/run/media/persistent");
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[ 98%] Building C object samples/aws/CMakeFiles/agent.dir/linux/swupdate_ipc.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cc -DAWS_BUILD -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/agent.dir/linux/swupdate_ipc.c.o   -c /home/builder/meif/mel-omni-os/meif/samples/aws/linux/swupdate_ipc.c
[100%] Linking C executable ../../build/None/aws-agent
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cmake -E cmake_link_script CMakeFiles/agent.dir/link.txt --verbose=1
/usr/bin/cc -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2  -Wl,-z,relro CMakeFiles/agent.dir/aws.c.o CMakeFiles/agent.dir/aws_devcmds.c.o CMakeFiles/agent.dir/linux/aws_trace_hooks.c.o CMakeFiles/agent.dir/linux/linux_aws.c.o CMakeFiles/agent.dir/linux/swupdate_ipc.c.o  -o ../../build/None/aws-agent -Wl,--start-group -lmbedtls -lmbedcrypto -lmbedx509 -ldl -lpthread -lcurl -lswupdate ../../build/None/libmeif.a -lgcc -lc -lg -lm -lstdc++ -Wl,--end-group
Generating aws-agent.bin file
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/objcopy -O binary /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/build/None/aws-agent /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/build/None/aws-agent.bin
make[5]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
[100%] Built target agent
make[4]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -E cmake_progress_start /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles 0
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make[1]: Leaving directory '/home/builder/meif/mel-omni-os/meif'
   dh_auto_test
 fakeroot debian/rules binary
dh binary
   dh_testroot
   dh_prep
        rm -f -- debian/meif.substvars
        rm -fr -- debian/.debhelper/generated/meif/ debian/meif/ debian/tmp/
   dh_installdirs
        install -d debian/meif
   dh_auto_install
        cd obj-x86_64-linux-gnu && make -j1 install DESTDIR=/home/builder/meif/mel-omni-os/meif/debian/meif AM_UPDATE_INFO_DIR=no
make[1]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -S/home/builder/meif/mel-omni-os/meif -B/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/progress.marks
make -f CMakeFiles/Makefile2 all
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f CMakeFiles/meif.dir/build.make CMakeFiles/meif.dir/depend
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/builder/meif/mel-omni-os/meif /home/builder/meif/mel-omni-os/meif /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/meif.dir/DependInfo.cmake --color=
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f CMakeFiles/meif.dir/build.make CMakeFiles/meif.dir/build
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make[3]: Nothing to be done for 'CMakeFiles/meif.dir/build'.
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
[100%] Built target meif
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -E cmake_progress_start /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles 0
make -f CMakeFiles/Makefile2 preinstall
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make[2]: Nothing to be done for 'preinstall'.
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
Install the project...
/usr/bin/cmake -P cmake_install.cmake
-- Install configuration: "None"
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/var/local/meif/meif.ini
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/lib/libmeif.a
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/docker/meifdockerdaemon/meif_docker_daemon.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/external_libs/jsmn/jsmn.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_json.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_topics.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_json_utils.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_log.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_actions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_json.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_json_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_key.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_records.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_version.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_lib_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_target_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/network_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/threads_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/timer_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/platform/linux/common/timer_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/platform/linux/mbedtls/network_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/platform/linux/pthread/threads_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/platform/meif/threads_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/platform/meif/timer_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/platform/meif/wolfssl/network_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/samples/linux/jobs_sample/aws_iot_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/tests/integration/include/aws_iot_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/tests/integration/include/aws_iot_integ_tests_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/tests/integration/include/aws_iot_test_integration_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/tests/unit/include/aws_iot_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/tests/unit/include/aws_iot_tests_unit_helper_functions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/tests/unit/include/aws_iot_tests_unit_shadow_helper.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/tests/unit/tls_mock/aws_iot_tests_unit_mock_tls_params.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/tests/unit/tls_mock/network_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/adapters/esp8266_mock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/adapters/linux_time.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/agenttime.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/azure_base32.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/azure_base64.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/buffer_.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/condition.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/connection_string_parser.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/consolelogger.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/const_defines.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/constbuffer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/constbuffer_array.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/constbuffer_array_batcher.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/constmap.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/crt_abstractions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/dns_resolver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/doublylinkedlist.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/envvariable.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/etwlogger_driver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/gb_rand.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/gb_stdio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/gb_time.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/gballoc.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/gbnetwork.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/hmac.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/hmacsha256.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/http_proxy_io.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/httpapi.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/httpapiex.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/httpapiexsas.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/httpheaders.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/lock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/logging_stacktrace.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/map.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/memory_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/optimize_size.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/optionhandler.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/refcount.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/sastoken.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/sha-private.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/sha.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/shared_util_options.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/singlylinkedlist.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/socketio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/srw_lock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/stdint_ce6.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/string_token.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/string_tokenizer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/string_tokenizer_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/string_utils.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/strings.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/strings_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tcpsocketconnection_c.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/threadapi.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tickcounter.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/timer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_bearssl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_cyclonessl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_cyclonessl_socket.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_mbedtls.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_openssl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_options.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_schannel.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_wolfssl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/uniqueid.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/urlencode.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/utf8_checker.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/uuid.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/uws_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/uws_frame_encoder.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/vector.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/vector_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/vector_types_internal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/ws_url.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/wsio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/x509_openssl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/x509_schannel.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/xio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/xlogging.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/pal/generic/refcount_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/pal/inc/sntp.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/pal/inc/socket_async.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/pal/ios-osx/socket_async_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/pal/ios-osx/tlsio_appleios.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/pal/linux/refcount_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/pal/linux/socket_async_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/pal/lwip/sntp_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/pal/mbed_os5/refcount_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/pal/windows/refcount_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/pal/windows/socket_async_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/dns_resolver_ut/win32_fake_linux/socket_async_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_constbuffer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_constbuffer_array.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_constbuffer_array_renames.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_constbuffer_renames.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_map.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_memory_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_memory_data_renames.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_string_tokenizer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_strings.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/refcount_ut/some_refcount_impl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/socket_async_ut/keep_alive.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/socket_async_ut/test_defines.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/socket_async_ut/win32_fake_linux/socket_async_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/template_ut/target/callee.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/template_ut/target/target.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/tickcounter_freertos_ut/freertos/FreeRTOS.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/tickcounter_freertos_ut/freertos/task.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/tlsio_options_ut/gballoc_ut_impl_1.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/tests/tlsio_options_ut/gballoc_ut_impl_2.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/ctest/inc/aux_inc/inttypes.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/ctest/inc/aux_inc/stdbool.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/ctest/inc/aux_inc/stdint.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/ctest/inc/ctest.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/ctest/inc/ctest_windows.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/globalmock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromockcallmacros.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromockcharstararenullterminatedstrings.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromockcommon.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromockenumtostring.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromockexception.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromocktestmutex.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromocktestrunnerhooks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockcallargument.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockcallargumentbase.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockcallcomparer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockcallrecorder.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockmethodcall.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockmethodcallbase.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockresultvalue.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockvalue.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockvaluebase.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/nicecallcomparer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/runtimemock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/stdafx.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/strictorderedcallcomparer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/strictunorderedcallcomparer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/targetver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/threadsafeglobalmock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/timediscretemicromock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/timediscretemicromockcallmacros.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/tools/micromockgenerator/stdafx.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/tools/micromockgenerator/targetver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/hypothetic_module.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/hypothetic_module_interfaces.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/resource.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/stdafx.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/stdafx_c.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/targetver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/sal/inc/no_sal2.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/sal/inc/sal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/testrunner/inc/ctrs_sprintf.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/testrunner/inc/testmutex.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/c-utility/testtools/testrunner/inc/testrunnerswitcher.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/certs/certs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/blob.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_authorization.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_diagnostic.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_edge.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_hsm_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_ll_uploadtoblob.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_private.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_retry_control.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_internal_consts.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_transport_ll_private.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_cbs_auth.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_connection.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_device.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_messenger.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_telemetry_messenger.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_twin_messenger.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_mqtt_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransportamqp_methods.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/message_queue.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/uamqp_messaging.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_core.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_core_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_core_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_options.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_version.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_device_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_device_client_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_message.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_module_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_module_client_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_transport_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothubtransportamqp.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothubtransportamqp_websockets.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothubtransporthttp.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothubtransportmqtt.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothubtransportmqtt_websockets.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_client_sample_module_filter/iothub_client_sample_module_filter.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_client_sample_module_method_invoke/iothub_client_sample_module_method_invoke.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_client_sample_module_sender/iothub_client_sample_module_sender.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_client_sample_mqtt_dm/iothub_client_sample_mqtt_dm.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_client_sample_mqtt_esp8266/iothub_client_sample_mqtt_esp8266.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_ll_client_sample_amqp_shared/iothub_ll_client_sample_amqp_shared.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/common_device_method_e2e/iothubclient_common_device_method_e2e.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/common_dt_e2e/iothubclient_common_dt_e2e.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/common_e2e/iothubclient_common_e2e.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/common_longhaul/iothub_client_common_longhaul.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/common_longhaul/iothub_client_statistics.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/iothubtransport_mqtt_common_ut/real_constbuffer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/iothubtransportmqtt_ut/real_constbuffer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_amqp_c2d/longhaul_amqp_c2d.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_amqp_device_methods/longhaul_amqp_device_methods.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_amqp_device_twin_desired/longhaul_amqp_device_twin_desired.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_amqp_device_twin_reported/longhaul_amqp_device_twin_reported.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_amqp_telemetry/longhaul_amqp_telemetry.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_mqtt_c2d/longhaul_mqtt_c2d.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_mqtt_device_methods/longhaul_mqtt_device_methods.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_mqtt_device_twin_desired/longhaul_mqtt_device_twin_desired.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_mqtt_device_twin_reported/longhaul_mqtt_device_twin_reported.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_mqtt_telemetry/longhaul_mqtt_telemetry.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_deviceconfiguration.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_devicemethod.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_devicetwin.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_messaging.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_messaging_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_registrymanager.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_sc_version.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_service_client_auth.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/adapters/hsm_client_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/adapters/hsm_client_http_edge.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/adapters/hsm_client_key.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/adapters/hsm_client_riot.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/adapters/hsm_client_tpm.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/iothub_auth_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/prov_auth_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/prov_sasl_tpm.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/prov_transport_amqp_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/prov_transport_mqtt_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/prov_transport_private.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/iothub_security_factory.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_client_const.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_device_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_device_ll_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_edge_trusted_certificates.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_security_factory.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport_amqp_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport_amqp_ws_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport_http_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport_mqtt_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport_mqtt_ws_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/tests/common_prov_e2e/common_prov_e2e.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/tests/common_prov_e2e/prov_hsm/symm_key.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/tests/common_prov_e2e/prov_hsm/tpm_msr.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_client/tests/common_prov_e2e/prov_hsm/x509_info.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_attestation_mechanism.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_bulk_operation.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_device_capabilities.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_device_registration_state.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_enrollment.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_json_const.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_models.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_models_serializer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_query.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_shared_helpers.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_tpm_attestation.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_twin.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_x509_attestation.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_service_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/agenttypesystem.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/codefirst.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/commanddecoder.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/datamarshaller.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/datapublisher.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/dataserializer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/iotdevice.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/jsondecoder.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/jsonencoder.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/methodreturn.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/multitree.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/schema.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/schemalib.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/schemaserializer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/samples/devicemethod_simplesample/devicemethod_simplesample.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/samples/devicetwin_simplesample/devicetwin_simplesample.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/samples/remote_monitoring/remote_monitoring.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_amqp/simplesample_amqp.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/simplesample_http.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/tirtos/cc3200/Board.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/tirtos/cc3200/CC3200_LAUNCHXL.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/tirtos/cc3200/UARTUtils.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/tirtos/cc3200/pin_mux_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/tirtos/cc3200/wificonfig.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_mqtt/simplesample_mqtt.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/tests/codefirst_cpp_ut/c_bool_size.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/tests/codefirst_ut/c_bool_size.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/tests/datamarshaller_ut/real_agenttypesystem.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/tests/serializer_dt_ut/real_crt_abstractions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/tests/serializer_dt_ut/real_vector.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/serializer/tests/serializer_e2e/MacroE2EModelAction.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/testtools/iothub_test/inc/iothub_account.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/testtools/iothub_test/inc/iothubtest.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/testtools/real_test_files/inc/real_parson.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_accepted.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_address_string.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_amqp_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_amqp_sequence.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_amqp_value.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_annotations.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_application_properties.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_attach.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_begin.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_close.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_connection_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_delivery_annotations.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_delivery_number.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_delivery_tag.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_detach.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_disposition.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_end.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_fields.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_filter_set.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_flow.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_footer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_handle.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_header.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_ietf_language_tag.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_link_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_annotations.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_format.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_id_binary.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_id_string.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_id_ulong.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_id_uuid.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_milliseconds.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_modified.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_node_properties.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_open.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_properties.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_received.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_receiver_settle_mode.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_rejected.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_released.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_role.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_challenge.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_code.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_init.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_mechanisms.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_outcome.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_response.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_seconds.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sender_settle_mode.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sequence_no.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_session_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_source.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_target.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_terminus_durability.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_terminus_expiry_policy.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_transfer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_transfer_number.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_frame_codec.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_management.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqpvalue.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqpvalue_to_string.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/async_operation.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/cbs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/connection.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/frame_codec.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/header_detect_io.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/link.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/message.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/message_receiver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/message_sender.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/messaging.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_anonymous.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_frame_codec.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_mechanism.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_mssbcbs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_plain.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_server_io.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_server_mechanism.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/saslclientio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/server_protocol_io.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/session.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/socket_listener.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/uamqp.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/samples/local_server_tls_sample/tls_server_io.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/uamqp/samples/websockets_sample/iothub_certs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/umqtt/inc/azure_umqtt_c/mqtt_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/umqtt/inc/azure_umqtt_c/mqtt_codec.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/umqtt/inc/azure_umqtt_c/mqtt_message.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/umqtt/inc/azure_umqtt_c/mqttconst.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/azure/umqtt/samples/mqtt_client_sample/mqtt_client_sample.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/hawkbit/hawkbit.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/hawkbit/hawkbit_api.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/examples/callbacks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/examples/critical_section.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_communication.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_config_setup.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_configuration.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_custom_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_data_source_configuration.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_event.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_json_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_list.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_log_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_random.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_store.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_stream_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_time_series.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/include/mcl/meif_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/lib/cJSON/cJSON.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/lib/zf_log/zf_log.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/base64.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/communication.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/configuration.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/custom_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/data_source_configuration.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/data_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/definitions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/event.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/event_list.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/file.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/file_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/hmac.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/http_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/http_client_libcurl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/http_client_nucleus.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/http_definitions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/http_processor.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/http_request.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/http_response.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/json.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/json_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/jwt.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/list.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/log_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/memory.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/random.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/security.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/security_handler.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/security_libcrypto.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/storage.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/store.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/stream_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/string_array.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/string_type.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/string_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/time_series.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/src/time_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/test/lib/CMock/src/cmock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/test/lib/CMock/src/cmock_internals.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/test/lib/CMock/vendor/unity/src/unity.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/mindconnect/test/lib/CMock/vendor/unity/src/unity_internals.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/http/http_lite.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/http/http_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/http/inc/http_buffer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/http/inc/http_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/http/inc/http_defs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/http/inc/http_lite_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/http/inc/http_lite_int.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/http/inc/http_parser.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/http/inc/http_socket.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/http/inc/http_ssl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/libfdt/fdt.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/libfdt/libfdt.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/libfdt/libfdt_env.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/libfdt/libfdt_internal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/parson/parson.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/utils/dict_container.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/utils/downloader.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/utils/inet_aton.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/utils/parse_ini.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/utils/utf8_decode.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/utils/util_str.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/utils/util_uri.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/utils/utils_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/env/include/env.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/env/include/env_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/env/include/env_file.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/env/include/env_locks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/env/include/env_memory.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/env/include/env_system.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/env/include/env_thread.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/env/include/env_time.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/env/linux/env_target.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/env/nucleus/env_target.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/meif_cfg.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/meif_internal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/services/devcmd_svcs/devcmd.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/services/devcmd_svcs/nucleus/nu_devcmd.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/services/trace_svcs/linux/linux_trace_agent.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/services/trace_svcs/trace_cmds.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/services/trace_svcs/trace_internal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/services/update_svcs/bootloader_ini.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/services/update_svcs/enc_utils.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/services/update_svcs/firmware_update.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/services/update_svcs/image_verify.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/services/update_svcs/parse_fit_file.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/services/update_svcs/update_svcs_defs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/samples/aws/aws_devcmds.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/samples/aws/linux/aws_trace_hooks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/samples/aws/nucleus/load_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/samples/aws/nucleus/load_config_proto.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/samples/azure/linux/azure_trace_hooks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/samples/azure/nucleus/load_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/samples/azure/nucleus/load_config_proto.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/samples/mindconnect/callbacks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/samples/mindconnect/nucleus/load_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/samples/mindconnect/nucleus/load_config_proto.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/meif_cfg.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/meif_internal.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/libfdt/fdt.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/libfdt/libfdt.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/libfdt/libfdt_env.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/common/libfdt/libfdt_internal.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/external_libs/jsmn/jsmn.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/platform/meif/threads_platform.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/platform/meif/timer_platform.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/platform/meif/wolfssl/network_platform.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/platform/linux/mbedtls/network_platform.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_config.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_error.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_interface.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_json.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_topics.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_types.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_json_utils.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_log.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_actions.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_interface.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_json.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_json_data.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_key.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_records.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_iot_version.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_lib_config.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/aws_target_config.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/network_interface.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/threads_interface.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/include/meif/framework/cloud/aws/include/timer_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-rootca.pem
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-devcrt.pem
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-prvkey.pem
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/lib/systemd/system/meif-agent-autostart.service
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-rootca.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-devcrt.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-prvkey.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/lib/systemd/system/meif-agent-autostart.service
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-rootca.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-devcrt.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-prvkey.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/lib/systemd/system/meif-agent-autostart.service
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-rootca.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-devcrt.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-prvkey.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/lib/systemd/system/meif-agent-autostart.service
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/bin/traceiot.sh
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-rootca.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-devcrt.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/etc/ssl/certs/aws-prvkey.pem
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/bin/meif-agent-config
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/lib/systemd/system/meif-agent-config.service
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/meif/lib/systemd/system/meif-agent-autostart.service
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/meif/usr/bin/aws-agent
make[1]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
   dh_install
/home/builder/meif/mel-omni-os/meif/debian/meif.install: 1: /home/builder/meif/mel-omni-os/meif/debian/meif.install: run-media-persistent.mount: not found
/home/builder/meif/mel-omni-os/meif/debian/meif.install: 2: /home/builder/meif/mel-omni-os/meif/debian/meif.install: meif-swupdate.service: not found
/home/builder/meif/mel-omni-os/meif/debian/meif.install: 3: /home/builder/meif/mel-omni-os/meif/debian/meif.install: meif: not found
/home/builder/meif/mel-omni-os/meif/debian/meif.install: 4: /home/builder/meif/mel-omni-os/meif/debian/meif.install: 95-swupdate_meif_update_status_handlers.lua: not found
dh_install: debian/meif.install is marked executable but does not appear to an executable config.
dh_install:
dh_install: If debian/meif.install is intended to be an executable config file, please ensure it can
dh_install: be run as a stand-alone script/program (e.g. "./debian/meif.install")
dh_install: Otherwise, please remove the executable bit from the file (e.g. chmod -x "debian/meif.install")
dh_install:
dh_install: Please see "Executable debhelper config files" in debhelper(7) for more information.
dh_install:
dh_install: debian/meif.install (executable config) returned exit code 127
make: *** [debian/rules:18: binary] Error 25
dpkg-buildpackage: error: fakeroot debian/rules binary subprocess returned exit status 2
WARNING: /home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/run.dpkg_runbuild.43501:1 exit 2 from 'sudo -E chroot --userspec=$( id -u ):$( id -g ) /home/mel/project/build/tmp/deploy/buildchroot-target/mel-omni-amd64 /isar/build.sh /home/builder/meif/mel-omni-os/meif amd64'


ERROR: Logfile of failure stored in: /home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/log.do_dpkg_build.43501
ERROR: Task (/c/mgc/embedded/mel-omni-os/2/meif/support/isar/industrial-meif/recipes-core/meif/meif.bb:do_dpkg_build) failed with exit code '1'
NOTE: Tasks Summary: Attempted 463 tasks of which 0 didn't need to be rerun and 1 failed.

Summary: 1 task failed:
  /c/mgc/embedded/mel-omni-os/2/meif/support/isar/industrial-meif/recipes-core/meif/meif.bb:do_dpkg_build
Summary: There was 1 ERROR message shown, returning a non-zero exit code.
PS C:\mgc\embedded\mel-omni-os\2>
{code}";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"duplicates";a:1:{i:0;s:8:"MELO-381";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:4:"Done";s:14:"resolutiondate";i:1588757576;s:7:"updated";i:1593507849;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:17;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@466e8d00[id=1957,rapidViewId=461,state=CLOSED,name=Omni  2.0.0 2020 Sprint 7,startDate=2020-05-04T11:51:01.336+01:00,endDate=2020-05-22T18:30:00.000+01:00,completeDate=2020-05-25T06:27:27.979+01:00,sequence=1957,goal=Starts : 4th May till 22nd May 2020]";}s:12:"story_points";d:1;s:3:"key";s:8:"MELO-389";s:6:"status";s:9:"Completed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:97:"README doc for "Key Generation for Packaging" needs to update with correct "efitools" package url";s:11:"description";s:237:" <mel-omni-installation-dir>/mel-omni-os/2/mel-core/test-keys/README.md needs to get updated "efitools" correct url.

Mentioned url " http://ftp.de.debian.org/debian/pool/main/e/efitools/efitools_1.4.2-2+b1_amd64.deb " is not available";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:4:"Done";s:14:"resolutiondate";i:1589993389;s:7:"updated";i:1593507881;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:2:{i:0;s:10:"omni_2.0.0";i:1;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:18;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@3632b105[id=1874,rapidViewId=468,state=CLOSED,name=Omni  2.0.0 2020 Sprint 5,startDate=2020-03-23T08:41:44.348Z,endDate=2020-04-10T17:41:00.000+01:00,completeDate=2020-04-11T15:52:29.498+01:00,sequence=1873,goal=Starts : 23rd March till 10th April 2020]";}s:12:"story_points";d:3;s:3:"key";s:8:"MELO-264";s:6:"status";s:9:"Completed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:57:"Omni 2.0: SWUpdate using Hawkbit won't auto-reboot TARGET";s:11:"description";s:25903:"Steps to reproduce:
---------------------
1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
2) $ repo sync
3) Install meif : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200210-222207/
4)copy the industrial-meif to the project folder where omni repo is synced.
5)Run the setup-environment script to create a build configuration:
$  . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
6) Set below parameters in local.conf file
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif_bin/meif"
7)Comment below line in local.conf :
MEIF_CLOUD = "aws"
MEIF_AWS_IOT_HOST_MQTT_ADDR = "ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com"
MEIF_AWS_IOT_CLIENT_MY_THING_NAME = "ravi_iot"
MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID = "ravi_iot"

MEIF_AWS_IOT_SECURITY_ROOT_CA_FILENAME = "aws-rootca.pem"
MEIF_AWS_IOT_SECURITY_CERTIFICATE_FILENAME = "aws-devcrt.pem"
MEIF_AWS_IOT_SECURITY_PRIVATE_KEY_FILENAME = "aws-prvkey.pem"
MEIF_AWS_IOT_SECURITY_PEM_HOST_DIR = "/home/ravi/security_keys/aws"

MEIF_INSTALLATION_PATH = "/home/ravi/jenkins/workspace/MEIF/meif_bin/meif"


MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"

IMAGE_FEATURES += "swupdate"

8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:
{code}
DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.62.146:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 
{code}
10)export INDUSTRIAL_SOURCES=upstream
11) Run the below command to build the image :
$ ../industrial-ci/scripts/build-all.sh
12) Prepare usb using service stick image & did initial setup
14)Target is up and hawkbit server setup done.
15) Initiate swupdate from hawkbit server.
Expected Result
=============
After successful swupdate, target should get reboot and it should be booted up with another partition(root=/dev/mel/systemb)
Actual result:
============
After successful swupdate target is not getting rebooted, after manual soft reboot , target is booted up with another(updated ) partition.
{code}
tester@localhost:~$ sudo journalctl -u swupdate-hawkbit -f

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for tester:
-- Logs begin at Mon 2020-02-17 07:17:44 UTC. --
Feb 17 07:17:56 localhost.localdomain swupdate[632]:         preinstall
Feb 17 07:17:56 localhost.localdomain swupdate[632]:         postinstall
Feb 17 07:17:56 localhost.localdomain swupdate[632]:         swuforward
Feb 17 07:17:56 localhost.localdomain swupdate[632]:         rootfs_type
Feb 17 07:17:56 localhost.localdomain swupdate[632]:         efiboot_type
Feb 17 07:17:56 localhost.localdomain swupdate[632]:         lvm_type
Feb 17 07:17:56 localhost.localdomain swupdate[632]:         parted_type
Feb 17 07:17:56 localhost.localdomain swupdate[632]:         ebg_type
Feb 17 07:17:56 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 100, "msg":"Received 145B of 145B"}
Feb 17 07:17:56 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 100, "msg":"Received 145B of 145B"}
Feb 17 07:22:56 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 100, "msg":"Received 258B of 258B"}
Feb 17 07:22:56 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 100, "msg":"Received 641B of 641B"}
Feb 17 07:22:56 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 100, "msg":"Received 258B of 258B"}
Feb 17 07:22:56 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 100, "msg":"Received 641B of 641B"}
Feb 17 07:22:56 localhost.localdomain swupdate[632]: [DEBUG] : EVENT [7] :  { "id" : "2", "update" : "forced"}
Feb 17 07:22:56 localhost.localdomain swupdate[632]: [INFO ] : SWUPDATE started :  Software Update started !
Feb 17 07:22:56 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 0, "msg":"Received 12536B of 439393792B"}
Feb 17 07:22:56 localhost.localdomain swupdate[632]: # using cached ebg active system (a)
Feb 17 07:22:56 localhost.localdomain swupdate[632]: # using cached ebg active system (a)
Feb 17 07:22:56 localhost.localdomain swupdate[632]: # will not modify boota
Feb 17 07:22:56 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 1, "msg":"Received 4397080B of 439393792B"}
Feb 17 07:22:56 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 2, "msg":"Received 8790312B of 439393792B"}
Feb 17 07:22:56 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 3, "msg":"Received 13186440B of 439393792B"}
Feb 17 07:22:56 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 4, "msg":"Received 17581120B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 5, "msg":"Received 21975800B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 6, "msg":"Received 26364688B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 7, "msg":"Received 30765160B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 8, "msg":"Received 35161288B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 9, "msg":"Received 39553072B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 10, "msg":"Received 43943408B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 11, "msg":"Received 48339536B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 12, "msg":"Received 52738560B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 13, "msg":"Received 57130344B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 14, "msg":"Received 61526472B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 15, "msg":"Received 65913912B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 16, "msg":"Received 70314384B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 17, "msg":"Received 74704720B of 439393792B"}
Feb 17 07:22:57 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 18, "msg":"Received 79096504B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 19, "msg":"Received 83488288B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 20, "msg":"Received 87881520B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 21, "msg":"Received 92284888B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 22, "msg":"Received 96672328B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 23, "msg":"Received 101071408B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 24, "msg":"Received 105464584B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 25, "msg":"Received 109852024B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 26, "msg":"Received 114251048B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 27, "msg":"Received 118645728B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 28, "msg":"Received 123034616B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 29, "msg":"Received 127432192B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 30, "msg":"Received 131825424B of 439393792B"}
Feb 17 07:22:58 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 31, "msg":"Received 136218656B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 32, "msg":"Received 140608992B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 33, "msg":"Received 145009464B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 34, "msg":"Received 149401248B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 35, "msg":"Received 153800272B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 36, "msg":"Received 158192056B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 37, "msg":"Received 162576600B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 38, "msg":"Received 166974176B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 39, "msg":"Received 171368856B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 40, "msg":"Received 175763536B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 41, "msg":"Received 180162560B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 42, "msg":"Received 184552896B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 43, "msg":"Received 188941784B of 439393792B"}
Feb 17 07:22:59 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 44, "msg":"Received 193339904B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 45, "msg":"Received 197731144B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 46, "msg":"Received 202127272B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 47, "msg":"Received 206523400B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 48, "msg":"Received 210918080B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 49, "msg":"Received 215308416B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 50, "msg":"Received 219704544B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 51, "msg":"Received 224105016B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 52, "msg":"Received 228489560B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 53, "msg":"Received 232881344B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 54, "msg":"Received 237276024B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 55, "msg":"Received 241677944B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 56, "msg":"Received 246061040B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 57, "msg":"Received 250464408B of 439393792B"}
Feb 17 07:23:00 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 58, "msg":"Received 254850400B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 59, "msg":"Received 259245080B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 60, "msg":"Received 263642656B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 61, "msg":"Received 268035888B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 62, "msg":"Received 272424776B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 63, "msg":"Received 276823800B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 64, "msg":"Received 281215584B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 65, "msg":"Received 285613160B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 66, "msg":"Received 290002048B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 67, "msg":"Received 294403968B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 68, "msg":"Received 298788512B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 69, "msg":"Received 303190432B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 70, "msg":"Received 307580768B of 439393792B"}
Feb 17 07:23:01 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 71, "msg":"Received 311975448B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 72, "msg":"Received 316374472B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 73, "msg":"Received 320760464B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 74, "msg":"Received 325160936B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 75, "msg":"Received 329545480B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 76, "msg":"Received 333951744B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 77, "msg":"Received 338342080B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 78, "msg":"Received 342733864B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 79, "msg":"Received 347131440B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 80, "msg":"Received 351518880B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 81, "msg":"Received 355916456B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 82, "msg":"Received 360309688B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 83, "msg":"Received 364705816B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 84, "msg":"Received 369101944B of 439393792B"}
Feb 17 07:23:02 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 85, "msg":"Received 373492280B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 86, "msg":"Received 377885512B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 87, "msg":"Received 382272952B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 88, "msg":"Received 386673424B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 89, "msg":"Received 391066656B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 90, "msg":"Received 395459888B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 91, "msg":"Received 399850224B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 92, "msg":"Received 404247800B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 93, "msg":"Received 408642480B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 94, "msg":"Received 413037160B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 95, "msg":"Received 417434736B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 96, "msg":"Received 421827968B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 97, "msg":"Received 426213960B of 439393792B"}
Feb 17 07:23:03 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 98, "msg":"Received 430614888B of 439393792B"}
Feb 17 07:23:04 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 99, "msg":"Received 435003320B of 439393792B"}
Feb 17 07:23:04 localhost.localdomain swupdate[632]: [TRACE] : EVENT [0] :  {"percent": 100, "msg":"Received 439393792B of 439393792B"}
Feb 17 07:23:04 localhost.localdomain swupdate[632]: [INFO ] : SWUPDATE running :  Installation in progress
Feb 17 07:23:04 localhost.localdomain swupdate[632]: # /bin/mount /dev/sda1 /tmp/tmp.vTpwkLv3fg
Feb 17 07:23:04 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:23:04 localhost.localdomain swupdate[632]: # /bin/mkdir -p /tmp/tmp.vTpwkLv3fg/EFI/BOOT
Feb 17 07:23:04 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:23:04 localhost.localdomain swupdate[632]: # /bin/umount /tmp/tmp.vTpwkLv3fg
Feb 17 07:23:04 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:23:04 localhost.localdomain swupdate[632]: # target boot partition is BOOTB
Feb 17 07:23:04 localhost.localdomain swupdate[632]: # /bin/mount /dev/sda3 /tmp/tmp.CMNhQq2Huw
Feb 17 07:23:04 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:23:04 localhost.localdomain swupdate[632]: # using cached ebg active system (a)
Feb 17 07:23:04 localhost.localdomain swupdate[632]: # copying bootb boot image to /tmp/tmp.CMNhQq2Huw/system.efi
Feb 17 07:23:05 localhost.localdomain swupdate[632]: # /bin/umount /tmp/tmp.CMNhQq2Huw
Feb 17 07:23:05 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:23:05 localhost.localdomain swupdate[632]: # using cached ebg active system (a)
Feb 17 07:23:05 localhost.localdomain swupdate[632]: # checking if install should be encrypted
Feb 17 07:23:05 localhost.localdomain swupdate[632]: # encrypted install: false
Feb 17 07:23:05 localhost.localdomain swupdate[632]: # using cached ebg active system (a)
Feb 17 07:23:05 localhost.localdomain swupdate[632]: # rootfs to be installed to /dev/mapper/mel-systemb



Feb 17 07:25:07 localhost.localdomain swupdate[632]: # /sbin/resize2fs -f /dev/mapper/mel-systemb
Feb 17 07:25:07 localhost.localdomain swupdate[632]: resize2fs 1.44.5 (15-Dec-2018)
Feb 17 07:25:07 localhost.localdomain swupdate[632]: The filesystem is already 1048576 (4k) blocks long.  Nothing to do!
Feb 17 07:25:07 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:25:07 localhost.localdomain swupdate[632]: # /bin/mount -o ro /dev/mapper/mel-systemb /tmp/tmp.tEInnurqZZ
Feb 17 07:25:07 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:25:07 localhost.localdomain swupdate[632]: # ima not enabled in the installed image
Feb 17 07:25:07 localhost.localdomain swupdate[632]: # /bin/umount -l -f /tmp/tmp.tEInnurqZZ
Feb 17 07:25:07 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:25:07 localhost.localdomain swupdate[632]: # using cached ebg active system (a)
Feb 17 07:25:07 localhost.localdomain swupdate[632]: # target boot partition is BOOTB
Feb 17 07:25:07 localhost.localdomain swupdate[632]: # system_has_watchdog: true
Feb 17 07:25:07 localhost.localdomain swupdate[632]: # /usr/bin/bg_setenv -u -w 120 -k C:BOOTB:system.efi
Feb 17 07:25:08 localhost.localdomain swupdate[632]: Environment update was successful.
Feb 17 07:25:08 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:25:08 localhost.localdomain swupdate[632]: # /bin/mount /dev/mapper/mel-systemb /tmp/tmp.VPKENxJk1z
Feb 17 07:25:08 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:25:08 localhost.localdomain swupdate[632]: # doing offline selinux labelling to filesystem
Feb 17 07:25:08 localhost.localdomain swupdate[632]: # /usr/sbin/chroot /tmp/tmp.VPKENxJk1z /sbin/setfiles /etc/selinux/default/contexts/files/file_contexts /
Feb 17 07:26:01 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:26:01 localhost.localdomain swupdate[632]: # offline selinux labelling to filesystem completed
Feb 17 07:26:01 localhost.localdomain swupdate[632]: # /bin/umount /tmp/tmp.VPKENxJk1z
Feb 17 07:26:01 localhost.localdomain swupdate[632]: # exit status: 0
Feb 17 07:26:01 localhost.localdomain swupdate[632]: [INFO ] : SWUPDATE successful ! SWUPDATE successful !
Feb 17 07:26:01 localhost.localdomain swupdate[632]: [INFO ] : No SWUPDATE running :  Waiting for requests...
Feb 17 07:26:02 localhost.localdomain swupdate[632]: Child 677(suricatta) killed by signal 15
Feb 17 07:26:02 localhost.localdomain systemd[1]: swupdate-hawkbit.service: Main process exited, code=exited, status=15/n/a
Feb 17 07:26:02 localhost.localdomain systemd[1]: swupdate-hawkbit.service: Failed with result 'exit-code'.
Feb 17 07:26:02 localhost.localdomain systemd[1]: Stopped SWupdate hawkbit.
Feb 17 07:26:02 localhost.localdomain systemd[1]: Starting SWupdate hawkbit...
Feb 17 07:26:02 localhost.localdomain swupdate[1229]: Swupdate v2019.04.0
Feb 17 07:26:02 localhost.localdomain swupdate[1229]: Licensed under GPLv2. See source distribution for detailed copyright notices.
Feb 17 07:26:02 localhost.localdomain swupdate[1229]: Running on industrial-pc Revision v1.0
Feb 17 07:26:02 localhost.localdomain swupdate[1229]: Registered handlers:
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         dummy
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         archive
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         tar
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         uboot
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         bootloader
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         lua
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         raw
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         rawfile
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         remote
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         shellscript
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         preinstall
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         postinstall
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         swuforward
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         rootfs_type
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         efiboot_type
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         lvm_type
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         parted_type
Feb 17 07:26:02 localhost.localdomain swupdate[1229]:         ebg_type
Feb 17 07:26:02 localhost.localdomain swupdate[1229]: [TRACE] : EVENT [0] :  {"percent": 100, "msg":"Received 258B of 258B"}
Feb 17 07:26:02 localhost.localdomain swupdate[1229]: [TRACE] : EVENT [0] :  {"percent": 100, "msg":"Received 641B of 641B"}
Feb 17 07:26:02 localhost.localdomain swupdate[1229]: [TRACE] : EVENT [0] :  {"percent": 100, "msg":"Received 145B of 145B"}


^C
tester@localhost:~$
tester@localhost:~$
tester@localhost:~$ cat /proc/cmdline
root=/dev/mel/systema None rootwait console=tty1 nohz=off           security=selinux selinux=1 enforcing=0  splash plymouth.ignore-serial-consoles quiet
tester@localhost:~$ bg_printenv
Error initializing FAT environment.
tester@localhost:~$ sudo bg_printenv

----------------------------
 Config Partition #0 Values:
in_progress:      no
revision:         4
kernel:           C:BOOTB:system.efi
kernelargs:
watchdog timeout: 120 seconds
ustate:           0 (OK)

user variables:



----------------------------
 Config Partition #1 Values:
in_progress:      yes
revision:         3
kernel:           C:BOOTA:system.efi
kernelargs:
watchdog timeout: 120 seconds
ustate:           0 (OK)

user variables:


tester@localhost:~$
{code}

After manual reboot, system is booted with another partition
{code}
tester@localhost:~$ cat /proc/cmdline
root=/dev/mel/systemb None rootwait console=tty1 nohz=off           security=selinux selinux=1 enforcing=0  splash plymouth.ignore-serial-consoles quiet
tester@localhost:~$

{code}";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-2388";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:4:"Done";s:14:"resolutiondate";i:1586539229;s:7:"updated";i:1592923673;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";i:3;s:4:"risk";}s:11:"fixVersions";a:2:{i:0;s:10:"omni_2.0.0";i:1;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:19;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:10:"MEIFMR-253";s:6:"status";s:9:"Satisfied";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:58:"Move MEIF 1.4 for X86 to Sept and combine with IPC release";s:11:"description";s:672:"Align the MEIF 1.4 release dates with the Omni 2.0 and IPC release dates. This would result in the following dates:

Dev FF: Jul 17
 FF QA cycle complete: Aug 18
 CF: Aug 25
 RC QA cycle complete: Sep 10
 Release: Sep 15

(the above dates are taken from and aligned with INDOSMR-553)

The scope of the MEIF 1.4 release will not be increased and the team will complete development tasks prior to these dates.

Clarification: This release of Omni 2.0 just combines the x86 and the IPC releases together and does not combine the Omni 2.0 ARM release. So ARM related work is not pulled into the release and will not be supported by MEIF 1.4, as originally planned.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594022962;s:7:"updated";i:1594022962;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:22:"product change request";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:20;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:10:"MEIFMR-252";s:6:"status";s:9:"Satisfied";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:63:"Change in MEIF 1.4 release scope due to the IoT Device Solution";s:11:"description";s:2640:"The IoT Device Solution product is based on Omni and MEIF (released versions). It uses a workflow based on a pre-generated system image, allowing developers to customize the system image by developing their applications on top of the production ready image and by customizing the configuration of the image, without going into a full system rebuild using Bitbake.

This workflow requires that the MEIF product features should be configurable and usable without requiring a re-compilation of MEIF from scratch. This requires MEIF to meet some additional requirements other than those initially scoped within the MEIF 1.4 project.

The following page lists the IoT Device Solution requirements:

[https://confluence.alm.mentorg.com/display/PS/IoT+Device+Solution+Requirements+Details]

And the following Jira structure contains the total list of MRs for this IoT Device Solution (MEIF-specific requirements are a subset within this list, and are mostly assigned to Shafique or Fakhir):

[https://jira.alm.mentorg.com/secure/StructureBoard.jspa?s=%7B%22structureId%22%3A749%2C%22pinnedItem%22%3A%22com.almworks.jira.structure%3Atype-folder%2F791%22%7D#]

Meeting these new requirements will require changes in the MEIF 1.4 "code freeze" and "release" dates.

*Proposed Change in MEIF 1.4 POR*

The following MRs specifically impact the MEIF 1.4 product and all of these are mostly enhancements to the product:
 * INDOSMR-532 (P1 requirement, 5 MW of engineering tasks) – this estimate excludes IPC IoT Device Solution specific tasks associated with this MR (excludes 3.6 MW of work)
 * INDOSMR-533 (P1 requirement, 7.2 MW of engineering tasks)
 * INDOSMR-543 (P1 requirement, 5.6 MW of engineering tasks)
 * INDOSMR-548 (*P2 requirement*, 3 MW of engineering tasks) – this estimate excludes IPC IoT Device Solution specific tasks associated with this MR (excludes 12 MW or engineering tasks and 3.5 MW of demo team work)

The above estimates exclude IPC IoT Device Solution specific work. Assuming that all engineers of the MEIF team will be working on these engineering tasks, using 50% engineer loading to calculate the dates and only considering the MEIF product specific work, the new dates for the MEIF 1.4 release, *including QA estimates*, would be as follows:
 * FF: 03 Jul
 * CF: 24 Jul
 * Release: 07 Aug

*Documentation Review Process Update*

Another change planned under this PCR is to introduce a more formal process for documentation reviews. A new process has been documented on the following page:

[https://confluence.alm.mentorg.com/display/PS/MEIF+1.4+-+Documentation+Change+Management]";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:5:{i:0;s:9:"MEIF-2480";i:1;s:9:"MEIF-2549";i:2;s:9:"MEIF-2550";i:3;s:9:"MEIF-2551";i:4;s:9:"MEIF-2552";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591606629;s:7:"updated";i:1592897911;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:22:"product change request";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:21;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:10:"MEIFMR-247";s:6:"status";s:11:"Implemented";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:20:"MEIF 1.4 BSP Support";s:11:"description";s:529:"MEIF 1.4 will only be released on Omni OS for IPC127E target
||Omni OS||
|IPC 127E|

 For other operating systems and targets we will continue to support MEIF 1.3 release.

*Update (13 Feb 2020)*: MEIF 1.4 will support the same Host OSes as those supported by MEL Omni 2.0. Based on CBMR-809, the list of supported Host OSes is as follows:
 * Windows 10 with Hyperv Support (Professional Edition)
 * Ubuntu 18.04
 * Ubuntu 20.04
 * Debian 10
 * Redhat 7.7 (same version which Northrup uses – _updated 29 Apr 2020_)";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:4:{i:0;s:9:"MEIF-2166";i:1;s:9:"MEIF-2167";i:2;s:9:"MEIF-2260";i:3;s:9:"MEIF-2227";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587037160;s:7:"updated";i:1588126436;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:22;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:10:"MEIFMR-241";s:6:"status";s:11:"Implemented";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:46:"Update AWS and Azure SDK to later LTS versions";s:11:"description";s:144:"This MR is to look at AWS and Azure SDKs and update them in MEIF 1.4 if they have newer LTS version released after what is included in MIEF 1.3.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:3:{i:0;s:9:"MEIF-2151";i:1;s:9:"MEIF-1930";i:2;s:8:"SAMR-338";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587037073;s:7:"updated";i:1587037073;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:23;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:10:"MEIFMR-240";s:6:"status";s:9:"Committed";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:24:"MEIF 1.4.0 Documentation";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:3:{i:0;s:9:"MEIF-1955";i:1;s:9:"MEIF-1918";i:2;s:9:"MEIF-2154";}}}s:20:"timeoriginalestimate";i:432000;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1582034050;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:24;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:10:"MEIFMR-236";s:6:"status";s:11:"Implemented";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:59:"Review Configurability & Scalability of MEIF Implementation";s:11:"description";s:540:"This MR is to review MEIF implementation to make sure various components can be built and used independently 

e.g. the cloud sdks should work as long as there are required components. They should not depend upon swupdate or other functionality available.


Another aspect covered in this MR is that the MEIF agent application and any other services/daemons/docker-containers of MEIF which are once deployed should automatically be restarted on a device reboot. The user should not be required to restart any service manually. 

 ";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:2:{i:0;s:9:"MEIF-2152";i:1;s:9:"MEIF-1823";}}}s:20:"timeoriginalestimate";i:288000;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587036843;s:7:"updated";i:1587036843;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:25;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:10:"MEIFMR-232";s:6:"status";s:11:"Implemented";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"Utilizing Mendix for cloud independent demo applications";s:11:"description";s:805:"The Mendix platform has been used in the recent past for creating cloud based demo applications. The Mendix platform can be officially supported in MEIF by allowing users to create applications on Mendix while using any supported cloud and also by shipping out of the box MEIF demo applications based on Mendix, such as possibly an equivalent of the existing remote monitoring demo application.

This platform will likely be supported as an "app service" adding to the existing MEIF portfolio of ThingsBoard.io.

We need provide sample application for following use-case:

1- MEIF + Mendix connectivity over cloud

Both Mobile and Web Applications need to be supported

Only aws cloud connection will be supported. 

This MR is productization of AppNote completed as part of MEIFMR-235

 ";s:10:"issuelinks";a:2:{s:2:"in";a:2:{s:12:"is cloned by";a:1:{i:0;s:10:"MEIFMR-249";}s:10:"implements";a:1:{i:0;s:9:"MEIF-1923";}}s:3:"out";a:2:{s:14:"implemented by";a:3:{i:0;s:9:"MEIF-2156";i:1;s:9:"MEIF-1825";i:2;s:9:"MEIF-1887";}s:10:"relates to";a:1:{i:0;s:10:"MEIFMR-235";}}}s:20:"timeoriginalestimate";i:864000;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587037326;s:7:"updated";i:1587037326;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:26;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:10:"MEIFMR-229";s:6:"status";s:11:"Implemented";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:30:"Azure IoT Edge support in MEIF";s:11:"description";s:1893:"The MEIF product should be enhanced to allow running Azure IoT Edge on a MEL device. The productization of this feature should include the following aspects:
 * Adding any layers required for building MEL with Azure IoT Edge support to the MEIF Lite package (or to MEIF, whatever makes sense).
 * Support for running Azure IoT Edge on MEL 
 * Support for running MEIF in parallel with Azure IoT Edge (to allow firmware update of Edge device) and possibly as an Azure IoT Edge "module"
 * Suitable packaging of MEIF to allow easily Dockerized deployment of this solution (covered in more detail under MEIFMR-55)
 * A sample application to demonstrate this feature
 * Documentation for setting up Azure IoT Edge and optionally MEIF on a MEL device
 * Documentation for setting up MEIF on end-devices connected to an Azure IoT Edge device

This should be implemented as an optional module i.e. user should be able to configure this module out and rest of the MEIF functionality should not get affected.

This MR is a continuation of the initial experimentation carried out under MEIFMR-218.

Confluence page for this MR:
 [http://confluence.alm.mentorg.com/display/MEIF/MEIFMR-229%3A+Azure+IoT+Edge]

The Azure IoT Edge integration should use moby-engine as described in [https://docs.microsoft.com/en-us/azure/iot-edge/support]

The end-to-end workflow must be based on Microsoft recommended/native workflow where possible and should use Microsoft Azure services when available e.g. a user familiar with standard Azure IoT Edge workflows should be able to use Azure IoT Edge on MEL using familiar workflows as described on pages below:

[https://docs.microsoft.com/en-us/azure/iot-edge/quickstart-linux]

[https://docs.microsoft.com/en-us/azure/iot-edge/tutorial-develop-for-linux]

[https://docs.microsoft.com/en-us/azure/iot-edge/how-to-vs-code-develop-module]

 ";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:2:{i:0;s:9:"MEIF-2159";i:1;s:9:"MEIF-1786";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587036722;s:7:"updated";i:1587036722;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:27;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:10:"MEIFMR-228";s:6:"status";s:11:"Implemented";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:34:"Shared MEIF Host Tool installation";s:11:"description";s:1425:"With the MEIF Host tool getting included in MEL now as part of MEIF Lite, we want to ensure that we have a proper way of delivering updates and support for new targets/bsps.

For this we need to:
 # Have A common installation for MEIF Host Tool in the installation directory, similar to what we did with sysgen in CBMR-624
 # Separate the templates out of the host tool, and have it be part of each BSP
 # Have a way to build a CLI-only version of the Host Tool for inclusion in MEIF Lite, this version can be updated to a full version with the installation of full MEIF. Once it is updated MEIF Lite (CLI-only) can't be updated independently.

[~cpeuse] will be working on an initial proposal and stop-gap implementation for this during the MEL release timeframe, during that work, we should agree on the directory structure and templates location, and update this MR.

The Host Tool should be able to automatically detect the available set of templates from the specified directory structure above, in addition to allowing the user to browse for a custom template.

Special care needs to be taken for IU structure and versioning to allow the tool and templates to be included in the different configurations: MEIF, MEIF Lite, Independent Templates with BSPs.

Proposed design for restructuring MEIF: see page links section below on this Jira ticket

cc. [~mshafiqu] [~ksaeed] [~tmirza] [~mbozeman] [~ansarif]";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:3:{i:0;s:9:"MEIF-2287";i:1;s:9:"MEIF-2160";i:2;s:9:"MEIF-1826";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586272863;s:7:"updated";i:1586272863;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:28;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:10:"MEIFMR-225";s:6:"status";s:11:"Implemented";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:46:"Support for basic MEIF features on MEL Omni OS";s:11:"description";s:1852:"MEIF release needs to support MEL Omni OS all applicable feature set of MEIF 1.3 that includes:
 * Support AWS, Azure, hawkBit and MindSphere support.
 * SA tracing with AWS and Azure backend

As this release is specific to Omni 2.0 – it will have same host support as Omni 2.0.

In addition this MR will require the following major tasks:
 * -Repackaging MEIF to make it suitable for use with MEL Omni OS (covered in more detail under MEIFMR-55).-
 * Interfacing MEIF with the swupdate module of MEL Omni OS.
 * Interfacing MEIF with the reboot support required for firmware updates.
 * Adding back MEL Omni OS documentation to the MEIF product.
 * Preparing MEIF ADEs for the MEL Omni OS BSP.
 * -Packaging updates in MEIF to allow being packaged as a Docker container also to be implemented on MEL Omni OS-.

The engineering team will explore whether the following features can be supported on MEL Omni or not. It is highly desired that we support all MEL Flex features of MEIF on MEL Omni as well:
 * Firmware update of Docker type
 * Collectd support (verified with InfluxDB and Grafana on the host)

*Update (04 Sep 2019)*: The structure of the MEL Omni sw-description file was very different from that of the MEL Flex ones which we had been using in the past. For this purpose the MHT tool required some enhancements to handle the new structure. The tools team have proposed a more generic approach to handling sw-description files as documented here, which too will be covered within this MR:

[http://confluence.alm.mentorg.com:8090/display/~ksaeed/MEIF+Host+Tool+Update]

*Update (22 Nov 2019)*:
 * For Collectd/Grafana support, Grafana may be run on a separate desktop host if not available for MEL Omni.
 * Encryption/signing is mandatory in MEL Omni. Compression is TBD and only compound images will be supported.";s:10:"issuelinks";a:1:{s:3:"out";a:2:{s:14:"implemented by";a:4:{i:0;s:9:"MEIF-2280";i:1;s:9:"MEIF-2146";i:2;s:9:"MEIF-2161";i:3;s:9:"MEIF-1827";}s:10:"relates to";a:1:{i:0;s:10:"MEIFMR-216";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587036787;s:7:"updated";i:1587036787;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:29;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:10:"MEIFMR-174";s:6:"status";s:11:"Implemented";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"Bug fixes, improvements and housekeeping of MEIF 1.4";s:11:"description";s:625:"The MEIF product has a considerable backlog of known bugs and improvements. This MR is a catch-all location for all bug fixes and improvements to be targeted for the MEIF 1.4 release.

Besides the tickets linked to this MR, the following page also provides a list of improvements which can be made in the MEIF product:

[http://confluence.alm.mentorg.com:8090/display/MEIF/Remaining+work+for+MEIF+product]

*Note*: The estimate on this ticket lists the time of all the bug fix/improvement tickets in the backlog. There is flexibility here and the time can be reduced by excluding some of these tickets from the release.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:4:{i:0;s:9:"MEIF-2128";i:1;s:9:"MEIF-2162";i:2;s:9:"MEIF-2165";i:3;s:9:"MEIF-1785";}}}s:20:"timeoriginalestimate";i:864000;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587470946;s:7:"updated";i:1587470946;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:30;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2725";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:86:"Getting error while executing "get-fwupdate-install-progress" command in AWS and Azure";s:11:"description";s:1653:"Steps:
 -----------
 1) Omni Installer: [ftp://inpftp.ina.mentorg.com/pub/omni/200725_0400/omni-linux-x64-2.0.0.bin]
 MIEF installer: [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/release_12.0.FirOMNI/200727-190229/outputs/meif-linux-x64-1.4.0.bin]
 2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/
 3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .
 4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.
 5) cd <mel-omni-installation-path>/mel-omni-os/2/
 6) ./melomni-devshell.ps1 -c -d ../../aws_build -l ./meif/support/isar/industrial-meif -m
 industrial-pc
 7) updated cloud variables in local.conf file
 8) ./melomni-devshell.ps1 -b -d ../../aws_build
 9) IPC127E booted with Builded image
 10) Stopped meif-agent-autostart agent
 11) Manually start the Agent (AWS and Azure)

12) Do firmware update  and simultaneously run the following device command : get-fwupdate-install-progress

Expected Result :
 --------------
 The "get-fwupdate-install-progress" command should have the following output :
{code:java}
{
 "FirmwareUpdate": {
 "InstallProgress": {
 "FileName":"rootfs.zst",
 "CurrentStep":2,
 "TotalSteps":2,
 "StepPercentage":31
 }
 }
} {code}
Actual Result :
 ---------------
 we are getting the following output for "get-fwupdate-install-progress" command :
{code:java}
Command result:
{"error":"Fatal error."}
Command status:500 {code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1596100414;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:31;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2724";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:81:"Add jenkins job to use Omni installer and MEIF installer to do build verification";s:11:"description";s:93:"use utah service for installing Omni and MEIF.
then use utah services to build MEIF and Omni";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595841957;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:32;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2723";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:60:"Create release branch for applicable MEIF 1.4.0 repositories";s:11:"description";s:156:"Create release branch for applicable MEIF 1.4.0 repositories

Once release branches are created for MEIF 1.4.0 repositories, build system will be updated.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595834861;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:7:"devtask";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:33;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2722";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:70:"Update the Azure DPS script to handle enrollments of TPM based devices";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"subtask of";a:1:{i:0;s:9:"MEIF-2442";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:36000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595831049;s:7:"updated";i:1596018569;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:34;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2614";s:6:"sprint";a:1:{i:0;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2721";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:67:"Bug verification on daily build and regression cycle for MEIFMR-252";s:11:"description";s:151:"* Install,Build and boot for all secondary hosts(Ubuntu 18.04,Ubuntu 20.04 and RHEL7.7)
* Azure,Minconnect,Grafana/Influxdb
* Other required features";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2618";}}}s:20:"timeoriginalestimate";i:201600;s:9:"timespent";i:28800;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1596104015;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:24:"meif_ref_design_1.4.0_qa";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:35;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2720";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:28:"Fix no-EOL files within MEIF";s:11:"description";s:671:"When creating any kind of text files (code, ini, scripts, etc) please make sure your editor inserts an end-of-line on the very last line of the file. A missing EOL on the last line is considered bad practice for text based files. If you open such files in "vi" you'll get a [noeol] message on the status line as a warning. There are a large number of text files in MEIF which are missing the EOL on the last line.

NOEOL files in the MEIF repository: [^noeol.txt]

NOEOL files in the industrial-meif repository:
 * recipes-core/images/development-ade.bbappend

NOEOL files in the meta-meif repository:
 * recipes-connectivity/mbedtls/mbedtls_2.4.1.bb

 

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1596036410;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:36;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2719";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"Mel Omni and MEIF build fails with Windows 10 as a host.";s:11:"description";s:648:"Omni Installer: [ftp://inpftp.ina.mentorg.com/pub/omni/200707_0400/omni-windows-x64-2.0.0.zip]

MEIF Installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200722-222208/outputs/meif-windows-x64-1.4.0.zip

Just noticed that the latest Omni with MEIF layer fails on Windows 10 with the following error:

 ERROR: isar-bootstrap-target-1.0-r0 do_bootstrap: Execution of '/home/mel/project/build/tmp/work/mel-omni-amd64/isar-bootstrap-target/1.0-r0/temp/run.do_bootstrap.493' failed with exit code 100: deb [file:///base-apt/meif] buster main build debug

 The build is successful without the MEIF layer. Full error log is attached.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1595594880;s:7:"updated";i:1595594880;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:37;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2718";s:6:"status";s:11:"Code Review";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:46:"Getting error while running aws_jitp.sh script";s:11:"description";s:736:"1 .Install Omni: [ftp://inpftp.ina.mentorg.com/pub/omni/200715_0400/]

2. Install meif installer : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200716-222207/outputs/meif-linux-x64-1.4.0.bin]

3. Go to the following path and run the script :  <meif-installation-directory>/meif/scripts/aws-jitp/

$./aws_jitp.sh

4.Enter AWS Access Key ID

5.Enter AWS Secret Access Key

6.Enter Default Region Name 

7. Enter Default Output Format as None

Expected Result :

The script should run successfully without any error 

Actual Result :

Getting the following error while running the script :
{code:java}
Error parsing parameter '--registration-config': Expected: '=', received: 'EOF' for input: {code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869664;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:38;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2716";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"Investigate if MEIF package feed needs to be updated.";s:11:"description";s:360:"We might add the MEIF debian package to Omni's apt repo. So we might not need a MEIF specific apt repo.
If we continue using MEIF apt repo, the we might investigate on using some better way to provide link to the meif apt repo rather than asking user to copy it to the mel-apt folder inside omni installation directory.

Input from Omni team will be needed.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1595489936;s:7:"updated";i:1595489949;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:39;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2715";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"Investigate how MEIF goes into the unified installer.";s:11:"description";s:200:"The unified installer is expected to be built this Friday.
We need to ask Srikanth/Ciby if they need anything from MEIF team.

Depending on what is required the work will be done under this ticket.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:79200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595593690;s:7:"updated";i:1595593690;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:40;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2714";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:32:"Add manifest files to build MEIF";s:11:"description";s:99:"The MEL standard of building any package is to provide manifest files. We need to add one for MEIF.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595593794;s:7:"updated";i:1595830103;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:41;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2713";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:33:"Install MEIF from debian package.";s:11:"description";s:219:"Currently the industrial-meif recipe builds the MEIF code from source . We want to change this behavior and add support in Omni to use the MEIF debian package. The option to build MEIF from source still should be there.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1595489910;s:7:"updated";i:1595489970;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:42;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2712";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:66:"Rollback not working for docker stack with meif-agent autostarted ";s:11:"description";s:1843:"1) Install Omni: [ftp://inpftp.ina.mentorg.com/pub/omni/200707_0400/omni-linux-x64-2.0.0.bin]
 Install meif installer : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200716-222207/outputs/meif-linux-x64-1.4.0.bin]

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) cd <mel-omni-installation-path>/mel-omni-os/2/

6) ./melomni-devshell.ps1 -c -d ../../aws_build -l ./meif/support/isar/industrial-meif -m
 industrial-pc
 7) updated cloud variables in local.conf file
 8) ./melomni-devshell.ps1 -b -d ../../aws_build
 9) Do the docker stack update through AWS 
 10) After update do the rollback for the same :
 i. open AWS console and subscribe to topic: "device/<thing-name>/command/result"
 ii.Then pulish to topic : "device/<thing-name>/command"
 \{ "clientToken" : "your_token", "command" : "docker-stack-rollback" , "arguments": {"backupNumber":1}}
 11)You should get the following output : as " Rollback Successful"

Actual Result :
 Rollback is not happening when meif-agent is autostarted , but when we start the agent manually it is working fine .getting the below output when agent is autostarted:
{code:java}
{
  "clientToken": "your_token",
  "command": "docker-stack-rollback",
  "response": "find: ‘/run/media/persistent/swupdate/docker-stack/stack-demo.1595418788’: Permission denied\n",
  "status": 409
} {code}
Expected Result :
 Rollback should work irrespective of the meif-agent started manually or automatically .";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595862549;s:7:"updated";i:1595869664;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:43;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2711";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:119:"MEIF should use mel-setup-cli to do runtime configurations instead of asking user to modify the meif.ini file directly.";s:11:"description";s:266:"Use the mel-setup-cli to do MEIF run time configurations.
Update the GSG accordingly.

MEIF is already integrated with mel-setup UI and CLI. So its mainly a documentation ticket. 

However if there is any missing option in mel-setup then that will have to added";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595308390;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:44;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2710";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:58:"Use mel-setup-cli to update the MEIF runtime configuration";s:11:"description";s:438:"Currently the code updates the meif.ini file directly using sed commands probably. We need to use the mel-setup-cli utility available in Omni to update the MEIF runtime configurations.

e.g to update deviceid for azure you need to run
{code:java}
$ sudo mel-setup-cli --MEIF_CLOUD=azure --MEIF_AZURE_DEMO_DEVICE_ID=newdeviceid meif {code}
to get help and list all available arguments
{code:java}
$ sudo mel-setup-cli -h meif {code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:50400;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595932095;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:45;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2708";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:57:"Replace multiple debian/*.install files with a single one";s:11:"description";s:329:"While looking at the MEIF sources, Srikanth commented that the following multiple files in the MEIF debian/ directory were not according to Debian conventions:
 * meif-dev.install
 * meif.install
 * meif-lib.install

There should likely be a single meif.install file even if there are multiple .deb packages being generated.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1596036441;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:46;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2707";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:57:"Collectd configuration option not available at First Boot";s:11:"description";s:1383:"*Issue:*
 ----------------
Collectd Configuration option not available at First Boot to configure cloud

*Steps:*
 -----------
 Steps:
 -----------
 1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200715_0400/omni-linux-x64-2.0.0.bin
 MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200717-222208/outputs/meif-linux-x64-1.4.0.bin
 2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ../allcld -m industrial-pc
6) Setup MEIF_CLOUD = "all"  in local.conf only
MEIF_ENABLE_COLLECTD ?= "y"

7) ./melomni-devshell.sh -b -d ../allcld -m industrial-pc
8) PrepareUSB stick & started First boot setup

Expected Output:
---------------------
Should get collectd configuration option during first boot setup

Actual Output:
-----------------
Not getting collectd Configuration option during first boot. 
Even after Target is up, mel-setup is also not having collectd configuration option
 !collectd_config_first_boot_issue.jpeg|thumbnail! ";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:9:"MEIF-2706";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595849693;s:7:"updated";i:1595932966;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:47;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2706";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"MEIF configuration option not available at First Boot";s:11:"description";s:1287:"*Issue:*
 ----------------
MEIF option not available at First Boot to configure cloud

*Steps:*
 -----------
 Steps:
 -----------
 1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200715_0400/omni-linux-x64-2.0.0.bin
 MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200717-222208/outputs/meif-linux-x64-1.4.0.bin
 2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ../downstream -m industrial-pc
6) Setup MEIF_CLOUD = "all"  in local.conf only (other variable not set)
7) PrepareUSB stick & started First boot setup

Expected Output:
---------------------
Should get meif configuration option during first boot setup

Actual Output:
-----------------
Not getting MEIF Configuration option during first boot. 
Even after Target is up, mel-setup is also not having meif configuration option
 !meif_first_boot_setup_issue.jpeg|thumbnail! ";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:5:"fixes";a:1:{i:0;s:9:"MEIF-2707";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595849689;s:7:"updated";i:1595932925;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:48;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2705";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:100:"MEIF should use Omni's way of doing configurations at runtime i.e use mel-setup-cli or mel-setup UI.";s:11:"description";s:375:"Currently we ask the user to edit the meif.ini file.

However Omni asks the users to run mel-setup-cli or mel-setup to do run time configurations.
We already have MEIF configurations added in the mel-setup.

We need to add testing capability to validate the input and any other required thing.

GSG documnentation needs to be updated too . It will get simplified alot.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595933754;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:49;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1955";s:6:"sprint";a:1:{i:0;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2704";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:82:"QA: Review the feedback provided to Techpubs for MEIF 1.4.0 documentation (part 2)";s:11:"description";s:968:"This is a follow-up task of MEIF-2479.

Verify the feedback provided under following Jira issues in the documentation available in MEIF installer.

*MEIF User's and Reference Manual*.
 * Verify the comments provided in the manual attached in https://jira.alm.mentorg.com/browse/MEIF-2643?focusedCommentId=718085&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-718085 at MEIF-2643. Please see Dev provided feedback in MEIF-2703.
 * Verify "_Appendix B Build System and Directory Structure"_ as per [MEIF-1.4 - User's and Reference Manual|https://confluence.alm.mentorg.com:8090/display/MEIF/MEIF-1.4+-+User%27s+and+Reference+Manual].

*MEIF Getting Started Guide*
 * Verify the feedback provided in the description of MEIF-2692.
 * Verify "_Appendix CMake Configuration Options"_ as per the feedback provided under MEIF-2693.

*MEIF Host Tool User's Guide*
 * Verify the feedback provided in the description of MEIF-2688.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595598358;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:3:"doc";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:50;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2703";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"Queries regarding MEIF User's and Reference Manual";s:11:"description";s:178:"Please review [^meif_useref_200709-222209_sfarooq.pdf] and provide your feedback for some outstanding comments.

The outstanding comments can be filtered with "@asaleem".

 ";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:6:"Blocks";a:1:{i:0;s:9:"MEIF-2643";}}s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2698";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:72000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1596027549;s:7:"updated";i:1596027590;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:16:"meif-1.4-qa-bugs";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:51;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2702";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:66:"Update the azure downstream documentation with x509 based workflow";s:11:"description";s:332:"The runtime configuration using update-ca-certificates needs to be updated. The update-ca-certificates command is just for verification of certificates between downstream device and azure edge device. The Azure SDK does not use the built in certificates from /etc/ssl/certs rather it uses the "TrustedCerts" option of the SDK.

 ";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:16:"is child task of";a:1:{i:0;s:9:"MEIF-2696";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869664;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:52;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2701";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:66:"Update the build time configutaiton mechanism in MEIF for MEL Omni";s:11:"description";s:390:"Currently we ask the user to edit the local.conf file to do build time configuration and edit the meif.ini file to do run time configurations.

We need to update the build time configurations to ask user to set the values in meif.ini file to do build time configurations instead of updating the local.conf. this will unify the build and run time configurations and simply the GSG as well.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594969395;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:53;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2700";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:89:"Update the MEIF GSG to mention the steps required to use custom folders for certificates.";s:11:"description";s:371:"Azure, Aws and Azure IoT Edge can have certificates placed in folders other than /etc/ssl/certs. However without proper folder/file permissions MEIF agent or azure iot edge service cannot read the certificates.
We need add specific instructions in GSG to tell user what permissions the folders need to have inorder for these folder to be used as certificates directories";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:5:"fixes";a:1:{i:0;s:9:"MEIF-2695";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869664;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:54;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2699";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:51:"MEIF 1.4.0 for MEL Omni OS User's Guide (Sprint 11)";s:11:"description";s:318:"# Please see my comments in [^meif_mel_omni_gs_200709-222209_sfarooq.pdf].
 # The section *SA IoT Device Tracing Run Time Configuration* needs to be updated as per [https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-SAIoTDeviceTracingConfiguration.1].

 ";s:10:"issuelinks";a:1:{s:3:"out";a:2:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2692";}s:10:"depends on";a:2:{i:0;s:9:"MEIF-2484";i:1;s:9:"MEIF-2673";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595915161;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:7:"doctask";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:55;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2698";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:50:"MEIF 1.4.0 User's and Reference Manual (Sprint 11)";s:11:"description";s:620:"Incorporate all changes required in the MEIF 1.4 User's and Reference manual.

Engineering content available here:

[https://confluence.alm.mentorg.com:8090/display/MEIF/MEIF-1.4+-+Getting+Started+Guide] [https://confluence.alm.mentorg.com:8090/display/MEIF/MEIF-1.4+-+User%27s+and+Reference+Manual]

Per revision reviews of the document are being tracked here: https://confluence.alm.mentorg.com/pages/viewpage.action?pageId=191301668

(the changes being made under this ticket follow the documentation change process: [https://confluence.alm.mentorg.com/display/PS/MEIF+1.4+-+Documentation+Change+Management])";s:10:"issuelinks";a:1:{s:3:"out";a:2:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2643";}s:10:"depends on";a:3:{i:0;s:9:"MEIF-2484";i:1;s:9:"MEIF-2673";i:2;s:9:"MEIF-2703";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595913430;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:7:"doctask";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:56;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2697";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:67:"Device Commands Outputs are not consistent across AWS & Azure cloud";s:11:"description";s:2998:"*Issue:*
 ----------------
Device command Output are inconsistent across clouds

*Steps:*
 -----------
 Steps:
 -----------
 1) Omni Installer: [ftp://inpftp.ina.mentorg.com/pub/omni/200707_0400/omni-linux-x64-2.0.0.bin]
 MIEF installer: [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200707-222208/outputs/meif-linux-x64-1.4.0.bin]
2) Set MEIF_CLOUD = "all"  and all cloud variables
3) BUild the image using melomnidevshell command
4) IPC127E booted with Builded image 
5) Stopped meif-agent-autostart agent
6) Manually started aws-agent & azure-agent in 2 different terminal

Below are the Observations on command output across aws & azure cloud
|| AWS Cloud Command || Output ||
| ping | MEIF executed Ping successfully |
| get-diagnostics-cpu | Command result: {"CPU_Diagnostic":{"CPU":{"Usage":"5.5000%"},"CPU0":{"Usage":"5.4400%"},"CPU1":{"Usage":"5.6200%"},"CPU2":{"Usage":"6.2500%"},"CPU3":{"Usage":"4.7100%"}}} |
| get-diagnostics-memory | Command result:{"Total Memory(kB)":3877528,"Memory Used(kB)":645308,"Available Memory(kB)":3232220,"Available Memory(%)":"83.36","Buffered Used(kB)":15904,"Cached Memory(kB)":568284,"Slab Reclaimable Memory(kB)":47948,"Slab Unreclaimable Memory(kB)":64280} |
| get-diagnostics-ssd |  {"SSD":{"ReadRateError":0,"ReallocatedSectorsCount":0,"PowerOnHours":12,"UncorrectableErrorCount":0,"RemainingLifetimePercentage":100,"UnsafeShutdownCount":284,"Temperature(celcius)":28,"ReallocatedEventCount":0,"CurrentPendingSectorCount":0,"UncorrectedSectorCount":0}} |
| get-diagnostics-disk-usage | {"SystemPartition":{"total(MB)":8016,"available(MB)":5733,"used(MB)":2283,"usedPct":"28.48 %"},"UserPartition":{"total(MB)":3951,"available(MB)":3715,"used(MB)":236,"usedPct":"5.97 %"}} |
| get-fwupdate-logs | Command result: {"error":"Fatal error."} Command status:500 |
| get-daignostics-thermal | Command was not found. |

|| Azure Cloud Command || Output ||
| ping | Command ping found,Command ping has no arguments Device command executed |
| get-diagnostics-cpu | Direct method payload: {} Command get-diagnostics-cpu found, Command get-diagnostics-cpu has no arguments Device command executed |
| get-diagnostics-memory | Direct method payload: {} Command get-diagnostics-memory found, Command get-diagnostics-memory has no arguments |
| get-diagnostics-ssd | Direct method payload: {} Command get-diagnostics-ssd found, Command get-diagnostics-ssd has no arguments |
| get-diagnostics-disk-usage | Direct method payload: {} Command get-diagnostics-disk-usage found, Command get-diagnostics-disk-usage has no arguments |
| get-fwupdate-logs | Direct method payload: {} Command get-fwupdate-logs found, Command get-fwupdate-logs has no arguments |
| get-daignostics-thermal | NO option for get-daignostics-thermal command |
| IncreasePressure | Direct method name:    IncreasePressure Direct method payload: {} |
| EmergencyValveRelease | Direct method name:    EmergencyValveRelease Direct method payload: {} |
";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1596096645;s:7:"updated";i:1596096652;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:57;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2696";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:95:"Azure-downstreamdevice : Run time setup(in meif.ini) is not working for azure downstream device";s:11:"description";s:18393:"*Issue:*
 ----------------
Run time setup(in meif.ini) is not working for azure downstream device when image build using MEIF_CLOUD set to all

*Steps:*
 -----------
 Steps:
 -----------
 1) Omni Installer: [ftp://inpftp.ina.mentorg.com/pub/omni/200707_0400/omni-linux-x64-2.0.0.bin]
 MIEF installer: [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200707-222208/outputs/meif-linux-x64-1.4.0.bin]
 2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ../downstream -m industrial-pc
6) Setup MEIF_CLOUD = "all"  in local.conf only (other variable not set)
7) Target is up with Builded image
8) Configured /run/media/persistent/meif.ini for Azure-downstream
{code}
root@allazure:~/certs# vi /run/media/persistent/meif.ini 
root@allazure:~/certs# cat /run/media/persistent/meif.ini 
# Run Time Cloud Configurations

# Name of binary to autostart. It must be placed in /usr/bin or /usr/local/bin directory
# depending upon where other agents are installed to avoid errors related to missing executable
# and permissions of folders.
MEIF_AUTOSTART_BIN=azure-agent

# AWS Run Time Configurations

#MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID=<my_client_id>
#MEIF_AWS_IOT_CLIENT_MY_THING_NAME=<my_thing_name>
#MEIF_AWS_IOT_HOST_MQTT_ADDR=<my_host_addr>
#MEIF_AWS_IOT_MQTT_PORT=<my_host_port>
#MEIF_AWS_IOT_CERTS_TGT_DIR=<my_cert_path>
#MEIF_AWS_IOT_ROOT_CA_FILENAME=<root_CA_filename>
#MEIF_AWS_IOT_CERTIFICATE_FILENAME=<device_certificate_filename>
#MEIF_AWS_IOT_PRIVATE_KEY_FILENAME=<device_private_key_filename>

# Azure Run Time Configurations

MEIF_AZURE_DEMO_DEVICE_ID=azure_device_test
MEIF_AZURE_DEMO_HOSTNAME=edge.azure-devices.net
MEIF_AZURE_DEMO_DEVICE_KEY=4SC1tohk7YwXq2a2TEkgoegbaolYhoRD2Yn6H5rPm6s=

# MindConnect Run Time Configurations

#MEIF_MINDSPHERE_SERVER_BASEURL=<baseurl>
#MEIF_MINDSPHERE_INITIAL_ACCESS_TOKEN=<iat>
#MEIF_MINDSPHERE_TENANT=<name>

# Azure IoT Edge Run Time Configurations

#MEIF_AZURE_IOT_EDGE_CONNECTION_STRING=<azure_iot_edge_connection_string>
#MEIF_AZURE_IOT_EDGE_GATEWAY_CERTS_TGT_DIR=<azure_iot_edge_gateway_certificates_path>
#MEIF_AZURE_IOT_EDGE_GATEWAY_ROOT_CA_FILENAME=<azure_iot_edge_gateway_root_certificate>
#MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_CERT_FILENAME=<azure_iot_edge_gateway_device_certificate>
#MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_PVT_KEY_FILENAME=<azure_iot_edge_gateway_private_key>

# Docker Stack Run Time Configurations

# Maximum number of Docker Stack deployments to backup. Default value is 2.
# If value given is less than 1, default value is used.
#MEIF_DOCKER_STACK_MAX_BACKUPS=<number_of_backups>
root@allazure:~/certs# 
{code}

9) configured /etc/hosts file
{code}
root@allazure:~/certs# cat /etc/hosts
# loopback
127.0.0.1 localhost
127.0.1.1 allazure

192.168.0.107	edge.azure-devices.net
# The following lines are desirable for IPv6 capable hosts
::1       ip6-localhost ip6-loopback
fe00::0   ip6-localnet
ff00::0   ip6-mcastprefix
ff02::1   ip6-allnodes
ff02::2   ip6-allrouters
root@allazure:~/certs# 
{code}
10 ) configured rootca certificates (same as edge device)
{code}
root@allazure:~/certs# ls
azure-iot-test-only.root.ca.cert.pem  iot-edge-device-ca-MyEdgeDeviceCA-full-chain.cert.pem  iot-edge-device-ca-MyEdgeDeviceCA.key.pem
root@allazure:~/certs# mkdir /usr/local/share/ca-certificates/extra
root@allazure:~/certs# cp azure-iot-test-only.root.ca.cert.pem /usr/local/share/ca-certificates/extra/azure-iot-test-only.root.ca.cert.crt
root@allazure:~/certs# update-ca-certificates 
Updating certificates in /etc/ssl/certs...
1 added, 0 removed; done.
Running hooks in /etc/ca-certificates/update.d...
done.
root@allazure:~/certs# 
{code}

11) Reboot the target

12) Openssl command (just to check connection between edge and downstream device)
{code}
root@allazure:~# openssl s_client -connect edge.azure-devices.net:8883 -CAfile /root/certs/azure-iot-test-only.root.ca.cert.pem -showcerts
CONNECTED(00000003)
depth=4 CN = Azure_IoT_Hub_CA_Cert_Test_Only
verify return:1
depth=3 CN = Azure_IoT_Hub_Intermediate_Cert_Test_Only
verify return:1
depth=2 CN = MyEdgeDeviceCA.ca
verify return:1
depth=1 CN = iotedged workload ca
verify return:1
depth=0 CN = edge.azure-devices.net
verify return:1
---
Certificate chain
 0 s:CN = edge.azure-devices.net
   i:CN = iotedged workload ca
-----BEGIN CERTIFICATE-----
MIIEhjCCAm6gAwIBAgIEa4tFZzANBgkqhkiG9w0BAQsFADAfMR0wGwYDVQQDDBRp
b3RlZGdlZCB3b3JrbG9hZCBjYTAeFw0yMDA3MTQxODM5NDNaFw0yMDA4MTIwNjUz
MzdaMCExHzAdBgNVBAMMFmVkZ2UuYXp1cmUtZGV2aWNlcy5uZXQwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQC7wYNcuQh09rLVyFQaNU/OuGBoXuoI0swD
WXy3ZU+ZzhdVoeRYpWD1Wu8PdPGdgH2vkMQh3ElM9Dg4oSFi3X9Fy3bZCphWPnRt
fvhHikUOl8YNf/Yk7fb9/h3CkEJDsJpEmxO32qe5c4ijRM79D6QIwGZZaaDoE/eM
56CV9RyQIPp/3dNO9LfocHctNy1482MuR/2rBoS0O0izQVmHyQME7FSyJ1gSWApQ
E2RNi3ZgCPy22EBgLoKS9Kk3in/6KYCUXSpiBhyr29/Fz81Hb7yYZnoXslQEzVqd
TzjD9VzX3HWLQj0a/xqbi0A71KcDEIwikbHfgD7U+4COFYFA7zw5AgMBAAGjgccw
gcQwCQYDVR0TBAIwADAOBgNVHQ8BAf8EBAMCA/gwEwYDVR0lBAwwCgYIKwYBBQUH
AwEwKgYDVR0RBCMwIYIWZWRnZS5henVyZS1kZXZpY2VzLm5ldIIHZWRnZWh1YjAd
BgNVHQ4EFgQUKD387cCPA8CjRuFe0qPhPqQDmmUwRwYDVR0jBEAwPoAUTRsO6TWY
4f6CT/9gcMIcCdIs3lyhIKQeMBwxGjAYBgNVBAMMEU15RWRnZURldmljZUNBLmNh
ggRri0VnMA0GCSqGSIb3DQEBCwUAA4ICAQCKP/b1Zho9NT972aDPvvZbrGDHUQZG
L445xvbHlX5EH7w53VS/cPd34ZysS/k0T56GGt02WcKI+hjYfgs6hfalZwX8qqLR
d8SYiPJ7w+/vNndbxh0cgjUKud2TXAQ4/oim0ciWs5flUY8MYp9cZq9auMwus5SW
gE3BqS4fKbjACsbiqi+wXm1ehiD1k/EEPQFXjqMTB+pNVBH1J87WLty9Gklb0kWm
nF7nSA1aLHXhKyRRYvqed4jPanyjEq49V1V1hdVoI5vgdsssBBkSca12Akh+6TOE
f9pKEgmfNswmi/x5VAMohIdbNOOcemCBukNR5MSu68sp+9/nTboyCImsu4UU1gqP
d/7j4uCeZ3U6V3VeOLOgpueJ0GI3Q76fPIl0WCBisgH1zdgarMvFvyFzLwewd+Oy
BTh4eOj5k3bVysxx/xo7KYCNNLcv9dP6Y2+VZx/1H08pxAuJ5UxTzaJCr8qm3sr/
VvDa4kxUb/pEnrM2Soq2ULEc4fyFalYGzkNv8lOatpJlrCj600ZP/JnG3AsOB1hF
CjgagzPbvUTo8HQDTABfL6d+vPfi6hORBVcgLsNONBL+yBcrey3cQBTLMTs2MRUX
o6S/qATAu83rqR7doNg2pxumOpUMVA06vloMJpKr6qaPUE8dKrCDJgnEmBDpnywF
gxvhl59hrqk6jA==
-----END CERTIFICATE-----
 1 s:CN = iotedged workload ca
   i:CN = MyEdgeDeviceCA.ca
-----BEGIN CERTIFICATE-----
MIIFXzCCA0egAwIBAgIEa4tFZzANBgkqhkiG9w0BAQsFADAcMRowGAYDVQQDDBFN
eUVkZ2VEZXZpY2VDQS5jYTAeFw0yMDA3MTMxNjMxNTZaFw0yMDA4MTIwNjUzMzda
MB8xHTAbBgNVBAMMFGlvdGVkZ2VkIHdvcmtsb2FkIGNhMIICIjANBgkqhkiG9w0B
AQEFAAOCAg8AMIICCgKCAgEAwcocrxMiMfikYkrZsrACMZ6hIAtJ0aP9igEywswx
3JQ2nQcvGw3DD3Wligr1re2FB1DTRrhRjRkIe6BZLy+jEeXoZQ5mp/W3dTSlmYr7
2VeZ8ER9uWMvqS9GOqeYkk62zdSrmfczL652xbd3TrbZ79cRuuc6vnqp7QuzURrM
Hb0t06eqxy3xfXpZoV+u88lJQQeM5U2w8amXlcvnX2TPFgIX+TyBdy0UXWHmusqY
JHeraPMH17L+IxvV9DOdD0WkcGZR6A2QY2x0Z1rtAJ9x4rZe+Qdj/nD+hAGR30tG
tqLqddQQ3qxCSgfGvDLLhILMoetIYuyeUxbDn0A8+ESUnV5aM5FnoBIwLSOU8iNZ
0bQNrUTpNUrCvg4/vX86e0sElV/H0k0CnLLiuTRFhDpncyvXqyEBxlplz+WnynzB
7ekuY1+ppa9UycEFTNoTtGPqeGOH8fSigyJucscjOq9r/wtIjlAF81QdolsQ6oFo
iqsf/5xbKENYze9iHNx0+r2AjkZqEIj7bAIzFmiVYjeDC4xKyBtHgdNup5PFWU3U
yktQP7GTSM9W/mUDBW9VO6Oyz7wsYV35FiYz8PmLPWTh4yqygY8+l5FgELEELk+l
8rM0AsP0OVbTZPmfSHF/TeWNmh4f4uCuJAMzJIAlAmYr3FHrq6/N3o2KyeC/3EJU
tXcCAwEAAaOBpTCBojASBgNVHRMBAf8ECDAGAQEBAgEAMA4GA1UdDwEB/wQEAwIC
hDAdBgNVHQ4EFgQUTRsO6TWY4f6CT/9gcMIcCdIs3lwwXQYDVR0jBFYwVIAUPGEG
nUNdRhiqT7g+tLrDUE3lijShOKQ2MDQxMjAwBgNVBAMMKUF6dXJlX0lvVF9IdWJf
SW50ZXJtZWRpYXRlX0NlcnRfVGVzdF9Pbmx5ggIQATANBgkqhkiG9w0BAQsFAAOC
AgEAeS8BIc/cNfENIniOXaZ9MOSkBQlyFvXm2IEnw/DZqBFfRMIOOAAosYec79P6
nnvMXvHZUdrkgx/rWepeFLL3PIw/TiNvnuH4UgHkTzgSjQbCuhq+gBo2q3M843nW
KTLX0gRU0u5g3M5XtZlfZZEKbaOUiV4r+3lJcQKhAn4lmRl90w/of8hgCy5eewqT
pArXo+c2wlMtmafe1G3G3rq6lljhaDVTxE+kDdUhxyi3dqrd/0IphFeJOTSWH+vx
efcDbzSabAk2MBbEb792OV1Svh4T8Jbz8rWUehkpAuSCCrO0B5jxoTcURLl0QMJF
jwL9KJfKvZ4o8yhrvIxjBw+yOoNye/guLgyzw0MzxQWVRF3Ki6P52XO6e1grMMUT
DyLF+eQ/p/9GmrGWzXyLKjKNRw8VbJeZzdOGzJ+68HJL2xu6JyFRtaC4HY5BIbX6
m4cr9yDGEJj0X9Ldswsis4JQw+2jwSKImMp+VdpRnNhn8p/8QfdM95woE65C1g6Q
aIdxbJ3boxm0TS1hn4+fUTUYGDaEysoU+mubLoADEznuJo//D2SffreVCmHJP9x8
dlLfzfM5H9Kwa4gL6o6Ii4iZkb1u6pH1Mq/87tDBqUe9jq4ZT6ukdwncMvixPAKb
qwRuiQQ6mgRDN6lyoeYTCnrdoaNVaVJcKYuVOziXQv8GHHA=
-----END CERTIFICATE-----
 2 s:CN = MyEdgeDeviceCA.ca
   i:CN = Azure_IoT_Hub_Intermediate_Cert_Test_Only
-----BEGIN CERTIFICATE-----
MIIFZTCCA02gAwIBAgICEAEwDQYJKoZIhvcNAQELBQAwNDEyMDAGA1UEAwwpQXp1
cmVfSW9UX0h1Yl9JbnRlcm1lZGlhdGVfQ2VydF9UZXN0X09ubHkwHhcNMjAwNzEz
MDY1MzM3WhcNMjAwODEyMDY1MzM3WjAcMRowGAYDVQQDDBFNeUVkZ2VEZXZpY2VD
QS5jYTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKub+seBPj4/AMLN
Qjj7Ob8RVA9KapEPicsJ8UWEXdz5LdapQtVXZzrLvzNK6fNtmoQqIf6X1RLDzlyP
/fZxm0rF9ynjOtIlQCKCpdGYQNl1PXcV6nlOrNs2BgFlsPdsjlZbG4CbV2nOEjyE
s7HGqK8PyDdnPBBeWKzSvM32A8sLEqlTuh1uRX9biU044k1xp823BBsU1q4rrzIc
vcVy6ZRXshyvd58FzCdBBsUbI7f8qaPdWqBTBdRwY0sie4tDBF+bgoTfjaby3Hfm
yfHyyPLY6gNzzxHbzmQovTgyKD6brZ0BaZenlJJIIvtyvd0dK3IPdjk2ZAunCzPP
k2JA9SvoEPg9wFA1PVdyI+BY16d92n9wXzCSHEN55ZnsW/NxUYPH9UDPiGEFECAr
/6LgmGMIGBtFtK5U1aqlGqTkkW+XWEdekJJgiog84fVRmFRzeXcsviqvlpM5q9p2
45n7Op/p1wLaIFKR0HNXY975rmXZNvJy0xWrSEFtpaEk7v9DYYPclWEwn6yTAb7X
F5YkzQkayiQZrKD2A9ZU8b7FSrK9yUHURmtGFaGEJ+ak+hnrZm32CT8iJy9IqkQa
xEbAHYcRrts5jq7nzDM+Ds4+6JceR4h1Ek/ajCTIiOSUH9M56cZyDZLt/a2qLh2U
dJjuMti0zFqeGk0NraaZc0Lcztj5AgMBAAGjgZgwgZUwHQYDVR0OBBYEFDxhBp1D
XUYYqk+4PrS6w1BN5Yo0MFMGA1UdIwRMMEqAFBFOpR2W0fySWfNcbfQMklefS5J4
oS6kLDAqMSgwJgYDVQQDDB9BenVyZV9Jb1RfSHViX0NBX0NlcnRfVGVzdF9Pbmx5
ggIQADAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0B
AQsFAAOCAgEAg1qS7miYsStn3a8+bEhvsVADhd4LGYt4Na/NfrhRZ/ZHbbs0YaQR
6G9AbZEaQeowrt0rZxaDqd5vzouf/rFSs73m4QElgn/UhLxQpRUF78NswcgogV6T
5gdvTkx5L8G6BXXUiL5LpfbaoJBg6knXAUqW4DHZ8pr0AWehCoqwISQ+4vaCCBR1
IzQ7yCM4rpzmI5QXqUe5wJuii8QxOtYCgwBIALVNyzcD5yQRYWCBKH9NXPIZJosZ
yyBbOdxRAXa3u6IrCcsO6z/UtU6fTi990feBCpBDjZg25pOzLvgGj6tRxb0LBCSl
4naSUeKAFcZklGFoIBsMe3Rg9fuDuSfBXMN/GSZ5//cmhXcTvv5XnaYuY3q8eSPn
lF65P20obuuOBnNY8uZhtjkcqw2KA5+ZpYykvZbyNPN51Rl3xDxbkAG57vzEVL59
NTMED/FH8XDcdfcDgjV0FFGEoA+DmebEpGk5TA2y2RhqqFhy8FsgBl9xY2ZzC+Br
4fYmG9zI7yLVDdsnzEsUNUdEpnFT6ptB1nqJDtkjRN8mVYX+weEIW3AmO1f96V3q
KThiywl5xBAF0Ic3FoJtmpZulhBzWYBbupGrCY1i9f6DfwJMxIfEN0KVcD8Ks80w
AH62g5+V/HffthUrRMe0yr22us3pKlR6lE5TfTauy2xC58pR+JCV4rU=
-----END CERTIFICATE-----
 3 s:CN = Azure_IoT_Hub_Intermediate_Cert_Test_Only
   i:CN = Azure_IoT_Hub_CA_Cert_Test_Only
-----BEGIN CERTIFICATE-----
MIIFhTCCA22gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwKjEoMCYGA1UEAwwfQXp1
cmVfSW9UX0h1Yl9DQV9DZXJ0X1Rlc3RfT25seTAeFw0yMDA3MTMwNjUzMzZaFw0y
MDA4MTIwNjUzMzZaMDQxMjAwBgNVBAMMKUF6dXJlX0lvVF9IdWJfSW50ZXJtZWRp
YXRlX0NlcnRfVGVzdF9Pbmx5MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKC
AgEApj6OjTMHticoF/z6EDSGKpmI607Iqr3+YFTo2pHiWjb8gY52826LJjV4R24T
+0C5BioGBChzhCicdmzlLIwB0RTpichTaqdyneDcV3E6OzH0ANN05bPlUaaMtSsa
tcAHlWAXKgM6ROoVmWSp6PE/YGyb3GI4+CHBvS0sKv0Oucf/kpkTE6suK/2T6fkD
WWDjJOSwx4iiPz9Gu7nAQcrqz40YmKf/Y1SPa6VuL2aaNP2QTQrys841mC3iMJZS
r0lVKPgTyNvlnuLMVIn8w0cutzAHKWc6mNsrQDMUgCGXihhj+ap4+sUZRSo4usDD
lDr8PT2tGaZO37s/+WjXwD5mH1GBMevzI6NoS0GxlTvPbw41lrr4eyAaugSSN/az
3SoSyP0+w0XlC463Q6yVhYJjkxd0/YcAt24nVAO15D9IFnj5ZDz+n29LHvWjnR1C
ewf3GpzcxDDryV12gbsvxVQQ9VbqGL0b87QceNRvN2GDWPx/hkV7n7Px2b4yefTw
UK+e9smLCEN16Sy9cZ9uJb0Bm8mR/JwZaH1bZHHPTLt/l8KXDdrKQYMYnzaNflzl
ek/PfmgDaQg5KMh5v3E+O2Zq5farm1Sw+K9NJDO+ORg9Q0WQ8n7tCjyNxUf9YNYh
lCFvs4lMaxhxWnEw2Xg/Rh4zBKLOgt+LtorkCtDE0BjNGUECAwEAAaOBqjCBpzAd
BgNVHQ4EFgQUEU6lHZbR/JJZ81xt9AySV59LkngwZQYDVR0jBF4wXIAU2NxQGood
NwT/ElLWdO7UM+DtUFWhLqQsMCoxKDAmBgNVBAMMH0F6dXJlX0lvVF9IdWJfQ0Ff
Q2VydF9UZXN0X09ubHmCFGJwujG6jpUX7FvVP5DeH15Q/VNEMA8GA1UdEwEB/wQF
MAMBAf8wDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQB4tZFaJY/R
yxaKkZFtMgweK36zOje5hO7wpxihMJWLB+7lNX0Yy2spifIlZbqezIXJXpc1zY6J
EpOpy1CwfZtQe0ETPcWBHwihHXdndlH0phsYZv8dsbGpFW4zN9K0xpFUdSftqPr2
yrRnwGsDt1pPR45/98PHyanGcDGeOx1gTpvAiNYojMvDqYp1wdQzkfewLwL/eAv1
uMA62brgnevDqmyY/dggFJiRX7yNrhEkT19plMxp0ZFgEV/pGgWa53b/LYvFQ7b/
aYBGRZ0uawSkTcJjHuE30+aJ09mSZJ0IuZnBu6EAh9uZM88AMRh9D/ljrftshkNQ
+survX/6sYE775JmIYvjGjWyRJTCs9zLlzPVGY1o9Z5YTkpvLd0QPfvIAz9iYt5x
N1+2bO48A2CwF4Ns15wruxO2X3eAO7xAqTC73hsorPD1y9rRZ0pehXAeZFD5BNpA
wTwxyY+an4QotwGqmPnpaiJI2OFoQO586HVzAIYIa/zbUjcehODIOzi7kmruz8Ix
p5LE2vlEPi5pWY5wSGD3/nNBcBQL2RzCV1xc8RPvIcSz/wpyiVKB9EiaQ9/VJoV5
Aq5RN1It3oERTr9KPQhSvaFRV8ntGYWwWhrjIlUuInFcBSLGKSNUk2fdATER7wHN
JaI6ZoFXuKNuG10CcC09yH1zJcdhrVG0JQ==
-----END CERTIFICATE-----
---
Server certificate
subject=CN = edge.azure-devices.net

issuer=CN = iotedged workload ca

---
No client certificate CA names sent
Client Certificate Types: RSA sign, DSA sign, ECDSA sign
Requested Signature Algorithms: ECDSA+SHA256:ECDSA+SHA384:ECDSA+SHA512:Ed25519:Ed448:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA+SHA256:RSA+SHA384:RSA+SHA512:ECDSA+SHA224:ECDSA+SHA1:RSA+SHA224:RSA+SHA1:DSA+SHA224:DSA+SHA1:DSA+SHA256:DSA+SHA384:DSA+SHA512
Shared Requested Signature Algorithms: ECDSA+SHA256:ECDSA+SHA384:ECDSA+SHA512:Ed25519:Ed448:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA+SHA256:RSA+SHA384:RSA+SHA512:ECDSA+SHA224:RSA+SHA224:DSA+SHA224:DSA+SHA256:DSA+SHA384:DSA+SHA512
Peer signing digest: SHA256
Peer signature type: RSA-PSS
Server Temp Key: X25519, 253 bits
---
SSL handshake has read 6040 bytes and written 419 bytes
Verification: OK
---
New, TLSv1.2, Cipher is ECDHE-RSA-AES256-GCM-SHA384
Server public key is 2048 bit
Secure Renegotiation IS supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
SSL-Session:
    Protocol  : TLSv1.2
    Cipher    : ECDHE-RSA-AES256-GCM-SHA384
    Session-ID: 7D617D4329F32DEAD7BFAAB269738C7639C41C20D964CF1E7FF5A6073676F6CF
    Session-ID-ctx: 
    Master-Key: 062EABA9014858C8E96F1DB62873696F97163A3670E5ACA21375D003DE29371CC75BA73A7221294D94C1D2A276E7263F
    PSK identity: None
    PSK identity hint: None
    SRP username: None
    TLS session ticket lifetime hint: 7200 (seconds)
    TLS session ticket:
    0000 - ba c4 4a 47 12 a7 29 58-5c 6c 4f a2 d7 1a 2f 62   ..JG..)X\lO.../b
    0010 - 7c d9 5e f9 8a 0a f7 5b-db ed 11 e1 14 87 66 c3   |.^....[......f.
    0020 - 2a 9b b8 a4 a3 53 e4 be-d8 ca 09 53 14 14 e1 29   *....S.....S...)
    0030 - 03 df 10 49 08 f5 aa 8b-9a 1c 91 b6 69 17 77 d3   ...I........i.w.
    0040 - a8 a4 fd 5b 37 02 39 dd-22 ef 44 cf eb bf 63 d4   ...[7.9.".D...c.
    0050 - 9f a7 2a 3b bc 25 1e ca-c5 74 4a 91 bd 13 b6 e0   ..*;.%...tJ.....
    0060 - 25 6d 5c 10 3d e1 aa dd-8b 29 26 1c 0c 8e 05 51   %m\.=....)&....Q
    0070 - f6 82 c4 88 c8 d1 2f 9e-2b 9f fe 84 38 ca f7 4a   ....../.+...8..J
    0080 - e5 f9 80 8e 88 79 b4 8e-fc 19 65 38 18 33 53 c3   .....y....e8.3S.
    0090 - ee 4f 2b fb dc de 46 50-9b 62 38 5d 15 5c 46 3f   .O+...FP.b8].\F?

    Start Time: 1594752243
    Timeout   : 7200 (sec)
    Verify return code: 0 (ok)
    Extended master secret: yes
---
^C
root@allazure:~# 

{code}

13) Started azure-agent

Expected Output:
--------------
agent should start sending telemetry data

Actual Output:
-------------
Getting certificate verification failed error

{code}
root@allazure:~# azure-agent 
INFO: update_status file not found

**** Initializing **** 

 ******** Device Connection Information ********
deviceId: [azure_device_test]
iotHubHostname: [edge.azure-devices.net]
deviceKey: [4SC1tohk7YwXq2a2TEkgoegbaolYhoRD2Yn6H5rPm6s=]
connectionString: [HostName=edge.azure-devices.net;DeviceId=azure_device_test;SharedAccessKey=4SC1tohk7YwXq2a2TEkgoegbaolYhoRD2Yn6H5rPm6s=]
zure_main

Azure IoT SDK C version 1.3.8
This sample simulates a Chiller device connected to the Remote Monitoring solution accelerator

Creating IoTHub handle

Supported methods = reboot,FirmwareUpdate,StartTelemetry,StopTelemetry,EmergencyValveRelease,IncreasePressure,ping,get-diagnostics-cpu,get-diagnostics-memory,get-diagnostics-ssd,get-diagnostics-disk-usage,get-fwupdate-logs
Sending sensor value Temperature = 59.000000 F,
Sending sensor value Pressure = 63.000000 psig,
Sending sensor value Humidity = 35.000000 %,
Error: Time:Wed Jul 15 00:15:02 2020 File:/build/azure-c-shared-util-0GU6qG/azure-c-shared-util-0.2.0.0/adapters/tlsio_openssl.c Func:send_handshake_bytes Line:673 error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed
Error: Time:Wed Jul 15 00:15:02 2020 File:/build/azure-umqtt-c-slEP_I/azure-umqtt-c-0.2.0.0/src/mqtt_client.c Func:onOpenComplete Line:454 Error: failure opening connection to endpoint
The device client has been disconnected

Connection Error: Stopping Telemetry
Error: Time:Wed Jul 15 00:15:02 2020 File:/build/azure-c-shared-util-0GU6qG/azure-c-shared-util-0.2.0.0/adapters/tlsio_openssl.c Func:send_handshake_bytes Line:673 error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed
Error: Time:Wed Jul 15 00:15:02 2020 File:/build/azure-umqtt-c-slEP_I/azure-umqtt-c-0.2.0.0/src/mqtt_client.c Func:onOpenComplete Line:454 Error: failure opening connection to endpoint
The device client has been disconnected

Connection Error: Stopping Telemetry
Error: Time:Wed Jul 15 00:15:03 2020 File:/build/azure-c-shared-util-0GU6qG/azure-c-shared-util-0.2.0.0/adapters/tlsio_openssl.c Func:send_handshake_bytes Line:673 error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed
Error: Time:Wed Jul 15 00:15:03 2020 File:/build/azure-umqtt-c-slEP_I/azure-umqtt-c-0.2.0.0/src/mqtt_client.c Func:onOpenComplete Line:454 Error: failure opening connection to endpoint
The device client has been disconnected

Connection Error: Stopping Telemetry
Error: Time:Wed Jul 15 00:15:05 2020 File:/build/azure-c-shared-util-0GU6qG/azure-c-shared-util-0.2.0.0/adapters/tlsio_openssl.c Func:send_handshake_bytes Line:673 error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed
Error: Time:Wed Jul 15 00:15:05 2020 File:/build/azure-umqtt-c-slEP_I/azure-umqtt-c-0.2.0.0/src/mqtt_client.c Func:onOpenComplete Line:454 Error: failure opening connection to endpoint
The device client has been disconnected

Connection Error: Stopping Telemetry
^C
root@allazure:~# 
{code}";s:10:"issuelinks";a:1:{s:3:"out";a:2:{s:8:"fixed by";a:1:{i:0;s:9:"MEIF-2483";}s:17:"is parent task of";a:1:{i:0;s:9:"MEIF-2702";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595307277;s:7:"updated";i:1595869664;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:58;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2695";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:77:"Azure-edge : Run time setup(in meif.ini) is not working for azure edge device";s:11:"description";s:9733:"*Issue:*
 ----------------
Run time setup(in meif.ini) is not working for azure edge device when image build using MEIF_CLOUD set to all

*Steps:*
 -----------
 Steps:
 -----------
 1) Omni Installer: [ftp://inpftp.ina.mentorg.com/pub/omni/200707_0400/omni-linux-x64-2.0.0.bin]
 MIEF installer: [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200707-222208/outputs/meif-linux-x64-1.4.0.bin]
 2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ../edge -m industrial-pc
6) Setup MEIF_CLOUD = "all"  in local.conf only (other variable not set)
7) Target is up with Builded image
8) Configured /run/media/persistent/meif.ini for Azure-edge 
{code}
root@alledge:~# cat /run/media/persistent/meif.ini 
# Run Time Cloud Configurations

# Name of binary to autostart. It must be placed in /usr/bin or /usr/local/bin directory
# depending upon where other agents are installed to avoid errors related to missing executable
# and permissions of folders.
#MEIF_AUTOSTART_BIN=<autostart_binary_filename>

# AWS Run Time Configurations

#MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID=<my_client_id>
#MEIF_AWS_IOT_CLIENT_MY_THING_NAME=<my_thing_name>
#MEIF_AWS_IOT_HOST_MQTT_ADDR=<my_host_addr>
#MEIF_AWS_IOT_MQTT_PORT=<my_host_port>
#MEIF_AWS_IOT_CERTS_TGT_DIR=<my_cert_path>
#MEIF_AWS_IOT_ROOT_CA_FILENAME=<root_CA_filename>
#MEIF_AWS_IOT_CERTIFICATE_FILENAME=<device_certificate_filename>
#MEIF_AWS_IOT_PRIVATE_KEY_FILENAME=<device_private_key_filename>

# Azure Run Time Configurations

#MEIF_AZURE_DEMO_DEVICE_ID=<device_id>
#MEIF_AZURE_DEMO_HOSTNAME=<hostsname>
#MEIF_AZURE_DEMO_DEVICE_KEY=<key>

# MindConnect Run Time Configurations

#MEIF_MINDSPHERE_SERVER_BASEURL=<baseurl>
#MEIF_MINDSPHERE_INITIAL_ACCESS_TOKEN=<iat>
#MEIF_MINDSPHERE_TENANT=<name>

# Azure IoT Edge Run Time Configurations

MEIF_AZURE_IOT_EDGE_CONNECTION_STRING=HostName=pbu-dev-iothub-franz.azure-devices.net;DeviceId=tester;SharedAccessKey=I+gZ7sJkeLN+bsjBGJCMSmh85BerTkMBs0u+ykodtO8=
#MEIF_AZURE_IOT_EDGE_GATEWAY_CERTS_TGT_DIR=<azure_iot_edge_gateway_certificates_path>
#MEIF_AZURE_IOT_EDGE_GATEWAY_ROOT_CA_FILENAME=<azure_iot_edge_gateway_root_certificate>
#MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_CERT_FILENAME=<azure_iot_edge_gateway_device_certificate>
#MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_PVT_KEY_FILENAME=<azure_iot_edge_gateway_private_key>

# Docker Stack Run Time Configurations

# Maximum number of Docker Stack deployments to backup. Default value is 2.
# If value given is less than 1, default value is used.
#MEIF_DOCKER_STACK_MAX_BACKUPS=<number_of_backups>
root@alledge:~# 
{code}
Expected Output:
---------------------
After reboot the target , iotedge service should get started

Actual Output:
------------------
iotedge service failed to start
{code}
root@alledge:~# iotedge list
A module runtime error occurred
	caused by: Could not list modules
	caused by: an error occurred trying to connect: Connection refused (os error 111)

root@alledge:~# 
root@alledge:~# systemctl status iotedge
● iotedge.service - Azure IoT Edge daemon
   Loaded: loaded (/lib/systemd/system/iotedge.service; enabled; vendor preset: enabled)
   Active: failed (Result: exit-code) since Tue 2020-07-14 23:17:57 IST; 14min ago
     Docs: man:iotedged(8)
  Process: 1702 ExecStart=/usr/bin/iotedged -c /etc/iotedge/config.yaml (code=exited, status=1/FAILURE)
 Main PID: 1702 (code=exited, status=1/FAILURE)

Jul 14 23:17:57 alledge systemd[1]: iotedge.service: Service RestartSec=100ms expired, scheduling restart.
Jul 14 23:17:57 alledge systemd[1]: iotedge.service: Scheduled restart job, restart counter is at 5.
Jul 14 23:17:57 alledge systemd[1]: Stopped Azure IoT Edge daemon.
Jul 14 23:17:57 alledge systemd[1]: iotedge.service: Start request repeated too quickly.
Jul 14 23:17:57 alledge systemd[1]: iotedge.service: Failed with result 'exit-code'.
Jul 14 23:17:57 alledge systemd[1]: Failed to start Azure IoT Edge daemon.
root@alledge:~# systemctl restart iotedge
root@alledge:~# 
root@alledge:~# 
root@alledge:~# systemctl status iotedge
● iotedge.service - Azure IoT Edge daemon
   Loaded: loaded (/lib/systemd/system/iotedge.service; enabled; vendor preset: enabled)
   Active: inactive (dead) (Result: exit-code) since Tue 2020-07-14 23:32:39 IST; 66ms ago
     Docs: man:iotedged(8)
  Process: 1802 ExecStart=/usr/bin/iotedged -c /etc/iotedge/config.yaml (code=exited, status=1/FAILURE)
 Main PID: 1802 (code=exited, status=1/FAILURE)

Jul 14 23:32:39 alledge systemd[1]: iotedge.service: Service RestartSec=100ms expired, scheduling restart.
Jul 14 23:32:39 alledge systemd[1]: iotedge.service: Scheduled restart job, restart counter is at 5.
Jul 14 23:32:39 alledge systemd[1]: Stopped Azure IoT Edge daemon.
Jul 14 23:32:39 alledge systemd[1]: Dependency failed for Azure IoT Edge daemon.
Jul 14 23:32:39 alledge systemd[1]: iotedge.service: Job iotedge.service/start failed with result 'dependency'.
root@alledge:~# 
root@alledge:~# systemctl status iotedge
● iotedge.service - Azure IoT Edge daemon
   Loaded: loaded (/lib/systemd/system/iotedge.service; enabled; vendor preset: enabled)
   Active: inactive (dead) (Result: exit-code) since Tue 2020-07-14 23:32:39 IST; 6s ago
     Docs: man:iotedged(8)
  Process: 1802 ExecStart=/usr/bin/iotedged -c /etc/iotedge/config.yaml (code=exited, status=1/FAILURE)
 Main PID: 1802 (code=exited, status=1/FAILURE)

Jul 14 23:32:39 alledge systemd[1]: iotedge.service: Service RestartSec=100ms expired, scheduling restart.
Jul 14 23:32:39 alledge systemd[1]: iotedge.service: Scheduled restart job, restart counter is at 5.
Jul 14 23:32:39 alledge systemd[1]: Stopped Azure IoT Edge daemon.
Jul 14 23:32:39 alledge systemd[1]: Dependency failed for Azure IoT Edge daemon.
Jul 14 23:32:39 alledge systemd[1]: iotedge.service: Job iotedge.service/start failed with result 'dependency'.
root@alledge:~# journalctl -u iotedge -f
-- Logs begin at Tue 2020-07-14 23:06:56 IST. --
Jul 14 23:32:39 alledge iotedged[1802]: 2020-07-14T18:02:39Z [INFO] - Starting provisioning edge device via manual mode...
Jul 14 23:32:39 alledge iotedged[1802]: 2020-07-14T18:02:39Z [ERR!] - The daemon could not start up successfully: Could not initialize manual provisioning client
Jul 14 23:32:39 alledge iotedged[1802]: 2020-07-14T18:02:39Z [ERR!] -         caused by: The Connection String is missing required parameter SharedAccessKey
Jul 14 23:32:39 alledge systemd[1]: iotedge.service: Main process exited, code=exited, status=1/FAILURE
Jul 14 23:32:39 alledge systemd[1]: iotedge.service: Failed with result 'exit-code'.
Jul 14 23:32:39 alledge systemd[1]: iotedge.service: Service RestartSec=100ms expired, scheduling restart.
Jul 14 23:32:39 alledge systemd[1]: iotedge.service: Scheduled restart job, restart counter is at 5.
Jul 14 23:32:39 alledge systemd[1]: Stopped Azure IoT Edge daemon.
Jul 14 23:32:39 alledge systemd[1]: Dependency failed for Azure IoT Edge daemon.
Jul 14 23:32:39 alledge systemd[1]: iotedge.service: Job iotedge.service/start failed with result 'dependency'.
{code}

*NOTE:* First i tried with default certificates which get generated at build time. 2nd time i have set my certificated in meif.ini file and tried , but still service is getting failed

*with user defined certificates*
{code}
root@alledge:~/certs# cat /run/media/persistent/meif.ini 
# Run Time Cloud Configurations

# Name of binary to autostart. It must be placed in /usr/bin or /usr/local/bin directory
# depending upon where other agents are installed to avoid errors related to missing executable
# and permissions of folders.
#MEIF_AUTOSTART_BIN=<autostart_binary_filename>

# AWS Run Time Configurations

#MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID=<my_client_id>
#MEIF_AWS_IOT_CLIENT_MY_THING_NAME=<my_thing_name>
#MEIF_AWS_IOT_HOST_MQTT_ADDR=<my_host_addr>
#MEIF_AWS_IOT_MQTT_PORT=<my_host_port>
#MEIF_AWS_IOT_CERTS_TGT_DIR=<my_cert_path>
#MEIF_AWS_IOT_ROOT_CA_FILENAME=<root_CA_filename>
#MEIF_AWS_IOT_CERTIFICATE_FILENAME=<device_certificate_filename>
#MEIF_AWS_IOT_PRIVATE_KEY_FILENAME=<device_private_key_filename>

# Azure Run Time Configurations

#MEIF_AZURE_DEMO_DEVICE_ID=<device_id>
#MEIF_AZURE_DEMO_HOSTNAME=<hostsname>
#MEIF_AZURE_DEMO_DEVICE_KEY=<key>

# MindConnect Run Time Configurations

#MEIF_MINDSPHERE_SERVER_BASEURL=<baseurl>
#MEIF_MINDSPHERE_INITIAL_ACCESS_TOKEN=<iat>
#MEIF_MINDSPHERE_TENANT=<name>

# Azure IoT Edge Run Time Configurations

MEIF_AZURE_IOT_EDGE_CONNECTION_STRING=HostName=pbu-dev-iothub-franz.azure-devices.net;DeviceId=tester;SharedAccessKey=I+gZ7sJkeLN+bsjBGJCMSmh85BerTkMBs0u+ykodtO8=
MEIF_AZURE_IOT_EDGE_GATEWAY_CERTS_TGT_DIR=/root/certs
MEIF_AZURE_IOT_EDGE_GATEWAY_ROOT_CA_FILENAME=azure-iot-test-only.root.ca.cert.pem
MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_CERT_FILENAME=iot-edge-device-ca-MyEdgeDeviceCA-full-chain.cert.pem
MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_PVT_KEY_FILENAME=iot-edge-device-ca-MyEdgeDeviceCA.key.pem

# Docker Stack Run Time Configurations

# Maximum number of Docker Stack deployments to backup. Default value is 2.
# If value given is less than 1, default value is used.
#MEIF_DOCKER_STACK_MAX_BACKUPS=<number_of_backups>
root@alledge:~/certs# 


root@alledge:~/certs#
{code}";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:9:"MEIF-2700";}}}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:1800;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1594909273;s:7:"updated";i:1595064829;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:59;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2694";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:40:"Build getting failed using BB_NO_NETWORK";s:11:"description";s:4323:"Steps to reproduce:
 ---------------------
 1) Install Omni: [ftp://inpftp.ina.mentorg.com/pub/omni/200707_0400/omni-linux-x64-2.0.0.bin]
 Install meif installer : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200713-222208/outputs/meif-linux-x64-1.4.0.bin]

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) cd <mel-omni-installation-path>/mel-omni-os/2/

6) ./melomni-devshell.ps1 -c -d ../../aws_build -l ./meif/support/isar/industrial-meif -m
 industrial-pc
 7) updated cloud variables in local.conf file

8) ./melomni-devshell.ps1 -b -d ../../aws_build

Expected Output:
 --------------------------
 Build should get completed without any error

Actual Output:
 -------------------
 Build get failed with the below error :
{code:java}
 kalyani@debian:~/m-6july/mel-omni-os/2$ ./melomni-devshell.sh -b -d /home/kalyani/m-6july/w-mind/ -t service-stick-image
**************************************************************************
Warning: group id on host does not match the one in container
**************************************************************************
### Shell environment set up for builds. ###You can now run 'bitbake <target>'Common targets are:
    core-image
    development-ade
    development-image
    service-stick-image
Parsing recipes: 100% |#################################################| Time: 0:00:01
Parsing of 127 .bb files complete (0 cached, 127 parsed). 127 targets, 0 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
WARNING:  MEIF_USES_DOCKER_STACK_UPDATE is set to yes but docker is not added to IMAGE_FEATURES or IMAGE_PREINSTALL. Docker will be added to IMAGE_FEATURES.
Initialising tasks: 100% |##############################################| Time: 0:00:01
NOTE: No setscene tasks
NOTE: Executing Tasks
ERROR: mel-setup-2.52-r0 do_prepare_build: Execution of '/home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/temp/run.do_prepare_build.19040' failed with exit code 1:
rm: cannot remove '/home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/src/mel/setup/api/Network.py': No such file or directory
WARNING: /home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/temp/run.do_prepare_build.19040:1 exit 1 from 'rm /home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/src/mel/setup/api/Network.py'ERROR: Logfile of failure stored in: /home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/temp/log.do_prepare_build.19040
Log data follows:
 | DEBUG: Executing shell function do_prepare_build
 | rm: cannot remove '/home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/src/mel/setup/api/Network.py': No such file or directory
 | WARNING: /home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/temp/run.do_prepare_build.19040:1 exit 1 from 'rm /home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/src/mel/setup/api/Network.py'
 | ERROR: Execution of '/home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/temp/run.do_prepare_build.19040' failed with exit code 1:
 | rm: cannot remove '/home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/src/mel/setup/api/Network.py': No such file or directory
 | WARNING: /home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/temp/run.do_prepare_build.19040:1 exit 1 from 'rm /home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.52-r0/src/mel/setup/api/Network.py'
 | 
ERROR: Task (/mel-omni-os/mel-core/recipes-core/setup/mel-setup.bb:do_prepare_build) failed with exit code '1'
NOTE: Tasks Summary: Attempted 420 tasks of which 261 didn't need to be rerun and 1 failed.Summary: 1 task failed:
  /mel-omni-os/mel-core/recipes-core/setup/mel-setup.bb:do_prepare_build
Summary: There was 1 WARNING message shown.
Summary: There was 1 ERROR message shown, returning a non-zero exit code.
kalyani@debian:~/m-6july/mel-omni-os/2$
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1595846076;s:7:"updated";i:1595869627;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:60;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2693";s:6:"status";s:11:"Code Review";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:61:""CMake Configuration Options" needs to be updated in MEIF GSG";s:11:"description";s:582:"CMake configuration options needs to be updated on [https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Appendix+Chapter] as per the changes made in MEIF-2526.

The current version of the guide in [200709-222209|ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200709-222209/outputs/] installer build does not contain the correct CMake option in the appendix.

Update: 
Following variables need to be renamed in cmakefiles or in appendix chapter
 * DEMO_ENABLE_TRACING
 * CLOUD

Please also see if there are other variables that might need to be updated too.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:6:"Blocks";a:1:{i:0;s:9:"MEIF-2692";}}}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:28800;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1596036359;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:16:"meif-1.4-qa-bugs";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:61;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2692";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"MEIF 1.4.0 Getting Started Guide (Sprint 10)";s:11:"description";s:596:"# Please see my comments in [^meif_mel_omni_gs_200709-222209_sfarooq.pdf].
 # The section *SA IoT Device Tracing Run Time Configuration* needs to be updated as per [https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-SAIoTDeviceTracingConfiguration.1].

 New content for this sprint for the getting started guide will be provided to TechPubs using the following review pages:

[https://confluence.alm.mentorg.com/pages/viewpage.action?pageId=189237052]

[https://confluence.alm.mentorg.com/pages/viewpage.action?pageId=189239872]";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:13:"Is Blocked By";a:1:{i:0;s:9:"MEIF-2693";}s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2699";}}}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595916520;s:7:"updated";i:1595916520;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:62;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2691";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"Azure-edge : docker build failed for "meiflib" module";s:11:"description";s:81494:"*Issue:*
 ----------------
docker build failed for "meiflib" modules

*Steps:*
 -----------
 Steps:
 -----------
 1) Omni Installer: [ftp://inpftp.ina.mentorg.com/pub/omni/200707_0400/omni-linux-x64-2.0.0.bin]
 MIEF installer: [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200707-222208/outputs/meif-linux-x64-1.4.0.bin]
 2) cd <meif_installation_path>/docker/meiflib

3) docker build --rm -f "./Dockerfile.amd64" -t meiflib:1.4.0-amd64 ./../../

Expected Output:
---------------------
Docker image should get build for "meiflib"

Actual Output:
------------------
Build is getting failed
{code}
app/framework/services/devcmd_svcs/devcmd.c: In function 'DEVCMD_Get_Next':
/app/framework/services/devcmd_svcs/devcmd.c:428:19: warning: assignment discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
  428 |             *tags = cmd->tags;
      |                   ^
[ 69%] Building C object CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o   -c /app/framework/services/devcmd_svcs/devcmd_list.c
In file included from /app/framework/include/meif/meif_internal.h:22,
                 from /app/framework/include/meif.h:26,
                 from /app/framework/services/devcmd_svcs/devcmd_list.c:22:
/app/framework/include/meif/meif_cfg.h:33: warning: "MEIF_OS_LINUX" redefined
   33 | #define MEIF_OS_LINUX
      | 
<command-line>: note: this is the location of the previous definition
In file included from /app/framework/include/meif/meif_internal.h:22,
                 from /app/framework/include/meif.h:26,
                 from /app/framework/services/devcmd_svcs/devcmd_list.c:22:
/app/framework/include/meif/meif_cfg.h:35: warning: "MEIF_BUILD" redefined
   35 | #define MEIF_BUILD
      | 
<command-line>: note: this is the location of the previous definition
In file included from /app/framework/include/meif/meif_internal.h:94,
                 from /app/framework/include/meif.h:26,
                 from /app/framework/services/devcmd_svcs/devcmd_list.c:22:
/app/framework/services/devcmd_svcs/devcmd.h:123:36: error: operator '==' has no left operand
  123 | #if (MEIF_USES_DOCKER_STACK_UPDATE == 1)
      |                                    ^~
/app/framework/services/devcmd_svcs/devcmd_list.c:89:36: error: operator '==' has no left operand
   89 | #if (MEIF_USES_DOCKER_STACK_UPDATE == 1)
      |                                    ^~
make[2]: *** [CMakeFiles/meif.dir/build.make:378: CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o] Error 1
make[2]: Leaving directory '/app'
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/meif.dir/all] Error 2
make[1]: Leaving directory '/app'
make: *** [Makefile:133: all] Error 2
The command '/bin/sh -c cmake -DCMAKE_VERBOSE_MAKEFILE=1 -DCMAKE_NO_SYSTEM_FROM_IMPORTED=1 -DDEMO_ENABLE_TRACING=off -DBUILD_VERBOSE=on -DOS=linux -DLINUX_LIBDIR=/usr/lib64 -DCLOUD=none -Wno-dev     && make     && make install' returned a non-zero code: 2
{code}

*Full Build Log*
{code}
ravi@debian:~/mgc/omni_meif_0807/meif/docker/meiflib$ docker build --rm -f "./Dockerfile.amd64" -t meiflib:1.4.0-amd64 ./../../
Sending build context to Docker daemon  385.6MB
Step 1/19 : FROM alpine:3.11.3 AS build-env
 ---> e7d92cdc71fe
Step 2/19 : RUN apk update &&     apk add build-base curl util-linux-dev openssl-dev curl-dev cmake git
 ---> Running in ccc62a25331c
fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/community/x86_64/APKINDEX.tar.gz
v3.11.6-93-ga95c3541d2 [http://dl-cdn.alpinelinux.org/alpine/v3.11/main]
v3.11.6-90-g318b6c3504 [http://dl-cdn.alpinelinux.org/alpine/v3.11/community]
OK: 11276 distinct packages available
(1/50) Upgrading musl (1.1.24-r0 -> 1.1.24-r2)
(2/50) Upgrading libcrypto1.1 (1.1.1d-r3 -> 1.1.1g-r0)
(3/50) Upgrading libssl1.1 (1.1.1d-r3 -> 1.1.1g-r0)
(4/50) Installing libgcc (9.2.0-r4)
(5/50) Installing libstdc++ (9.2.0-r4)
(6/50) Installing binutils (2.33.1-r0)
(7/50) Installing libmagic (5.37-r1)
(8/50) Installing file (5.37-r1)
(9/50) Installing gmp (6.1.2-r1)
(10/50) Installing isl (0.18-r0)
(11/50) Installing libgomp (9.2.0-r4)
(12/50) Installing libatomic (9.2.0-r4)
(13/50) Installing mpfr4 (4.0.2-r1)
(14/50) Installing mpc1 (1.1.0-r1)
(15/50) Installing gcc (9.2.0-r4)
(16/50) Installing musl-dev (1.1.24-r2)
(17/50) Installing libc-dev (0.7.2-r0)
(18/50) Installing g++ (9.2.0-r4)
(19/50) Installing make (4.2.1-r2)
(20/50) Installing fortify-headers (1.1-r0)
(21/50) Installing build-base (0.5-r1)
(22/50) Installing libacl (2.2.53-r0)
(23/50) Installing libbz2 (1.0.8-r1)
(24/50) Installing expat (2.2.9-r1)
(25/50) Installing lz4-libs (1.9.2-r0)
(26/50) Installing xz-libs (5.2.4-r0)
(27/50) Installing zstd-libs (1.4.4-r1)
(28/50) Installing libarchive (3.4.2-r0)
(29/50) Installing ca-certificates (20191127-r2)
(30/50) Installing nghttp2-libs (1.40.0-r1)
(31/50) Installing libcurl (7.67.0-r0)
(32/50) Installing ncurses-terminfo-base (6.1_p20200118-r4)
(33/50) Installing ncurses-libs (6.1_p20200118-r4)
(34/50) Installing rhash-libs (1.3.9-r0)
(35/50) Installing libuv (1.34.0-r0)
(36/50) Installing cmake (3.15.5-r0)
(37/50) Installing curl (7.67.0-r0)
(38/50) Installing pkgconf (1.6.3-r0)
(39/50) Installing openssl-dev (1.1.1g-r0)
(40/50) Installing nghttp2-dev (1.40.0-r1)
(41/50) Installing zlib-dev (1.2.11-r3)
(42/50) Installing curl-dev (7.67.0-r0)
(43/50) Installing pcre2 (10.34-r1)
(44/50) Installing git (2.24.3-r0)
(45/50) Installing libblkid (2.34-r1)
(46/50) Installing libuuid (2.34-r1)
(47/50) Installing libfdisk (2.34-r1)
(48/50) Installing libmount (2.34-r1)
(49/50) Installing libsmartcols (2.34-r1)
(50/50) Installing util-linux-dev (2.34-r1)
Executing busybox-1.31.1-r9.trigger
Executing ca-certificates-20191127-r2.trigger
OK: 229 MiB in 61 packages
Removing intermediate container ccc62a25331c
 ---> e691c1e22bc7
Step 3/19 : WORKDIR /app
 ---> Running in 7995f138701b
Removing intermediate container 7995f138701b
 ---> 2c923e560f09
Step 4/19 : COPY . ./
 ---> 34fbf6ffc407
Step 5/19 : RUN git clone -b LTS_02_2020_Ref01 https://github.com/Azure/azure-iot-sdk-c.git
 ---> Running in 34a834b004d6
Cloning into 'azure-iot-sdk-c'...
Note: switching to 'c8b6a108fd7e01c1d89d9150b5d209f17e54fc4e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

Removing intermediate container 34a834b004d6
 ---> e3f7e4fe9b4a
Step 6/19 : WORKDIR  /app/azure-iot-sdk-c
 ---> Running in 8ee1394438b5
Removing intermediate container 8ee1394438b5
 ---> f0aa8ee2b53b
Step 7/19 : RUN git submodule update --init
 ---> Running in a87e316ce65c
Submodule 'azure-c-shared-utility' (https://github.com/Azure/azure-c-shared-utility.git) registered for path 'c-utility'
Submodule 'deps/azure-c-testrunnerswitcher' (https://github.com/Azure/azure-c-testrunnerswitcher.git) registered for path 'deps/azure-c-testrunnerswitcher'
Submodule 'deps/azure-ctest' (https://github.com/Azure/azure-ctest.git) registered for path 'deps/azure-ctest'
Submodule 'deps/azure-macro-utils-c' (https://github.com/Azure/azure-macro-utils-c.git) registered for path 'deps/azure-macro-utils-c'
Submodule 'deps/parson' (https://github.com/kgabis/parson.git) registered for path 'deps/parson'
Submodule 'deps/uhttp' (https://github.com/Azure/azure-uhttp-c.git) registered for path 'deps/uhttp'
Submodule 'deps/umock-c' (https://github.com/Azure/umock-c.git) registered for path 'deps/umock-c'
Submodule 'provisioning_client/deps/RIoT' (https://github.com/Microsoft/RIoT.git) registered for path 'provisioning_client/deps/RIoT'
Submodule 'provisioning_client/deps/utpm' (https://github.com/Azure/azure-utpm-c.git) registered for path 'provisioning_client/deps/utpm'
Submodule 'azure-uamqp-c' (https://github.com/Azure/azure-uamqp-c.git) registered for path 'uamqp'
Submodule 'azure-umqtt-c' (https://github.com/Azure/azure-umqtt-c.git) registered for path 'umqtt'
Cloning into '/app/azure-iot-sdk-c/c-utility'...
Cloning into '/app/azure-iot-sdk-c/deps/azure-c-testrunnerswitcher'...
Cloning into '/app/azure-iot-sdk-c/deps/azure-ctest'...
Cloning into '/app/azure-iot-sdk-c/deps/azure-macro-utils-c'...
Cloning into '/app/azure-iot-sdk-c/deps/parson'...
Cloning into '/app/azure-iot-sdk-c/deps/uhttp'...
Cloning into '/app/azure-iot-sdk-c/deps/umock-c'...
Cloning into '/app/azure-iot-sdk-c/provisioning_client/deps/RIoT'...
Cloning into '/app/azure-iot-sdk-c/provisioning_client/deps/utpm'...
Cloning into '/app/azure-iot-sdk-c/uamqp'...
Cloning into '/app/azure-iot-sdk-c/umqtt'...
Submodule path 'c-utility': checked out '48f7a556865731f0e96c47eb5e9537361f24647c'
Submodule path 'deps/azure-c-testrunnerswitcher': checked out 'a33cd0a8524da8e45642baa112a506d4d2e5a59e'
Submodule path 'deps/azure-ctest': checked out '13baad856c3cb9e5457bff52bc8c2de87f21fa07'
Submodule path 'deps/azure-macro-utils-c': checked out '5926caf4e42e98e730e6d03395788205649a3ada'
Submodule path 'deps/parson': checked out 'c5bb9557fe98367aa8e041c65863909f12ee76b2'
Submodule path 'deps/uhttp': checked out 'b67a6bfa0d018a8a23176ee214e46c208fc323c3'
Submodule path 'deps/umock-c': checked out '5e3d93112360ee2d4a622b1c48eb70896da3e8c7'
Submodule path 'provisioning_client/deps/RIoT': checked out 'bc97a5eaff53535eddbdf95b4f477c6caf3b7788'
Submodule path 'provisioning_client/deps/utpm': checked out 'afe8ad192502979e2b754c7d7c0b2e7178c78d09'
Submodule path 'uamqp': checked out '142cfab9d66c6f81ea0cceb635f31e00cfa51c77'
Submodule path 'umqtt': checked out '65cdd1013715fb9d208c42f957eb353fbe22bafb'
Removing intermediate container a87e316ce65c
 ---> fb57aac8faa4
Step 8/19 : RUN mkdir cmake
 ---> Running in 17b20f4d299b
Removing intermediate container 17b20f4d299b
 ---> b3cabb574566
Step 9/19 : WORKDIR /app/azure-iot-sdk-c/cmake
 ---> Running in dc3c81e77b3c
Removing intermediate container dc3c81e77b3c
 ---> f9167a3d2505
Step 10/19 : RUN sed -i 's/sys\/errno/errno/1' ../c-utility/pal/linux/socket_async_os.h
 ---> Running in 96c564427072
Removing intermediate container 96c564427072
 ---> 36e72be56233
Step 11/19 : RUN cmake .. -Duse_edge_modules=1 -Duse_prov_client_core=1
 ---> Running in 5276b2537b2b
-- The C compiler identification is GNU 9.2.0
-- The CXX compiler identification is GNU 9.2.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- IoT Client SDK Version = 1.3.8
-- Provisioning SDK Version = 1.3.8
CMake Warning (dev) at deps/umock-c/CMakeLists.txt:13 (option):
  Policy CMP0077 is not set: option() honors normal variables.  Run "cmake
  --help-policy CMP0077" for policy details.  Use the cmake_policy command to
  set the policy and suppress this warning.

  For compatibility with older versions of CMake, option is clearing the
  normal variable 'use_cppunittest'.
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Looking for include file stdint.h
-- Looking for include file stdint.h - found
-- Looking for include file stdbool.h
-- Looking for include file stdbool.h - found
-- target architecture: x86_64
-- Performing Test CXX_FLAG_CXX11
-- Performing Test CXX_FLAG_CXX11 - Success
-- Found OpenSSL: /usr/lib/libcrypto.so (found version "1.1.1g")  
-- Found PkgConfig: /usr/bin/pkg-config (found version "1.6.3") 
-- Checking for module 'libcurl'
--   Found libcurl, version 7.67.0
-- Found CURL: curl  
-- target architecture: x86_64
-- iothub architecture: x86_64
-- Configuring done
-- Generating done
-- Build files have been written to: /app/azure-iot-sdk-c/cmake
Removing intermediate container 5276b2537b2b
 ---> f1ba23212172
Step 12/19 : RUN cmake --build .
 ---> Running in e785e5c283f6
Scanning dependencies of target parson
[  0%] Building C object CMakeFiles/parson.dir/deps/parson/parson.c.o
[  1%] Linking C static library libparson.a
[  1%] Built target parson
Scanning dependencies of target umock_c
[  1%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umock_c.c.o
[  2%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umock_c_negative_tests.c.o
[  2%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umockalloc.c.o
[  3%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umockcall.c.o
[  3%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umockcallrecorder.c.o
[  3%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umocktypename.c.o
[  4%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umocktypes.c.o
[  4%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umocktypes_bool.c.o
[  4%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umocktypes_c.c.o
[  5%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umocktypes_stdint.c.o
[  5%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umocktypes_charptr.c.o
[  6%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umockcallpairs.c.o
[  6%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umockstring.c.o
[  6%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umockautoignoreargs.c.o
[  7%] Building C object deps/umock-c/CMakeFiles/umock_c.dir/src/umock_log.c.o
[  7%] Linking C static library libumock_c.a
[  7%] Built target umock_c
Scanning dependencies of target aziotsharedutil
[  7%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/azure_base32.c.o
[  7%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/azure_base64.c.o
[  8%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/buffer.c.o
[  8%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/constbuffer_array.c.o
[  8%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/constbuffer_array_batcher.c.o
[  9%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/connection_string_parser.c.o
[  9%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/constbuffer.c.o
[  9%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/consolelogger.c.o
[ 10%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/crt_abstractions.c.o
[ 10%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/constmap.c.o
[ 11%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/doublylinkedlist.c.o
[ 11%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/gballoc.c.o
[ 11%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/gbnetwork.c.o
[ 12%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/gb_stdio.c.o
[ 12%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/gb_time.c.o
[ 12%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/gb_rand.c.o
[ 13%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/hmac.c.o
[ 13%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/hmacsha256.c.o
[ 14%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/xio.c.o
[ 14%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/singlylinkedlist.c.o
[ 14%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/map.c.o
[ 15%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/sastoken.c.o
[ 15%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/sha1.c.o
[ 15%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/sha224.c.o
[ 16%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/sha384-512.c.o
[ 16%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/strings.c.o
[ 17%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/string_token.c.o
[ 17%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/string_tokenizer.c.o
[ 17%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/uuid.c.o
[ 18%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/urlencode.c.o
[ 18%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/usha.c.o
[ 18%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/vector.c.o
[ 19%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/xlogging.c.o
[ 19%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/optionhandler.c.o
[ 20%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/memory_data.c.o
[ 20%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/agenttime.c.o
[ 20%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/condition_pthreads.c.o
[ 21%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/lock_pthreads.c.o
[ 21%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/platform_linux.c.o
[ 21%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/socketio_berkeley.c.o
[ 22%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/tickcounter_linux.c.o
[ 22%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/threadapi_pthreads.c.o
[ 23%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/uniqueid_linux.c.o
[ 23%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/envvariable.c.o
[ 23%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/dns_resolver_sync.c.o
[ 24%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/linux_time.c.o
[ 24%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/httpapiex.c.o
[ 24%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/httpapiexsas.c.o
[ 25%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/httpheaders.c.o
[ 25%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/httpapi_curl.c.o
[ 26%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/http_proxy_io.c.o
[ 26%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/tlsio_openssl.c.o
[ 26%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/adapters/x509_openssl.c.o
[ 27%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/wsio.c.o
[ 27%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/uws_client.c.o
[ 27%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/uws_frame_encoder.c.o
[ 28%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/utf8_checker.c.o
[ 28%] Building C object c-utility/CMakeFiles/aziotsharedutil.dir/src/ws_url.c.o
[ 29%] Linking C static library libaziotsharedutil.a
[ 29%] Built target aziotsharedutil
Scanning dependencies of target uamqp
[ 29%] Building C object uamqp/CMakeFiles/uamqp.dir/src/amqp_definitions.c.o
[ 30%] Building C object uamqp/CMakeFiles/uamqp.dir/src/amqp_frame_codec.c.o
[ 30%] Building C object uamqp/CMakeFiles/uamqp.dir/src/amqp_management.c.o
[ 30%] Building C object uamqp/CMakeFiles/uamqp.dir/src/amqpvalue.c.o
[ 31%] Building C object uamqp/CMakeFiles/uamqp.dir/src/amqpvalue_to_string.c.o
[ 31%] Building C object uamqp/CMakeFiles/uamqp.dir/src/async_operation.c.o
[ 32%] Building C object uamqp/CMakeFiles/uamqp.dir/src/cbs.c.o
[ 32%] Building C object uamqp/CMakeFiles/uamqp.dir/src/connection.c.o
[ 32%] Building C object uamqp/CMakeFiles/uamqp.dir/src/frame_codec.c.o
[ 33%] Building C object uamqp/CMakeFiles/uamqp.dir/src/header_detect_io.c.o
[ 33%] Building C object uamqp/CMakeFiles/uamqp.dir/src/link.c.o
[ 33%] Building C object uamqp/CMakeFiles/uamqp.dir/src/message.c.o
[ 34%] Building C object uamqp/CMakeFiles/uamqp.dir/src/message_receiver.c.o
[ 34%] Building C object uamqp/CMakeFiles/uamqp.dir/src/message_sender.c.o
[ 35%] Building C object uamqp/CMakeFiles/uamqp.dir/src/messaging.c.o
[ 35%] Building C object uamqp/CMakeFiles/uamqp.dir/src/sasl_anonymous.c.o
[ 35%] Building C object uamqp/CMakeFiles/uamqp.dir/src/sasl_frame_codec.c.o
[ 36%] Building C object uamqp/CMakeFiles/uamqp.dir/src/sasl_mechanism.c.o
[ 36%] Building C object uamqp/CMakeFiles/uamqp.dir/src/sasl_server_mechanism.c.o
[ 36%] Building C object uamqp/CMakeFiles/uamqp.dir/src/sasl_mssbcbs.c.o
[ 37%] Building C object uamqp/CMakeFiles/uamqp.dir/src/sasl_plain.c.o
[ 37%] Building C object uamqp/CMakeFiles/uamqp.dir/src/saslclientio.c.o
[ 38%] Building C object uamqp/CMakeFiles/uamqp.dir/src/session.c.o
[ 38%] Building C object uamqp/CMakeFiles/uamqp.dir/src/socket_listener_berkeley.c.o
[ 38%] Linking C static library libuamqp.a
[ 38%] Built target uamqp
Scanning dependencies of target umqtt
[ 38%] Building C object umqtt/CMakeFiles/umqtt.dir/src/mqtt_client.c.o
[ 39%] Building C object umqtt/CMakeFiles/umqtt.dir/src/mqtt_codec.c.o
[ 39%] Building C object umqtt/CMakeFiles/umqtt.dir/src/mqtt_message.c.o
[ 40%] Linking C static library libumqtt.a
[ 40%] Built target umqtt
Scanning dependencies of target uhttp
[ 41%] Building C object deps/uhttp/CMakeFiles/uhttp.dir/src/uhttp.c.o
[ 41%] Linking C static library libuhttp.a
[ 41%] Built target uhttp
Scanning dependencies of target hsm_security_client
[ 42%] Building C object provisioning_client/CMakeFiles/hsm_security_client.dir/adapters/hsm_client_data.c.o
[ 42%] Building C object provisioning_client/CMakeFiles/hsm_security_client.dir/adapters/hsm_client_http_edge.c.o
[ 43%] Linking C static library libhsm_security_client.a
[ 43%] Built target hsm_security_client
Scanning dependencies of target prov_auth_client
[ 43%] Building C object provisioning_client/CMakeFiles/prov_auth_client.dir/src/prov_auth_client.c.o
[ 44%] Building C object provisioning_client/CMakeFiles/prov_auth_client.dir/src/prov_security_factory.c.o
[ 44%] Building C object provisioning_client/CMakeFiles/prov_auth_client.dir/src/iothub_auth_client.c.o
[ 44%] Building C object provisioning_client/CMakeFiles/prov_auth_client.dir/src/iothub_security_factory.c.o
[ 45%] Linking C static library libprov_auth_client.a
[ 45%] Built target prov_auth_client
Scanning dependencies of target iothub_service_client
[ 46%] Building C object iothub_service_client/CMakeFiles/iothub_service_client.dir/src/iothub_deviceconfiguration.c.o
[ 46%] Building C object iothub_service_client/CMakeFiles/iothub_service_client.dir/src/iothub_devicemethod.c.o
[ 46%] Building C object iothub_service_client/CMakeFiles/iothub_service_client.dir/src/iothub_devicetwin.c.o
[ 47%] Building C object iothub_service_client/CMakeFiles/iothub_service_client.dir/src/iothub_messaging.c.o
[ 47%] Building C object iothub_service_client/CMakeFiles/iothub_service_client.dir/src/iothub_messaging_ll.c.o
[ 48%] Building C object iothub_service_client/CMakeFiles/iothub_service_client.dir/src/iothub_registrymanager.c.o
[ 48%] Building C object iothub_service_client/CMakeFiles/iothub_service_client.dir/src/iothub_sc_version.c.o
[ 48%] Building C object iothub_service_client/CMakeFiles/iothub_service_client.dir/src/iothub_service_client_auth.c.o
[ 49%] Building C object iothub_service_client/CMakeFiles/iothub_service_client.dir/__/iothub_client/src/iothub_message.c.o
[ 49%] Linking C static library libiothub_service_client.a
[ 49%] Built target iothub_service_client
Scanning dependencies of target iothub_deviceconfiguration_sample
[ 50%] Building C object iothub_service_client/samples/iothub_deviceconfiguration_sample/CMakeFiles/iothub_deviceconfiguration_sample.dir/iothub_deviceconfiguration_sample.c.o
[ 50%] Linking C executable iothub_deviceconfiguration_sample
[ 50%] Built target iothub_deviceconfiguration_sample
Scanning dependencies of target iothub_devicemethod_sample
[ 51%] Building C object iothub_service_client/samples/iothub_devicemethod_sample/CMakeFiles/iothub_devicemethod_sample.dir/iothub_devicemethod_sample.c.o
[ 51%] Linking C executable iothub_devicemethod_sample
[ 51%] Built target iothub_devicemethod_sample
Scanning dependencies of target iothub_devicetwin_sample
[ 51%] Building C object iothub_service_client/samples/iothub_devicetwin_sample/CMakeFiles/iothub_devicetwin_sample.dir/iothub_devicetwin_sample.c.o
[ 52%] Linking C executable iothub_devicetwin_sample
[ 52%] Built target iothub_devicetwin_sample
Scanning dependencies of target iothub_messaging_sample
[ 52%] Building C object iothub_service_client/samples/iothub_messaging_sample/CMakeFiles/iothub_messaging_sample.dir/iothub_messaging_sample.c.o
[ 53%] Linking C executable iothub_messaging_sample
[ 53%] Built target iothub_messaging_sample
Scanning dependencies of target iothub_messaging_ll_sample
[ 53%] Building C object iothub_service_client/samples/iothub_messaging_ll_sample/CMakeFiles/iothub_messaging_ll_sample.dir/iothub_messaging_ll_sample.c.o
[ 54%] Linking C executable iothub_messaging_ll_sample
[ 54%] Built target iothub_messaging_ll_sample
Scanning dependencies of target iothub_registrymanager_sample
[ 54%] Building C object iothub_service_client/samples/iothub_registrymanager_sample/CMakeFiles/iothub_registrymanager_sample.dir/iothub_registrymanager_sample.c.o
[ 54%] Linking C executable iothub_registrymanager_sample
[ 54%] Built target iothub_registrymanager_sample
Scanning dependencies of target iothub_client_mqtt_transport
[ 54%] Building C object iothub_client/CMakeFiles/iothub_client_mqtt_transport.dir/src/iothub_client_authorization.c.o
[ 54%] Building C object iothub_client/CMakeFiles/iothub_client_mqtt_transport.dir/src/iothub_client_retry_control.c.o
[ 55%] Building C object iothub_client/CMakeFiles/iothub_client_mqtt_transport.dir/src/iothub_transport_ll_private.c.o
[ 55%] Building C object iothub_client/CMakeFiles/iothub_client_mqtt_transport.dir/src/iothubtransport_mqtt_common.c.o
[ 55%] Building C object iothub_client/CMakeFiles/iothub_client_mqtt_transport.dir/src/iothubtransportmqtt.c.o
[ 56%] Linking C static library libiothub_client_mqtt_transport.a
[ 56%] Built target iothub_client_mqtt_transport
Scanning dependencies of target iothub_client_mqtt_ws_transport
[ 56%] Building C object iothub_client/CMakeFiles/iothub_client_mqtt_ws_transport.dir/src/iothub_client_authorization.c.o
[ 57%] Building C object iothub_client/CMakeFiles/iothub_client_mqtt_ws_transport.dir/src/iothub_client_retry_control.c.o
[ 57%] Building C object iothub_client/CMakeFiles/iothub_client_mqtt_ws_transport.dir/src/iothub_transport_ll_private.c.o
[ 57%] Building C object iothub_client/CMakeFiles/iothub_client_mqtt_ws_transport.dir/src/iothubtransport_mqtt_common.c.o
[ 58%] Building C object iothub_client/CMakeFiles/iothub_client_mqtt_ws_transport.dir/src/iothubtransportmqtt_websockets.c.o
[ 58%] Linking C static library libiothub_client_mqtt_ws_transport.a
[ 58%] Built target iothub_client_mqtt_ws_transport
Scanning dependencies of target iothub_client_amqp_ws_transport
[ 59%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothub_client_authorization.c.o
[ 59%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothub_client_retry_control.c.o
[ 59%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothub_transport_ll_private.c.o
[ 60%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothubtransport_amqp_common.c.o
[ 60%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothubtransport_amqp_device.c.o
[ 61%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothubtransport_amqp_cbs_auth.c.o
[ 61%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothubtransport_amqp_connection.c.o
[ 61%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothubtransport_amqp_telemetry_messenger.c.o
[ 62%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothubtransport_amqp_twin_messenger.c.o
[ 62%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothubtransport_amqp_messenger.c.o
[ 62%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothubtransportamqp_methods.c.o
[ 63%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/message_queue.c.o
[ 63%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/uamqp_messaging.c.o
[ 64%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_ws_transport.dir/src/iothubtransportamqp_websockets.c.o
[ 64%] Linking C static library libiothub_client_amqp_ws_transport.a
[ 64%] Built target iothub_client_amqp_ws_transport
Scanning dependencies of target iothub_client_amqp_transport
[ 64%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothub_client_authorization.c.o
[ 64%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothub_client_retry_control.c.o
[ 65%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothub_transport_ll_private.c.o
[ 65%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothubtransport_amqp_common.c.o
[ 66%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothubtransport_amqp_device.c.o
[ 66%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothubtransport_amqp_cbs_auth.c.o
[ 66%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothubtransport_amqp_connection.c.o
[ 67%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothubtransport_amqp_telemetry_messenger.c.o
[ 67%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothubtransport_amqp_twin_messenger.c.o
[ 67%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothubtransport_amqp_messenger.c.o
[ 68%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothubtransportamqp_methods.c.o
[ 68%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/message_queue.c.o
[ 69%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/uamqp_messaging.c.o
[ 69%] Building C object iothub_client/CMakeFiles/iothub_client_amqp_transport.dir/src/iothubtransportamqp.c.o
[ 69%] Linking C static library libiothub_client_amqp_transport.a
[ 69%] Built target iothub_client_amqp_transport
Scanning dependencies of target iothub_client_http_transport
[ 69%] Building C object iothub_client/CMakeFiles/iothub_client_http_transport.dir/src/iothub_client_authorization.c.o
[ 69%] Building C object iothub_client/CMakeFiles/iothub_client_http_transport.dir/src/iothub_client_retry_control.c.o
[ 70%] Building C object iothub_client/CMakeFiles/iothub_client_http_transport.dir/src/iothub_transport_ll_private.c.o
[ 70%] Building C object iothub_client/CMakeFiles/iothub_client_http_transport.dir/src/iothubtransporthttp.c.o
[ 71%] Linking C static library libiothub_client_http_transport.a
[ 71%] Built target iothub_client_http_transport
Scanning dependencies of target iothub_client
[ 72%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub.c.o
[ 72%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_client.c.o
[ 72%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_client_core.c.o
[ 73%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_client_core_ll.c.o
[ 73%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_client_diagnostic.c.o
[ 74%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_client_ll.c.o
[ 74%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_device_client.c.o
[ 74%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_device_client_ll.c.o
[ 75%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_message.c.o
[ 75%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_module_client.c.o
[ 75%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_module_client_ll.c.o
[ 76%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothubtransport.c.o
[ 76%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/version.c.o
[ 77%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_client_ll_uploadtoblob.c.o
[ 77%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/blob.c.o
[ 77%] Building C object iothub_client/CMakeFiles/iothub_client.dir/src/iothub_client_edge.c.o
[ 78%] Linking C static library libiothub_client.a
[ 78%] Built target iothub_client
Scanning dependencies of target iothub_convenience_sample
[ 78%] Building C object iothub_client/samples/iothub_convenience_sample/CMakeFiles/iothub_convenience_sample.dir/iothub_convenience_sample.c.o
[ 78%] Linking C executable iothub_convenience_sample
[ 78%] Built target iothub_convenience_sample
Scanning dependencies of target iothub_ll_c2d_sample
[ 78%] Building C object iothub_client/samples/iothub_ll_c2d_sample/CMakeFiles/iothub_ll_c2d_sample.dir/iothub_ll_c2d_sample.c.o
[ 78%] Building C object iothub_client/samples/iothub_ll_c2d_sample/CMakeFiles/iothub_ll_c2d_sample.dir/__/__/__/certs/certs.c.o
[ 79%] Linking C executable iothub_ll_c2d_sample
[ 79%] Built target iothub_ll_c2d_sample
Scanning dependencies of target iothub_ll_client_x509_sample
[ 79%] Building C object iothub_client/samples/iothub_ll_client_x509_sample/CMakeFiles/iothub_ll_client_x509_sample.dir/iothub_ll_client_x509_sample.c.o
[ 79%] Linking C executable iothub_ll_client_x509_sample
[ 79%] Built target iothub_ll_client_x509_sample
Scanning dependencies of target iothub_ll_telemetry_sample
[ 80%] Building C object iothub_client/samples/iothub_ll_telemetry_sample/CMakeFiles/iothub_ll_telemetry_sample.dir/iothub_ll_telemetry_sample.c.o
[ 80%] Linking C executable iothub_ll_telemetry_sample
[ 80%] Built target iothub_ll_telemetry_sample
Scanning dependencies of target iotedge_downstream_device_sample
[ 80%] Building C object iothub_client/samples/iotedge_downstream_device_sample/CMakeFiles/iotedge_downstream_device_sample.dir/iotedge_downstream_device_sample.c.o
[ 80%] Linking C executable iotedge_downstream_device_sample
[ 80%] Built target iotedge_downstream_device_sample
Scanning dependencies of target iothub_client_sample_upload_to_blob
[ 81%] Building C object iothub_client/samples/iothub_client_sample_upload_to_blob/CMakeFiles/iothub_client_sample_upload_to_blob.dir/iothub_client_sample_upload_to_blob.c.o
[ 81%] Linking C executable iothub_client_sample_upload_to_blob
[ 81%] Built target iothub_client_sample_upload_to_blob
Scanning dependencies of target iothub_client_sample_upload_to_blob_mb
[ 81%] Building C object iothub_client/samples/iothub_client_sample_upload_to_blob_mb/CMakeFiles/iothub_client_sample_upload_to_blob_mb.dir/iothub_client_sample_upload_to_blob_mb.c.o
[ 82%] Linking C executable iothub_client_sample_upload_to_blob_mb
[ 82%] Built target iothub_client_sample_upload_to_blob_mb
Scanning dependencies of target iothub_client_sample_module_method_invoke
[ 82%] Building C object iothub_client/samples/iothub_client_sample_module_method_invoke/CMakeFiles/iothub_client_sample_module_method_invoke.dir/iothub_client_sample_module_method_invoke.c.o
[ 82%] Linking C executable iothub_client_sample_module_method_invoke
[ 82%] Built target iothub_client_sample_module_method_invoke
Scanning dependencies of target serializer
[ 83%] Building C object serializer/CMakeFiles/serializer.dir/src/agenttypesystem.c.o
[ 83%] Building C object serializer/CMakeFiles/serializer.dir/src/codefirst.c.o
[ 83%] Building C object serializer/CMakeFiles/serializer.dir/src/commanddecoder.c.o
[ 84%] Building C object serializer/CMakeFiles/serializer.dir/src/datamarshaller.c.o
[ 84%] Building C object serializer/CMakeFiles/serializer.dir/src/datapublisher.c.o
[ 84%] Building C object serializer/CMakeFiles/serializer.dir/src/dataserializer.c.o
[ 85%] Building C object serializer/CMakeFiles/serializer.dir/src/iotdevice.c.o
[ 85%] Building C object serializer/CMakeFiles/serializer.dir/src/jsondecoder.c.o
[ 86%] Building C object serializer/CMakeFiles/serializer.dir/src/jsonencoder.c.o
[ 86%] Building C object serializer/CMakeFiles/serializer.dir/src/multitree.c.o
[ 86%] Building C object serializer/CMakeFiles/serializer.dir/src/schema.c.o
[ 87%] Building C object serializer/CMakeFiles/serializer.dir/src/schemalib.c.o
[ 87%] Building C object serializer/CMakeFiles/serializer.dir/src/schemaserializer.c.o
[ 87%] Building C object serializer/CMakeFiles/serializer.dir/src/methodreturn.c.o
[ 88%] Linking C static library libserializer.a
[ 88%] Built target serializer
Scanning dependencies of target iothub_client_sample_mqtt_dm
[ 88%] Building C object iothub_client/samples/iothub_client_sample_mqtt_dm/CMakeFiles/iothub_client_sample_mqtt_dm.dir/iothub_client_sample_mqtt_dm.c.o
[ 89%] Building C object iothub_client/samples/iothub_client_sample_mqtt_dm/CMakeFiles/iothub_client_sample_mqtt_dm.dir/pi_device/pi.c.o
[ 89%] Linking C executable iothub_client_sample_mqtt_dm
[ 89%] Built target iothub_client_sample_mqtt_dm
Scanning dependencies of target iothub_client_sample_module_sender
[ 90%] Building C object iothub_client/samples/iothub_client_sample_module_sender/CMakeFiles/iothub_client_sample_module_sender.dir/iothub_client_sample_module_sender.c.o
[ 90%] Linking C executable iothub_client_sample_module_sender
[ 90%] Built target iothub_client_sample_module_sender
Scanning dependencies of target iothub_client_sample_module_filter
[ 90%] Building C object iothub_client/samples/iothub_client_sample_module_filter/CMakeFiles/iothub_client_sample_module_filter.dir/iothub_client_sample_module_filter.c.o
[ 91%] Linking C executable iothub_client_sample_module_filter
[ 91%] Built target iothub_client_sample_module_filter
Scanning dependencies of target iothub_client_sample_amqp_shared_methods
[ 91%] Building C object iothub_client/samples/iothub_client_sample_amqp_shared_methods/CMakeFiles/iothub_client_sample_amqp_shared_methods.dir/iothub_client_sample_amqp_shared_methods.c.o
[ 92%] Linking C executable iothub_client_sample_amqp_shared_methods
[ 92%] Built target iothub_client_sample_amqp_shared_methods
Scanning dependencies of target iothub_ll_client_shared_sample
[ 92%] Building C object iothub_client/samples/iothub_ll_client_shared_sample/CMakeFiles/iothub_ll_client_shared_sample.dir/iothub_ll_client_shared_sample.c.o
[ 93%] Linking C executable iothub_ll_client_shared_sample
[ 93%] Built target iothub_ll_client_shared_sample
Scanning dependencies of target iothub_client_device_twin_and_methods_sample
[ 93%] Building C object iothub_client/samples/iothub_client_device_twin_and_methods_sample/CMakeFiles/iothub_client_device_twin_and_methods_sample.dir/iothub_client_device_twin_and_methods_sample.c.o
[ 94%] Linking C executable iothub_client_device_twin_and_methods_sample
[ 94%] Built target iothub_client_device_twin_and_methods_sample
Scanning dependencies of target remote_monitoring
[ 94%] Building C object serializer/samples/remote_monitoring/CMakeFiles/remote_monitoring.dir/remote_monitoring.c.o
[ 94%] Linking C executable remote_monitoring
[ 94%] Built target remote_monitoring
Scanning dependencies of target simplesample_amqp
[ 94%] Building C object serializer/samples/simplesample_amqp/CMakeFiles/simplesample_amqp.dir/simplesample_amqp.c.o
[ 95%] Building C object serializer/samples/simplesample_amqp/CMakeFiles/simplesample_amqp.dir/linux/main.c.o
[ 95%] Linking C executable simplesample_amqp
[ 95%] Built target simplesample_amqp
Scanning dependencies of target simplesample_http
[ 95%] Building C object serializer/samples/simplesample_http/CMakeFiles/simplesample_http.dir/simplesample_http.c.o
[ 96%] Building C object serializer/samples/simplesample_http/CMakeFiles/simplesample_http.dir/linux/main.c.o
[ 96%] Linking C executable simplesample_http
[ 96%] Built target simplesample_http
Scanning dependencies of target temp_sensor_anomaly
[ 97%] Building C object serializer/samples/temp_sensor_anomaly/CMakeFiles/temp_sensor_anomaly.dir/windows/main.c.o
[ 97%] Linking C executable temp_sensor_anomaly
[ 97%] Built target temp_sensor_anomaly
Scanning dependencies of target simplesample_mqtt
[ 97%] Building C object serializer/samples/simplesample_mqtt/CMakeFiles/simplesample_mqtt.dir/simplesample_mqtt.c.o
[ 98%] Building C object serializer/samples/simplesample_mqtt/CMakeFiles/simplesample_mqtt.dir/linux/main.c.o
[ 98%] Linking C executable simplesample_mqtt
[ 98%] Built target simplesample_mqtt
Scanning dependencies of target devicemethod_simplesample
[ 98%] Building C object serializer/samples/devicemethod_simplesample/CMakeFiles/devicemethod_simplesample.dir/devicemethod_simplesample.c.o
[ 98%] Building C object serializer/samples/devicemethod_simplesample/CMakeFiles/devicemethod_simplesample.dir/linux/main.c.o
[ 99%] Linking C executable devicemethod_simplesample
[ 99%] Built target devicemethod_simplesample
Scanning dependencies of target devicetwin_simplesample
[ 99%] Building C object serializer/samples/devicetwin_simplesample/CMakeFiles/devicetwin_simplesample.dir/devicetwin_simplesample.c.o
[ 99%] Linking C executable devicetwin_simplesample
[ 99%] Built target devicetwin_simplesample
Scanning dependencies of target remote_monitoring_client
[100%] Building C object samples/solutions/remote_monitoring_client/CMakeFiles/remote_monitoring_client.dir/remote_monitoring.c.o
[100%] Linking C executable remote_monitoring_client
[100%] Built target remote_monitoring_client
Removing intermediate container e785e5c283f6
 ---> 5a61d2cd0c08
Step 13/19 : RUN make install
 ---> Running in 26edd8cb200b
[  1%] Built target parson
[  7%] Built target umock_c
[ 29%] Built target aziotsharedutil
[ 38%] Built target uamqp
[ 40%] Built target umqtt
[ 41%] Built target uhttp
[ 43%] Built target hsm_security_client
[ 45%] Built target prov_auth_client
[ 49%] Built target iothub_service_client
[ 50%] Built target iothub_deviceconfiguration_sample
[ 51%] Built target iothub_devicemethod_sample
[ 52%] Built target iothub_devicetwin_sample
[ 53%] Built target iothub_messaging_sample
[ 54%] Built target iothub_messaging_ll_sample
[ 54%] Built target iothub_registrymanager_sample
[ 56%] Built target iothub_client_mqtt_transport
[ 58%] Built target iothub_client_mqtt_ws_transport
[ 64%] Built target iothub_client_amqp_ws_transport
[ 69%] Built target iothub_client_amqp_transport
[ 71%] Built target iothub_client_http_transport
[ 78%] Built target iothub_client
[ 78%] Built target iothub_convenience_sample
[ 79%] Built target iothub_ll_c2d_sample
[ 79%] Built target iothub_ll_client_x509_sample
[ 80%] Built target iothub_ll_telemetry_sample
[ 80%] Built target iotedge_downstream_device_sample
[ 81%] Built target iothub_client_sample_upload_to_blob
[ 82%] Built target iothub_client_sample_upload_to_blob_mb
[ 82%] Built target iothub_client_sample_module_method_invoke
[ 88%] Built target serializer
[ 89%] Built target iothub_client_sample_mqtt_dm
[ 90%] Built target iothub_client_sample_module_sender
[ 91%] Built target iothub_client_sample_module_filter
[ 92%] Built target iothub_client_sample_amqp_shared_methods
[ 93%] Built target iothub_ll_client_shared_sample
[ 94%] Built target iothub_client_device_twin_and_methods_sample
[ 94%] Built target remote_monitoring
[ 95%] Built target simplesample_amqp
[ 96%] Built target simplesample_http
[ 97%] Built target temp_sensor_anomaly
[ 98%] Built target simplesample_mqtt
[ 99%] Built target devicemethod_simplesample
[ 99%] Built target devicetwin_simplesample
[100%] Built target remote_monitoring_client
Install the project...
-- Install configuration: ""
-- Installing: /usr/local/include/azureiot/parson.h
-- Installing: /usr/local/lib64/libparson.a
-- Installing: /usr/local/include/azure_macro_utils/macro_utils.h
-- Installing: /usr/local/include/azure_macro_utils/macro_utils_generated.h
-- Installing: /usr/local/cmake/azure_macro_utils_cTargets.cmake
-- Installing: /usr/local/cmake/azure_macro_utils_cConfig.cmake
-- Installing: /usr/local/cmake/azure_macro_utils_cConfigVersion.cmake
-- Installing: /usr/local/lib64/libumock_c.a
-- Installing: /usr/local/include/umock_c/umock_c.h
-- Installing: /usr/local/include/umock_c/umock_c_internal.h
-- Installing: /usr/local/include/umock_c/umock_c_negative_tests.h
-- Installing: /usr/local/include/umock_c/umock_c_prod.h
-- Installing: /usr/local/include/umock_c/umockalloc.h
-- Installing: /usr/local/include/umock_c/umockcall.h
-- Installing: /usr/local/include/umock_c/umockcallrecorder.h
-- Installing: /usr/local/include/umock_c/umocktypename.h
-- Installing: /usr/local/include/umock_c/umocktypes.h
-- Installing: /usr/local/include/umock_c/umocktypes_bool.h
-- Installing: /usr/local/include/umock_c/umocktypes_c.h
-- Installing: /usr/local/include/umock_c/umocktypes_stdint.h
-- Installing: /usr/local/include/umock_c/umocktypes_charptr.h
-- Installing: /usr/local/include/umock_c/umocktypes_struct.h
-- Installing: /usr/local/include/umock_c/umockcallpairs.h
-- Installing: /usr/local/include/umock_c/umockstring.h
-- Installing: /usr/local/include/umock_c/umockautoignoreargs.h
-- Installing: /usr/local/include/umock_c/umock_log.h
-- Installing: /usr/local/cmake/umock_cTargets.cmake
-- Installing: /usr/local/cmake/umock_cTargets-noconfig.cmake
-- Installing: /usr/local/cmake/umock_cFunctions.cmake
-- Installing: /usr/local/cmake/umock_cConfig.cmake
-- Installing: /usr/local/cmake/umock_cConfigVersion.cmake
-- Installing: /usr/local/lib64/libaziotsharedutil.a
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/agenttime.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/azure_base32.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/azure_base64.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/buffer_.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/constbuffer_array.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/constbuffer_array_batcher.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/connection_string_parser.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/crt_abstractions.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/constmap.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/condition.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/const_defines.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/consolelogger.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/doublylinkedlist.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/envvariable.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/gballoc.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/gbnetwork.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/gb_stdio.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/gb_time.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/gb_rand.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/hmac.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/hmacsha256.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/http_proxy_io.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/singlylinkedlist.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/lock.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/map.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/optimize_size.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/platform.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/refcount.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/sastoken.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/sha-private.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/shared_util_options.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/sha.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/socketio.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/srw_lock.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/stdint_ce6.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/strings.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/strings_types.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/string_token.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/string_tokenizer.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/string_tokenizer_types.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/string_utils.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/tlsio_options.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/tickcounter.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/threadapi.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/xio.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/uniqueid.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/uuid.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/urlencode.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/vector.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/vector_types.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/vector_types_internal.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/xlogging.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/constbuffer.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/tlsio.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/optionhandler.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/memory_data.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/linux_time.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/wsio.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/uws_client.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/uws_frame_encoder.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/utf8_checker.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/ws_url.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/httpapi.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/httpapiex.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/httpapiexsas.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/httpheaders.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/tlsio_openssl.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/x509_openssl.h
-- Installing: /usr/local/include/azureiot/azure_c_shared_utility/refcount_os.h
-- Installing: /usr/local/cmake/azure_c_shared_utilityTargets.cmake
-- Installing: /usr/local/cmake/azure_c_shared_utilityTargets-noconfig.cmake
-- Installing: /usr/local/cmake/azure_c_shared_utilityConfig.cmake
-- Installing: /usr/local/cmake/azure_c_shared_utilityFunctions.cmake
-- Installing: /usr/local/cmake/azure_iot_build_rules.cmake
-- Installing: /usr/local/cmake/azure_c_shared_utilityConfigVersion.cmake
-- Installing: /usr/local/lib64/libuamqp.a
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_role.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_sender_settle_mode.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_receiver_settle_mode.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_handle.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_seconds.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_milliseconds.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_delivery_tag.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_sequence_no.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_delivery_number.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_transfer_number.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_message_format.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_ietf_language_tag.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_fields.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_error.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_amqp_error.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_connection_error.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_session_error.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_link_error.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_open.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_begin.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_attach.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_flow.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_transfer.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_disposition.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_detach.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_end.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_close.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_sasl_code.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_sasl_mechanisms.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_sasl_init.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_sasl_challenge.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_sasl_response.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_sasl_outcome.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_terminus_durability.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_terminus_expiry_policy.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_node_properties.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_filter_set.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_source.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_target.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_annotations.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_message_id_ulong.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_message_id_uuid.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_message_id_binary.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_message_id_string.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_address_string.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_header.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_delivery_annotations.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_message_annotations.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_application_properties.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_data.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_amqp_sequence.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_amqp_value.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_footer.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_properties.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_received.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_accepted.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_rejected.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_released.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions_modified.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_definitions.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_frame_codec.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_management.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqp_types.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqpvalue.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/amqpvalue_to_string.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/async_operation.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/cbs.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/connection.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/frame_codec.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/header_detect_io.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/link.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/message.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/message_receiver.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/message_sender.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/messaging.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/sasl_anonymous.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/sasl_frame_codec.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/sasl_mechanism.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/sasl_server_mechanism.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/sasl_mssbcbs.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/sasl_plain.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/saslclientio.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/sasl_server_io.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/server_protocol_io.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/session.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/socket_listener.h
-- Installing: /usr/local/include/azureiot/azure_uamqp_c/uamqp.h
-- Installing: /usr/local/cmake/uamqpTargets.cmake
-- Installing: /usr/local/cmake/uamqpTargets-noconfig.cmake
-- Installing: /usr/local/cmake/uamqpConfig.cmake
-- Installing: /usr/local/cmake/uamqpConfigVersion.cmake
-- Installing: /usr/local/lib64/libumqtt.a
-- Installing: /usr/local/include/azureiot/azure_umqtt_c/mqtt_client.h
-- Installing: /usr/local/include/azureiot/azure_umqtt_c/mqtt_codec.h
-- Installing: /usr/local/include/azureiot/azure_umqtt_c/mqttconst.h
-- Installing: /usr/local/include/azureiot/azure_umqtt_c/mqtt_message.h
-- Installing: /usr/local/cmake/umqttTargets.cmake
-- Installing: /usr/local/cmake/umqttTargets-noconfig.cmake
-- Installing: /usr/local/cmake/umqttConfig.cmake
-- Installing: /usr/local/cmake/umqttConfigVersion.cmake
-- Installing: /usr/local/lib64/libuhttp.a
-- Installing: /usr/local/include/azureiot/azure_uhttp_c/uhttp.h
-- Installing: /usr/local/cmake/uhttpConfigVersion.cmake
-- Installing: /usr/local/include/azure_prov_client/hsm_client_data.h
-- Installing: /usr/local/include/azure_prov_client/hsm_client_http_edge.h
-- Installing: /usr/local/include/azure_prov_client/prov_auth_client.h
-- Installing: /usr/local/include/azure_prov_client/prov_security_factory.h
-- Installing: /usr/local/include/azure_prov_client/iothub_auth_client.h
-- Up-to-date: /usr/local/include/azure_prov_client/prov_auth_client.h
-- Installing: /usr/local/include/azure_prov_client/iothub_security_factory.h
-- Installing: /usr/local/lib64/libhsm_security_client.a
-- Installing: /usr/local/lib64/libprov_auth_client.a
-- Installing: /usr/local/include/iothub_service_client/iothub_deviceconfiguration.h
-- Installing: /usr/local/include/iothub_service_client/iothub_devicemethod.h
-- Installing: /usr/local/include/iothub_service_client/iothub_devicetwin.h
-- Installing: /usr/local/include/iothub_service_client/iothub_messaging.h
-- Installing: /usr/local/include/iothub_service_client/iothub_messaging_ll.h
-- Installing: /usr/local/include/iothub_service_client/iothub_registrymanager.h
-- Installing: /usr/local/include/iothub_service_client/iothub_sc_version.h
-- Installing: /usr/local/include/iothub_service_client/iothub_service_client_auth.h
-- Installing: /usr/local/include/iothub_service_client/iothub_message.h
-- Installing: /usr/local/lib64/libiothub_service_client.a
-- Installing: /usr/local/include/azureiot/iothub.h
-- Installing: /usr/local/include/azureiot/iothub_client_core.h
-- Installing: /usr/local/include/azureiot/iothub_client_core_ll.h
-- Installing: /usr/local/include/azureiot/iothub_client.h
-- Installing: /usr/local/include/azureiot/iothub_client_core_common.h
-- Installing: /usr/local/include/azureiot/iothub_client_ll.h
-- Installing: /usr/local/include/azureiot/iothub_client_diagnostic.h
-- Installing: /usr/local/include/azureiot/iothub_internal_consts.h
-- Installing: /usr/local/include/azureiot/iothub_client_options.h
-- Installing: /usr/local/include/azureiot/iothub_client_private.h
-- Installing: /usr/local/include/azureiot/iothub_client_version.h
-- Installing: /usr/local/include/azureiot/iothub_device_client.h
-- Installing: /usr/local/include/azureiot/iothub_device_client_ll.h
-- Installing: /usr/local/include/azureiot/iothub_module_client.h
-- Installing: /usr/local/include/azureiot/iothub_module_client_ll.h
-- Installing: /usr/local/include/azureiot/iothub_transport_ll.h
-- Installing: /usr/local/include/azureiot/iothub_message.h
-- Installing: /usr/local/include/azureiot/iothubtransport.h
-- Installing: /usr/local/include/azureiot/blob.h
-- Installing: /usr/local/include/azureiot/iothub_client_ll_uploadtoblob.h
-- Installing: /usr/local/include/azureiot/iothub_client_edge.h
-- Installing: /usr/local/include/azureiot/iothub_client_hsm_ll.h
-- Installing: /usr/local/include/azureiot/iothub_client_authorization.h
-- Installing: /usr/local/include/azureiot/iothub_client_retry_control.h
-- Installing: /usr/local/include/azureiot/iothub_transport_ll_private.h
-- Installing: /usr/local/include/azureiot/iothubtransporthttp.h
-- Up-to-date: /usr/local/include/azureiot/iothub_transport_ll.h
-- Up-to-date: /usr/local/include/azureiot/iothub_client_authorization.h
-- Up-to-date: /usr/local/include/azureiot/iothub_client_retry_control.h
-- Up-to-date: /usr/local/include/azureiot/iothub_transport_ll_private.h
-- Installing: /usr/local/include/azureiot/iothubtransport_amqp_common.h
-- Installing: /usr/local/include/azureiot/iothubtransport_amqp_device.h
-- Installing: /usr/local/include/azureiot/iothubtransport_amqp_cbs_auth.h
-- Installing: /usr/local/include/azureiot/iothubtransport_amqp_connection.h
-- Installing: /usr/local/include/azureiot/iothubtransport_amqp_telemetry_messenger.h
-- Installing: /usr/local/include/azureiot/iothubtransport_amqp_twin_messenger.h
-- Installing: /usr/local/include/azureiot/iothubtransport_amqp_messenger.h
-- Installing: /usr/local/include/azureiot/iothubtransportamqp_methods.h
-- Installing: /usr/local/include/azureiot/message_queue.h
-- Installing: /usr/local/include/azureiot/uamqp_messaging.h
-- Installing: /usr/local/include/azureiot/iothubtransportamqp.h
-- Installing: /usr/local/include/azureiot/iothubtransportamqp_websockets.h
-- Up-to-date: /usr/local/include/azureiot/iothub_client_authorization.h
-- Up-to-date: /usr/local/include/azureiot/iothub_client_retry_control.h
-- Up-to-date: /usr/local/include/azureiot/iothub_transport_ll_private.h
-- Installing: /usr/local/include/azureiot/iothubtransport_mqtt_common.h
-- Installing: /usr/local/include/azureiot/iothubtransportmqtt.h
-- Up-to-date: /usr/local/include/azureiot/iothub_client_authorization.h
-- Up-to-date: /usr/local/include/azureiot/iothub_client_retry_control.h
-- Up-to-date: /usr/local/include/azureiot/iothub_transport_ll_private.h
-- Up-to-date: /usr/local/include/azureiot/iothubtransport_mqtt_common.h
-- Installing: /usr/local/include/azureiot/iothubtransportmqtt_websockets.h
-- Installing: /usr/local/lib64/libiothub_client.a
-- Installing: /usr/local/lib64/libiothub_client_http_transport.a
-- Installing: /usr/local/lib64/libiothub_client_amqp_transport.a
-- Installing: /usr/local/lib64/libiothub_client_amqp_ws_transport.a
-- Installing: /usr/local/lib64/libiothub_client_mqtt_transport.a
-- Installing: /usr/local/lib64/libiothub_client_mqtt_ws_transport.a
-- Installing: /usr/local/include/azureiot/agenttypesystem.h
-- Installing: /usr/local/include/azureiot/codefirst.h
-- Installing: /usr/local/include/azureiot/commanddecoder.h
-- Installing: /usr/local/include/azureiot/datamarshaller.h
-- Installing: /usr/local/include/azureiot/datapublisher.h
-- Installing: /usr/local/include/azureiot/dataserializer.h
-- Installing: /usr/local/include/azureiot/iotdevice.h
-- Installing: /usr/local/include/azureiot/jsondecoder.h
-- Installing: /usr/local/include/azureiot/jsonencoder.h
-- Installing: /usr/local/include/azureiot/multitree.h
-- Installing: /usr/local/include/azureiot/schema.h
-- Installing: /usr/local/include/azureiot/schemalib.h
-- Installing: /usr/local/include/azureiot/schemaserializer.h
-- Installing: /usr/local/include/azureiot/serializer.h
-- Installing: /usr/local/include/azureiot/serializer_devicetwin.h
-- Installing: /usr/local/include/azureiot/methodreturn.h
-- Installing: /usr/local/lib64/libserializer.a
Removing intermediate container 26edd8cb200b
 ---> 2609e3cddec4
Step 14/19 : WORKDIR /app
 ---> Running in 3d7f3c09c21d
Removing intermediate container 3d7f3c09c21d
 ---> f2e0f5ee6d03
Step 15/19 : COPY . ./
 ---> fd3915d922ca
Step 16/19 : RUN cmake -DCMAKE_VERBOSE_MAKEFILE=1 -DCMAKE_NO_SYSTEM_FROM_IMPORTED=1 -DDEMO_ENABLE_TRACING=off -DBUILD_VERBOSE=on -DOS=linux -DLINUX_LIBDIR=/usr/lib64 -DCLOUD=none -Wno-dev     && make     && make install
 ---> Running in 781921f322b9
CMake Warning:
  No source or binary directory provided.  Both will be assumed to be the
  same as the current working directory, but note that this warning will
  become a fatal error in future CMake releases.


-- The C compiler identification is GNU 9.2.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Configuring done
-- Generating done
CMake Warning:
  Manually-specified variables were not used by the project:

    DEMO_ENABLE_TRACING


-- Build files have been written to: /app
/usr/bin/cmake -S/app -B/app --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /app/CMakeFiles /app/CMakeFiles/progress.marks
make -f CMakeFiles/Makefile2 all
make[1]: Entering directory '/app'
make -f CMakeFiles/meif.dir/build.make CMakeFiles/meif.dir/depend
make[2]: Entering directory '/app'
cd /app && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /app /app /app /app /app/CMakeFiles/meif.dir/DependInfo.cmake --color=
Scanning dependencies of target meif
make[2]: Leaving directory '/app'
make -f CMakeFiles/meif.dir/build.make CMakeFiles/meif.dir/build
make[2]: Entering directory '/app'
[  2%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_buffer.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_buffer.c.o   -c /app/framework/common/http/src/http_buffer.c
[  5%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_common.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_common.c.o   -c /app/framework/common/http/src/http_common.c
[  8%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_lite_client.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_lite_client.c.o   -c /app/framework/common/http/src/http_lite_client.c
[ 11%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_meif_socket.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_meif_socket.c.o   -c /app/framework/common/http/src/http_meif_socket.c
[ 13%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_parser.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_parser.c.o   -c /app/framework/common/http/src/http_parser.c
[ 16%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_ssl.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_ssl.c.o   -c /app/framework/common/http/src/http_ssl.c
[ 19%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt.c.o   -c /app/framework/common/libfdt/fdt.c
[ 22%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_addresses.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_addresses.c.o   -c /app/framework/common/libfdt/fdt_addresses.c
[ 25%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_empty_tree.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_empty_tree.c.o   -c /app/framework/common/libfdt/fdt_empty_tree.c
[ 27%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_overlay.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_overlay.c.o   -c /app/framework/common/libfdt/fdt_overlay.c
[ 30%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_region.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_region.c.o   -c /app/framework/common/libfdt/fdt_region.c
[ 33%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_ro.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_ro.c.o   -c /app/framework/common/libfdt/fdt_ro.c
[ 36%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_rw.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_rw.c.o   -c /app/framework/common/libfdt/fdt_rw.c
[ 38%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_strerror.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_strerror.c.o   -c /app/framework/common/libfdt/fdt_strerror.c
[ 41%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_sw.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_sw.c.o   -c /app/framework/common/libfdt/fdt_sw.c
[ 44%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_wip.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_wip.c.o   -c /app/framework/common/libfdt/fdt_wip.c
[ 47%] Building C object CMakeFiles/meif.dir/framework/common/parson/parson.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/parson/parson.c.o   -c /app/framework/common/parson/parson.c
[ 50%] Building C object CMakeFiles/meif.dir/framework/common/utils/dict_container.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/dict_container.c.o   -c /app/framework/common/utils/dict_container.c
[ 52%] Building C object CMakeFiles/meif.dir/framework/common/utils/downloader.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/downloader.c.o   -c /app/framework/common/utils/downloader.c
[ 55%] Building C object CMakeFiles/meif.dir/framework/common/utils/inet_pton.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/inet_pton.c.o   -c /app/framework/common/utils/inet_pton.c
[ 58%] Building C object CMakeFiles/meif.dir/framework/common/utils/utf8_decode.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/utf8_decode.c.o   -c /app/framework/common/utils/utf8_decode.c
[ 61%] Building C object CMakeFiles/meif.dir/framework/common/utils/util_str.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/util_str.c.o   -c /app/framework/common/utils/util_str.c
[ 63%] Building C object CMakeFiles/meif.dir/framework/common/utils/util_uri.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/util_uri.c.o   -c /app/framework/common/utils/util_uri.c
[ 66%] Building C object CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd.c.o   -c /app/framework/services/devcmd_svcs/devcmd.c
/app/framework/services/devcmd_svcs/devcmd.c: In function 'DEVCMD_Get_Next':
/app/framework/services/devcmd_svcs/devcmd.c:428:19: warning: assignment discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
  428 |             *tags = cmd->tags;
      |                   ^
[ 69%] Building C object CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/app -I/app/framework/include -I/app/framework/common/libfdt  -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o   -c /app/framework/services/devcmd_svcs/devcmd_list.c
In file included from /app/framework/include/meif/meif_internal.h:22,
                 from /app/framework/include/meif.h:26,
                 from /app/framework/services/devcmd_svcs/devcmd_list.c:22:
/app/framework/include/meif/meif_cfg.h:33: warning: "MEIF_OS_LINUX" redefined
   33 | #define MEIF_OS_LINUX
      | 
<command-line>: note: this is the location of the previous definition
In file included from /app/framework/include/meif/meif_internal.h:22,
                 from /app/framework/include/meif.h:26,
                 from /app/framework/services/devcmd_svcs/devcmd_list.c:22:
/app/framework/include/meif/meif_cfg.h:35: warning: "MEIF_BUILD" redefined
   35 | #define MEIF_BUILD
      | 
<command-line>: note: this is the location of the previous definition
In file included from /app/framework/include/meif/meif_internal.h:94,
                 from /app/framework/include/meif.h:26,
                 from /app/framework/services/devcmd_svcs/devcmd_list.c:22:
/app/framework/services/devcmd_svcs/devcmd.h:123:36: error: operator '==' has no left operand
  123 | #if (MEIF_USES_DOCKER_STACK_UPDATE == 1)
      |                                    ^~
/app/framework/services/devcmd_svcs/devcmd_list.c:89:36: error: operator '==' has no left operand
   89 | #if (MEIF_USES_DOCKER_STACK_UPDATE == 1)
      |                                    ^~
make[2]: *** [CMakeFiles/meif.dir/build.make:378: CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o] Error 1
make[2]: Leaving directory '/app'
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/meif.dir/all] Error 2
make[1]: Leaving directory '/app'
make: *** [Makefile:133: all] Error 2
The command '/bin/sh -c cmake -DCMAKE_VERBOSE_MAKEFILE=1 -DCMAKE_NO_SYSTEM_FROM_IMPORTED=1 -DDEMO_ENABLE_TRACING=off -DBUILD_VERBOSE=on -DOS=linux -DLINUX_LIBDIR=/usr/lib64 -DCLOUD=none -Wno-dev     && make     && make install' returned a non-zero code: 2
ravi@debian:~/mgc/omni_meif_0807/meif/docker/meiflib$ pwd
/home/ravi/mgc/omni_meif_0807/meif/docker/meiflib
ravi@debian:~/mgc/omni_meif_0807/meif/docker/meiflib$ docker images
REPOSITORY                                TAG                 IMAGE ID            CREATED             SIZE
<none>                                    <none>              fd3915d922ca        5 minutes ago       1.15GB
mel-docker_debian10-base-20200708144922   v12.0               f5af8548803c        6 days ago          1.55GB
alpine                                    3.11.3              e7d92cdc71fe        5 months ago        5.59MB
hawkbit/hawkbit-update-server             0.2.0M4             086db960bd28        2 years ago         158MB
ravi@debian:~/mgc/omni_meif_0807/meif/docker/meiflib$ 
{code}";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:9:"MEIF-2483";}}}s:20:"timeoriginalestimate";i:3600;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595306584;s:7:"updated";i:1595860668;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:63;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2690";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:75:"Azure-edge:meiftelemetrymodule logs having connection failed error messages";s:11:"description";s:7280:"*Issue:*
----------------
meiftelemetrymodule logs having connection failed error messages

*Steps:*
-----------
Steps:
-----------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200707_0400/omni-linux-x64-2.0.0.bin
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200707-222208/outputs/meif-linux-x64-1.4.0.bin
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ../edge -m industrial-pc
6) Setup Variable in local.conf file for edge device
{code}
MEIF_CLOUD ??= "azure-edge"
MEIF_AZURE_IOT_EDGE_CONNECTION_STRING ??= "HostName=pbu-dev-iothub-franz.azure-devices.net;DeviceId=tester;SharedAccessKey=I+gZ7sJkeLN+bsjBGJCMSmh85BerTkMBs0u+ykodtO8="
MEIF_USES_DOCKER_STACK_UPDATE ?= "no"
{code}

7)./melomni-devshell.sh -b -d ../edge -t service-stick-image

8) Booted target with build image

9) iotedge logs meiftelemetrymodule

Expected Output:
------------------------
Telemetry data should show

Actual Output:
------------------
Having multiple connection error messages in logs
{code}
root@edge:/var/lib/iotedge# iotedge list
NAME                 STATUS           DESCRIPTION      CONFIG
edgeAgent            running          Up 17 minutes    mcr.microsoft.com/azureiotedge-agent:1.0
edgeHub              running          Up 17 minutes    mcr.microsoft.com/azureiotedge-hub:1.0
meiftelemetrymodule  running          Up 17 minutes    pbudevregfranz.azurecr.io/meiftelemetrymodule:1.4.0-amd64
root@edge:/var/lib/iotedge# 
{code}

{code}
root@edge:/var/lib/iotedge# iotedge logs meiftelemetrymodule
Waiting for incoming messages.
Caught!
Waiting for incoming messages.
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/socketio_berkeley.c Func:wait_for_connection Line:425 Failure: connect failure 111.
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/socketio_berkeley.c Func:socketio_open Line:827 wait_for_connection failed
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/umqtt/src/mqtt_client.c Func:onOpenComplete Line:454 Error: failure opening connection to endpoint
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/tlsio_openssl.c Func:on_underlying_io_open_complete Line:760 Invalid tlsio_state. Expected state is TLSIO_STATE_OPENING_UNDERLYING_IO.
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/tlsio_openssl.c Func:tlsio_openssl_open Line:1258 Failed opening the underlying I/O.
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/umqtt/src/mqtt_client.c Func:mqtt_client_connect Line:1042 Error: io_open failed
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/iothub_client/src/iothubtransport_mqtt_common.c Func:SendMqttConnectMsg Line:2282 failure connecting to address edge.azure-devices.net.
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/socketio_berkeley.c Func:wait_for_connection Line:425 Failure: connect failure 111.
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/socketio_berkeley.c Func:socketio_open Line:827 wait_for_connection failed
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/umqtt/src/mqtt_client.c Func:onOpenComplete Line:454 Error: failure opening connection to endpoint
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/tlsio_openssl.c Func:on_underlying_io_open_complete Line:760 Invalid tlsio_state. Expected state is TLSIO_STATE_OPENING_UNDERLYING_IO.
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/tlsio_openssl.c Func:tlsio_openssl_open Line:1258 Failed opening the underlying I/O.
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/umqtt/src/mqtt_client.c Func:mqtt_client_connect Line:1042 Error: io_open failed
Error: Time:Mon Jul 13 08:51:59 2020 File:/app/azure-iot-sdk-c/iothub_client/src/iothubtransport_mqtt_common.c Func:SendMqttConnectMsg Line:2282 failure connecting to address edge.azure-devices.net.
Error: Time:Mon Jul 13 08:52:00 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/socketio_berkeley.c Func:wait_for_connection Line:425 Failure: connect failure 111.
Error: Time:Mon Jul 13 08:52:00 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/socketio_berkeley.c Func:socketio_open Line:827 wait_for_connection failed
Error: Time:Mon Jul 13 08:52:00 2020 File:/app/azure-iot-sdk-c/umqtt/src/mqtt_client.c Func:onOpenComplete Line:454 Error: failure opening connection to endpoint
Error: Time:Mon Jul 13 08:52:00 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/tlsio_openssl.c Func:on_underlying_io_open_complete Line:760 Invalid tlsio_state. Expected state is TLSIO_STATE_OPENING_UNDERLYING_IO.
Error: Time:Mon Jul 13 08:52:00 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/tlsio_openssl.c Func:tlsio_openssl_open Line:1258 Failed opening the underlying I/O.
Error: Time:Mon Jul 13 08:52:00 2020 File:/app/azure-iot-sdk-c/umqtt/src/mqtt_client.c Func:mqtt_client_connect Line:1042 Error: io_open failed
Error: Time:Mon Jul 13 08:52:00 2020 File:/app/azure-iot-sdk-c/iothub_client/src/iothubtransport_mqtt_common.c Func:SendMqttConnectMsg Line:2282 failure connecting to address edge.azure-devices.net.
Error: Time:Mon Jul 13 08:52:02 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/socketio_berkeley.c Func:wait_for_connection Line:425 Failure: connect failure 111.
Error: Time:Mon Jul 13 08:52:02 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/socketio_berkeley.c Func:socketio_open Line:827 wait_for_connection failed
Error: Time:Mon Jul 13 08:52:02 2020 File:/app/azure-iot-sdk-c/umqtt/src/mqtt_client.c Func:onOpenComplete Line:454 Error: failure opening connection to endpoint
Error: Time:Mon Jul 13 08:52:02 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/tlsio_openssl.c Func:on_underlying_io_open_complete Line:760 Invalid tlsio_state. Expected state is TLSIO_STATE_OPENING_UNDERLYING_IO.
Error: Time:Mon Jul 13 08:52:02 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/tlsio_openssl.c Func:tlsio_openssl_open Line:1258 Failed opening the underlying I/O.
Error: Time:Mon Jul 13 08:52:02 2020 File:/app/azure-iot-sdk-c/umqtt/src/mqtt_client.c Func:mqtt_client_connect Line:1042 Error: io_open failed
Error: Time:Mon Jul 13 08:52:02 2020 File:/app/azure-iot-sdk-c/iothub_client/src/iothubtransport_mqtt_common.c Func:SendMqttConnectMsg Line:2282 failure connecting to address edge.azure-devices.net.
Error: Time:Mon Jul 13 08:52:06 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/socketio_berkeley.c Func:wait_for_connection Line:425 Failure: connect failure 111.
Error: Time:Mon Jul 13 08:52:06 2020 File:/app/azure-iot-sdk-c/c-utility/adapters/socketio_berkeley.c Func:socketio_open Line:827 wait_for_connection failed
root@edge:/var/lib/iotedge# 
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:3600;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1594727863;s:7:"updated";i:1595309495;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:64;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2689";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"Define the x509 based workflows for mindsphere cloud.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594949754;s:7:"updated";i:1595312554;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:65;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2688";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:39:"MEIF Host Tool User's Guide (sprint 10)";s:11:"description";s:333:"After CB-12540 is resolved, we need some updates including screenshots in MEIF Host Tool User's Guide. I have added my comments in latest version of guide installed with [200709-222209|ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200709-222209/outputs/] installer build. Please see [^meif_mht_user_200709-222209_sfarooq.pdf].";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:15:"is triggered by";a:1:{i:0;s:8:"CB-12540";}}}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869664;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:66;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2687";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:101:"Getting error on System Installation "failed to install development-image-mel-omni-industrial-pc.swu"";s:11:"description";s:254:"Unable to install the image with error "failed to install development-image-mel-omni-industrial-pc.swu".
This also cause the internal drive to disappear. 

After investigation it is found that service-stick-image is not including the swupdate package.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594399499;s:7:"updated";i:1594627238;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:67;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2686";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:122:"Test ADE and 'all' cloud configuration to ensure the changes made under MEIF-2483 do not break any existing functionality.";s:11:"description";s:104:"Test ADE using the branch created under this ticket.
Ensure build and run time configuration work fine.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594877733;s:7:"updated";i:1594878637;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:68;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2684";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:102:"SWupdate is not happening with swupdate-hawkbit and meif-swupdate service for all AWS, Azure & Hawkbit";s:11:"description";s:2771:"*Issue:*
----------------
Swupdate is not happening for aws , azure and hawkbit with swupdate-hawkbit and meif-swupdate service.

*Steps:*
-----------
Steps:
-----------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200707_0400/omni-linux-x64-2.0.0.bin
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200707-222208/outputs/meif-linux-x64-1.4.0.bin
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ../all_cloud -m industrial-pc
6) Setup Variable in local.conf file for all cloud

7)./melomni-devshell.sh -b -d ../../all_cloud -t service-stick-image

8) Booted target with build image

9) Tried swupdate with once swupdate-hawkbit service enabled and another time meif-swupdate service enabled

Expected Output:
------------------------
Swupdate should start

Actual Output:
------------------
swupdate is not getting started , and in aws webpage getting "UpdateFailure" message
 !aws_swupdate_failure_log.JPG|thumbnail! 

Note: In journalctl -u meif-swupdate -f, there is not status log.
{code}
root@allcloud:~# journalctl -u meif-swupdate -f
-- Logs begin at Fri 2020-07-10 12:35:45 IST. --
Jul 10 12:39:46 allcloud swupdate[964]:         parted_type
Jul 10 12:39:46 allcloud swupdate[964]:         ebg_type
Jul 10 12:39:46 allcloud swupdate[964]: [TRACE] : SWUPDATE running :  [versions_settings] : Installed bootloader: Version 2.0.1.0
Jul 10 12:39:46 allcloud swupdate[964]: [TRACE] : SWUPDATE running :  [versions_settings] : Installed kernel: Version 2.0.1.0
Jul 10 12:39:46 allcloud swupdate[964]: [TRACE] : SWUPDATE running :  [versions_settings] : Installed rootfs: Version 2.0.1.0
Jul 10 12:39:46 allcloud swupdate[964]: [TRACE] : SWUPDATE running :  [network_initializer] : Main loop Daemon
Jul 10 12:39:46 allcloud swupdate[964]: [TRACE] : SWUPDATE running :  [listener_create] : got no socket at /run/meif/tmp/swupdateprog from systemd
Jul 10 12:39:46 allcloud swupdate[964]: [TRACE] : SWUPDATE running :  [listener_create] : got no socket at /run/meif/tmp/sockinstctrl from systemd
Jul 10 12:39:46 allcloud swupdate[964]: [TRACE]<7>[TRACE] : SWUPDATE running :  [listener_create] : creating socket at /run/meif/tmp/sockinstctrl
Jul 10 12:39:46 allcloud swupdate[964]:  : SWUPDATE running :  [listener_create] : creating socket at /run/meif/tmp/swupdateprog









{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594411244;s:7:"updated";i:1595485460;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:69;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2683";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:30:"Jenkins job fails to build ADE";s:11:"description";s:273:"Following jenkins job is failing as ADE build fails to build.
[https://alm-jenkins-02.alm.mentorg.com:8443/job/meif/job/git_meif_with_installer_omni2.0/]

Though [~ehsaeed]  confirmed, that locally he can build it fine, we still need to investigate and fix jenkins job.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594646099;s:7:"updated";i:1594720074;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:70;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2682";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:65:"Test the FWUPDATE-MOD device commands with Azure IoT Edge Modules";s:11:"description";s:92:"Test the commands get-fwupdate-logs and get-fwupdate-install-progress with iot edge modules.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595944970;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:71;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2681";s:6:"status";s:11:"Code Review";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:69:"configure_file() function used in meif modifies orignal source files.";s:11:"description";s:872:"Just noticed a possible problem in the way we use configure_file() API of cmake, we run configure_file() and modify the same file, this is fine when build is from the omni build system, but when the build is done on linux host, then the original source file gets modified. we need something like meif_config.h.in to be configured as meif_config.h, similarly we can have a meif.install.in which gets configured as meif.install by configure_install() .




Suggestions:
Ehtasham Saeed 4:46 PM
Should we also have a mechanism to clean these files?
Sannan Nasir 4:47 PM
Yes I have also faced this issue while building meif natively. I think configuring .in files will be better. Currently I have to copy the source to temporary directory to not modify my original source. We can also explore options like CMAKE_DISABLE_SOURCE_CHANGES and CMAKE_DISABLE_IN_SOURCE_BUILD";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869664;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:72;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2680";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:138:"Write script to create dps service and certificates  that can be used by the device to auto provision using dps and connect to the iot hub";s:11:"description";s:488:"the script needs to the following
 * create DPS
 * link iot hub with DPS
 * create certificates  : rootca, rootca_privatekey, verification_certificate, verification_certificate_privatekey, device_certificate, device_privatekey
 * root ca certificate register with DPS.
 * create enrollment :  group enrollment create.
expected output of script is: certificates that will be used by azure-agent, scopeid 

 Reference
https://docs.microsoft.com/en-us/azure/iot-dps/about-iot-dps";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594938440;s:7:"updated";i:1594938452;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:73;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2679";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:46:"Rearrange Mendix related documentation content";s:11:"description";s:950:"1- In the MEIF user's and reference manual, in "Chapter 5: Mendix Web Application Support", move all the initial content of the chapter till the "Device Dashboard Web Application" heading into the "MEL Omni Getting Started guide" into a new "Appendix B: Mendix Web Application" chapter. So Chapter 5 of the reference manual should finally only contain the "Device Dashboard Web Application" section and any content which follows that section.

2- At the end of the Appendix B of the getting started guide, please also add the following note:

*Note*: For more information about the Mendix Web Application interface, please refer to Chapter 5 of the MEIF User's and Reference Manual.

3- Furthermore, in the getting started guide, in Chapter 8, please add the following note at the start of the chapter:

*Note*: The AWS sample application can also be used alongside the Mendix Web Application. Please refer to Appendix B for more information.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595917218;s:7:"updated";i:1595917218;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:74;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2678";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"utah ssh channel doesn't accept port, add omni shell";s:11:"description";s:138:"the ssh channel should accept port, in case the device is running on localhost like qemu or other virtual device, and also add omni shell";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595969033;s:7:"updated";i:1596008042;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:75;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2677";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:33:"AWS JITP script fails with error.";s:11:"description";s:394:"Steps to reproduce.
 # Add AWS access key to aws_jitp.cfg
 # Set region to us-east-1.
 # Run the script with ./aw_jitp.sh
 # Press Enter for default values of access keys
 # Output type is none

Expected Result: 
 Script should run successfully without errors.

Output:
{code:java}
Error parsing parameter '--registration-config': Expected: '=', received: 'EOF' for input:^
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:10800;s:10:"resolution";s:16:"Cannot Reproduce";s:14:"resolutiondate";i:1594911687;s:7:"updated";i:1594911708;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:76;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2480";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@67ebfbbc[id=2013,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 10,startDate=2020-07-06T06:38:36.945+01:00,endDate=2020-07-24T17:38:00.000+01:00,completeDate=2020-07-24T20:15:38.837+01:00,sequence=2014,goal=Starts: 6th July  Till 24th July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2675";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:36:"FF: Bug verification on daily builds";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595493574;s:7:"updated";i:1595493589;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:77;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2154";s:6:"sprint";a:1:{i:0;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2674";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:35:"FF:Sprint 11 documents verification";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595610885;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:78;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2575";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2673";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:43:"Final documentation for IoT Device Solution";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:2:{i:0;s:9:"MEIF-2698";i:1;s:9:"MEIF-2699";}}}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594802284;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:79;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2672";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"Update MEIF GS to have setup instruction for Windows.";s:11:"description";s:1017:"MEIF GS guide has various setup steps e.g docker setup for azure iot edge. these setup steps are for linux only. we need to add steps for windows too.

Following is feedback from [~ushabbir] 
{code:java}
I was exploring this section https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-AzureIoTEdgeModuleDevelopmentandDebuggingUsingVisualStudioCode
Just wanted to share that I followed it on windows but the guide looks like it is meant for linux users only. As it mentions linux commands only in setting up required tools like install python, pip, docker-compose and permission setting commands.However there wasn't much difference while following it on windows but I was thinking if windows commands/steps should also be there or not.
There is difference in installing prerequisite things like python, pip and docker setup which can't be made generic for both. But one can go to official docs for python/docker etc and easily setup for windows .{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594148379;s:7:"updated";i:1595312566;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:80;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2671";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"Write power shell scripts for all scripts in meif";s:11:"description";s:443:"currently we have scripts that run docker containers. these driver scripts are available for linux only. we need to write power shell scripts so that these scripts can be run on windows too.
following are some of the scripts that need the power shell script
 * meif/samples/aws/scripts
 * meif/samples/azure/scripts
 * meif/scripts/aws-jitp

If there are any other scripts then power shell scripts for those scritps should also be added.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594145345;s:7:"updated";i:1594145353;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:81;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2670";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:63:"meif_gs.pdf should not get installed in MEIF 1.4.0 installation";s:11:"description";s:131:"MEIF 1.4.0 installation includes meif_gs.pdf as well which is the older version of GSG. It should be removed from the installation.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595269246;s:7:"updated";i:1595488746;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:6:{i:0;s:13:"documentation";i:1;s:16:"meif-1.4-qa-bugs";i:2;s:10:"meifmr-225";i:3;s:5:"tools";i:4;s:13:"nightly-build";i:5;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:82;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2668";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:34:"Upgrading Azure IoT Edge to 1.0.10";s:11:"description";s:557:"As a result of the progress on MEIF-2389, we will need to upgrade to a newer Azure IoT Edge version with a license suited for commercial use. Microsoft plans to release the changes to the license file within version 1.0.10 of the IoT Edge. The MEIF supported version of IoT Edge should be upgraded to this version and should be tested for correct functionality.

The latest releases of Azure IoT Edge are announced on this page:

[https://github.com/Azure/azure-iotedge/releases]

(the previous update of Azure IoT Edge was performed under MEIF-2320)";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594118599;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:83;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2665";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:31:"Final OSS readme file placement";s:11:"description";s:160:"The OSS readme file currently placed in the product has a "draft" state. Once all OSS approvals are obtained, update the OSS readme file with the final version.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869663;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:84;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:3:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:2;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2663";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:37:"Automate the testing of meif AWS demo";s:11:"description";s:238:"* Automation of installation of Omni and MEIF installers
 * Build Omni service-stick-image and install it on Qemu
 * Bypass the first-boot configurations
 * Add support for following methods
 ** ping
 ** reboot
 * Report test result";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:172800;s:9:"timespent";i:86400;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869663;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"new feature";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:85;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2454";s:6:"sprint";a:3:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:2;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2662";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:55:"Documentation of MEIF health diagnostic device commands";s:11:"description";s:66:"Documentation the new MEIF health diagnostic device commands

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594104762;s:7:"updated";i:1595869663;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:86;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@67ebfbbc[id=2013,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 10,startDate=2020-07-06T06:38:36.945+01:00,endDate=2020-07-24T17:38:00.000+01:00,completeDate=2020-07-24T20:15:38.837+01:00,sequence=2014,goal=Starts: 6th July  Till 24th July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2661";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"QA: Tools: Test planning for post-FF and post-CF tasks";s:11:"description";s:45:"Cover all supported clouds in sanity testing.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2660";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:27900;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594988583;s:7:"updated";i:1594988589;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:87;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2660";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:53:"QA: Tools: Sanity testing for trace support - post-FF";s:11:"description";s:617:"Cover all supported clouds in sanity testing.

*Testlink Project*: IoT:Internet of Things

*Testlink Plan*: MEIF 1.4.0 - Test Plan for Post-FF Testing

*Platforms*
 * AWS - IPC 127E - Debian 10 (64 bit)
 * AWS - IPC 127E - Windows 10 (64 bit)
 * Azure - IPC 127E - Debian 10 (64 bit)
 * Azure - IPC 127E - Windows 10 (64 bit)

*Suite*: Sourcery Analyzer

*Build*: post-FF

Make sure to test all the features mentioned at [QA Checklist for QA Cycle 2 of MEIF 1.4.0|https://confluence.alm.mentorg.com/display/QA/QA+Checklist+for+QA+Cycle+2+of+MEIF+1.4.0].

 

Note: Install MEIF on top of OMNI2";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2659";}}s:2:"in";a:1:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2661";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595934678;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:88;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2659";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:63:"QA: Tools: Sanity testing for MEL ADE based debugging - post-FF";s:11:"description";s:532:"Cover all supported clouds in sanity testing.

*Testlink Project*: IoT:Internet of Things

*Testlink Plan*: MEIF 1.4.0 - Test Plan for Post-FF Testing

*Platforms*
 * AWS - IPC 127E - Debian 10 (64 bit)
 * Azure - IPC 127E - Debian 10 (64 bit)
 * MCL - IPC 127E - Windows 10 (64 bit)

*Suite*: CodeBench Workflow

*Build*: post-FF

Make sure to test all the features mentioned at [QA Checklist for QA Cycle 2 of MEIF 1.4.0|https://confluence.alm.mentorg.com/display/QA/QA+Checklist+for+QA+Cycle+2+of+MEIF+1.4.0].";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2660";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594813194;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:89;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:3:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:2;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2658";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:47:"MEIF 1.4.0 Installation Instructions (sprint 9)";s:11:"description";s:174:"This ticket covers changes to the install instructions within MEIF 1.4 sprint 9. Previous versions of this document can be found on the older MEIF-2368 and MEIF-1922 tickets.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-1922";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869663;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:90;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2657";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:38:"MEIF Host Tool User's Guide (sprint 9)";s:11:"description";s:161:"This ticket covers changes to the MHT tool documentation within MEIF 1.4 sprint 9. Previous versions of this document can be found on the older MEIF-2628 ticket.";s:10:"issuelinks";a:1:{s:3:"out";a:2:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2628";}s:10:"depends on";a:2:{i:0;s:9:"MEIF-2582";i:1;s:9:"MEIF-2626";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593769544;s:7:"updated";i:1594024187;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:91;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2656";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:88:"Read the path "/var/run/meif" from meif-config.h in meif samples instead of hard coding.";s:11:"description";s:93:"Also move pid related logic to a separate function then it would make the code more readable.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593710075;s:7:"updated";i:1593780981;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:92;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2655";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:58:"Client ID length is not correctly calculated in aws sample";s:11:"description";s:403:"In aws sample, file aws.c, the client id length is wrongly calculated in case the clientid is passed via meif.ini file.

scp.pMqttClientId = AWS_CLIENT_MQTT_CLIENT_ID;
 {color:#172b4d}scp.mqttClientIdLen = (uint16_t) strlen({color:#de350b}AWS_IOT_MQTT_CLIENT_ID{color});{color}

it should be this.

scp.mqttClientIdLen = (uint16_t) strlen(*{color:#172b4d}AWS_CLIENT_MQTT_CLIENT_ID{color}*);

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592850322;s:7:"updated";i:1592904694;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:93;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2654";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:40:"improve swupdate disabling logic in meif";s:11:"description";s:805:"1) if 'SWUPDATE_VARIANT' is not defined in MEL Omni then meif.bb gives bad substituion error. 
possible solution: to use SWUPDATE_VARIANT ??= "" in meif.bb

2) if  swupdate is disabled by MEIF then no swupdate package should be installed by meif. This needs verification. this is already done by MEIF.

3) packages added to support on target development should be configurable . there should be option to disable on target development

4) libswupdate-ebg-dev package should only be added to build_pkg_depends or in the list of packages reqruied for on target development if swupdate is available in OS and libswupdate-ebg-dev package exists.

5)if OS does not support swupdate and meif_uses_swupdate is yes then it should be automatically set to false and a warning message should be displayed ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593704635;s:7:"updated";i:1593781027;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:94;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2653";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:117:"No error is produced when meif agent is running as autostart service and same agent is run manually from command line";s:11:"description";s:315:"Due to "all" cloud changes, now autostart service runs the meif-agent binary by linking that to aws-agent/azure-agent/mindconnect-agent. But the agents specifically looks for pid respective to their names. 

So no error occurs if agent is running as autostart service and then same agent is run from command line.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592564192;s:7:"updated";i:1592837760;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:95;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:3:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:2;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2652";s:6:"status";s:11:"Code Review";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:47:"Automate the testing of meif Azure demo testing";s:11:"description";s:637:"To automate the complete process following are the tasks that can take place
 * Run Arsalan's Azure test automation POC
 * Automation of installation of Omni and MEIF installers
 * Build Omni/MEIF service stick image and install it on Qemu
 * Bypass the first-boot-configuration utility by preconfiguring the device
 * Update Arsalan's Azure test code to use the Azure Python Device SDK ([https://github.com/Azure/azure-iot-sdk-python|https://slack-redir.net/link?url=https%3A%2F%2Fgithub.com%2FAzure%2Fazure-iot-sdk-python]) and add support for the following tests:
 ** Telemetry data
 ** Ping
 ** Reboot
 * Report test results";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:374400;s:9:"timespent";i:489600;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595998801;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"new feature";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:96;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2651";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:109:"Service-stick-image is not getting installed, getting installer popping up with exception and multiple frames";s:11:"description";s:613:"1. installer OMNI: ftp://ftpnew.alm.mentorg.com/pub/omni/200614_0400/
                  MEIF: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200615-222207/outputs/meif-linux-x64-1.4.0.bin
2. Setup local.conf variables for Azure edge device
3. build service-stick-image
4. install development-image
5. while using installer we do get exception and multiple frames..

NOTE: In qemu , installation is not getting installed, stuck at one level.And in Actual target after multiple popup message it is getting installed
| Qemu | !qemu_issue.png|thumbnail!  |
| IPC127E | !TARGET_issue.jpg|thumbnail!  |
";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:8:"MELO-512";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:60;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1592455271;s:7:"updated";i:1594207570;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:97;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2650";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:161:"Azure-Downstream:Getting Warning for Azure IoT Edge default gateway certificate, even after setting up user defined certificate in local.conf with MEIF_CLOUD=all";s:11:"description";s:3117:"*Issue:*
----------------
With MEIF_CLOUD=all, getting Warning for Azure IoT Edge default gateway certificate, even after setting up user defined certificate in local.conf

*Steps:*
-----------
Steps:
-----------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200614_0400/omni-linux-x64-2.0.0.bin
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200615-222207/outputs/meif-linux-x64-1.4.0.bin
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ../../downstream -m industrial-pc
6) Setup Variable in local.conf file
MEIF_CLOUD ??= "all"
MEIF_AZURE_DEMO_DEVICE_ID ??= "azure_device_test"
MEIF_AZURE_DEMO_HOSTNAME ??= "edge.azure-devices.net"
MEIF_AZURE_DEMO_DEVICE_KEY ??= "4SC1tohk7YwXq2a2TEkgoegbaolYhoRD2Yn6H5rPm6s="

MEIF_AZURE_IOT_EDGE_GATEWAY_ROOT_CA ?= "azure-iot-test-only.root.ca.cert.pem"
MEIF_AZURE_IOT_EDGE_GATEWAY_CERTS_HOST_DIR ?= "/mel-omni-os/certificate"
SWU_KEYS_PATH ?= "/mel-omni-os/swupdate_keys"
7)./melomni-devshell.sh -b -d ../../downstream -t service-stick-image

Expected Output:
------------------------
Build should get completed without any warnings/errors

Actual Output:
------------------
Build completed but with warning message for Azure Iot edge rootca certificate
{code}
ravi@debian:~/mgc/omni_tc5_meif/mel-omni-os/2$ ./melomni-devshell.sh -b -d ../../downstream -t service-stick-image
**************************************************************************
Warning: group id on host does not match the one in container
**************************************************************************
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-ade
    development-image
    service-stick-image
Parsing recipes: 100% |#############################################################################################################################################################################| Time: 0:00:03
Parsing of 124 .bb files complete (0 cached, 124 parsed). 124 targets, 0 skipped, 1 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
WARNING:  You are using default certificates for Azure IoT Edge gateway, which means each time MEIF is built, new certificates are generated.
It is recommended to provide your own certificates so that Azure IoT Edge gateway and the downstream device(azure agent) use the same certificates.
Initialising tasks: 100% |##########################################################################################################################################################################| Time: 0:00:05
NOTE: No setscene tasks
NOTE: Executing Tasks
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:12600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592376581;s:7:"updated";i:1594650625;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:98;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2649";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:34:"Add omni installer support in UTAH";s:11:"description";s:96:"Add support for omni installer in UTAH, currently UTAH supports project build/create/config etc.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:46800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592936019;s:7:"updated";i:1592936030;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"new feature";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:99;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2454";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2647";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:70:"Test all health diagnostic device commands with azure iot edge module.";s:11:"description";s:92:"test all device command implemented under MEIF-2454.
 probably use meifdevicecommandmodule.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:122400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595306554;s:7:"updated";i:1595307248;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:100;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2154";s:6:"sprint";a:1:{i:0;s:299:"com.atlassian.greenhopper.service.sprint.Sprint@6e261774[id=2012,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 9,startDate=2020-06-15T08:50:57.907+01:00,endDate=2020-07-03T17:50:00.000+01:00,completeDate=2020-07-06T06:30:59.942+01:00,sequence=2012,goal=Starts: 15th June Till 3rd July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2646";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:100:"FF:Verify the incorporated comments in documents(MHT Guide,gs,Installation guide,User's Manual..etc)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593791085;s:7:"updated";i:1593791091;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:101;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2645";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:94:"Chapter 3 (Software Update Process) of the MEIF reference manual contains outdated information";s:11:"description";s:286:""Chapter 3: Software Update Process" currently contains information specific to MEL Flex and that too for a specific MEL FLex BSP/release. This chapter needs to be updated to provide generic information about swupdate and possibly to provide separate sections for MEL Flex and MEL Omni.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:72000;s:9:"timespent";i:64800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594271699;s:7:"updated";i:1595830649;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:102;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2644";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:69:"Appendix B in the MEIF reference manual contains outdated information";s:11:"description";s:231:"The chapter "Appendix B Build System and Directory Structure" needs to be reviewed/updated. For example, we no longer have the 'cmake' directory. it has been replaced with 'os_support'. Similarly we have a 'scripts' folder too now.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592225391;s:7:"updated";i:1592284408;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:103;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:3:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:2;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2643";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"MEIF 1.4.0 User's and Reference Manual (Sprint 9)";s:11:"description";s:620:"Incorporate all changes required in the MEIF 1.4 User's and Reference manual.

Engineering content available here:

[https://confluence.alm.mentorg.com:8090/display/MEIF/MEIF-1.4+-+Getting+Started+Guide] [https://confluence.alm.mentorg.com:8090/display/MEIF/MEIF-1.4+-+User%27s+and+Reference+Manual]

Per revision reviews of the document are being tracked here: https://confluence.alm.mentorg.com/pages/viewpage.action?pageId=191301668

(the changes being made under this ticket follow the documentation change process: [https://confluence.alm.mentorg.com/display/PS/MEIF+1.4+-+Documentation+Change+Management])";s:10:"issuelinks";a:2:{s:2:"in";a:2:{s:13:"Is Blocked By";a:1:{i:0;s:9:"MEIF-2703";}s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2698";}}s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2611";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595913516;s:7:"updated";i:1595913563;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:104;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2642";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:43:"MEIF 1.4.0 Getting Started Guide (Sprint 9)";s:11:"description";s:526:"Incorporate all changes required in the MEIF 1.4 getting started guide.

Engineering content available here:

[https://confluence.alm.mentorg.com:8090/display/MEIF/MEIF-1.4+-+Getting+Started+Guide]

Per revision reviews of the document are being tracked here:

https://confluence.alm.mentorg.com:8090/pages/viewpage.action?pageId=189237052

(the changes being made under this ticket follow the documentation change process: [https://confluence.alm.mentorg.com/display/PS/MEIF+1.4+-+Documentation+Change+Management])";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2610";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594023475;s:7:"updated";i:1594023475;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:105;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2161";s:6:"sprint";a:1:{i:0;s:299:"com.atlassian.greenhopper.service.sprint.Sprint@6e261774[id=2012,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 9,startDate=2020-06-15T08:50:57.907+01:00,endDate=2020-07-03T17:50:00.000+01:00,completeDate=2020-07-06T06:30:59.942+01:00,sequence=2012,goal=Starts: 15th June Till 3rd July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2641";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:67:"FF:Execute the remaing run time tests for MEIF_CLOUD = "all" option";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592473620;s:7:"updated";i:1592475723;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:106;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2422";s:6:"sprint";a:1:{i:0;s:299:"com.atlassian.greenhopper.service.sprint.Sprint@6e261774[id=2012,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 9,startDate=2020-06-15T08:50:57.907+01:00,endDate=2020-07-03T17:50:00.000+01:00,completeDate=2020-07-06T06:30:59.942+01:00,sequence=2012,goal=Starts: 15th June Till 3rd July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2640";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:71:"FF:Bug verification and regression for the issues fixed in daily builds";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593492375;s:7:"updated";i:1593492382;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:107;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2639";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:64:"Application Update is causing a change in bootloader environment";s:11:"description";s:253:"After application update, bootloader environment is changing and it is setting ustate to Installed and increasing the revision number. This may cause firmware update failure after several application updates. 
Update in sw-description file is required.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591902656;s:7:"updated";i:1591957863;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:108;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2638";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:78:"Add the meif/scripts/ directory to meif installer. Install scripts based on OS";s:11:"description";s:292:"The scripts directory at meif/scripts/ needs to be added to the meif installer.

Moreover, the following scripts:

meif/scripts/docker-stack/generate-swu.sh needs to be installed on Linux host only.

meif/scripts/docker-stack/generate-swu.ps1 needs to be installed on Windows host only.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592189653;s:7:"updated";i:1592189660;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:109;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2636";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:96:"SWUPDATE is inconsistent with MEIF_CLOUD set to "all" and after reboot partition is not changing";s:11:"description";s:1347:"*Issue:*
----------
SWUpdate is not consistent with AWS and AZURE clouds when MEIF_CLOUD set to all or MEIF_CLOUD set to either "aws" or "azure"

*Installer:*
| OMNI | ftp://ftpnew.alm.mentorg.com/pub/omni/200525_0400/ |
| MEIF | ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200604-085527/outputs/ |

*Observations:*
|| MEIF_CLOUD || Cloud || SWUpdate-hawkbit || meif-swupdate || Swupdate status || Auto Reboot || Partition change || Error ||
| Set to all | Azure | NO | YES | SUCCESS | YES | No, again manual reboot is required to get partition change | - |
| Set to all | AWS | NO | YES | SUCCESS | YES | No, again manual reboot is required to get partition change | - |
| Set to all | Azure | YES | NO | NO UPDATE | - | - | Error getting IPC: Connection refused |
| Set to all | AWS | YES | NO | NO UPDATE | - | - | Error getting IPC: Connection refused |
| Set to azure | Azure | NO | YES | SUCCESS | YES | No, again manual reboot is required to get partition change | - |
| Set to aws | AWS | NO | YES | SUCCESS | YES | No, again manual reboot is required to get partition change | - |
| Set to azure | Azure | YES | NO | SUCCESS | YES | No, again manual reboot is required to get partition change | - |
| Set to aws | AWS | YES | NO | SUCCESS | YES | No, again manual reboot is required to get partition change | - |";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:14:"internal issue";a:1:{i:0;s:9:"MEIF-2633";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591964376;s:7:"updated";i:1592318875;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:110;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2635";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:85:"Document instruction for checking docker related option when using windows 10 as host";s:11:"description";s:370:"Add documentation as pointed out by [~ravia]  is the comment :https://jira.alm.mentorg.com/browse/CB-13170?focusedCommentId=712669&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-712669.
{code:java}
after setting "Expose daemon on tcp://localhost:2375 without TLS" in docker setting , project is getting Build properly in odebench {code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591775707;s:7:"updated";i:1591775712;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:111;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2634";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:119:"MEIF_CLOUD set to all,meif-agent-autostart ERROR "/etc/meif/swupdate/traceme-2020-06-09_10-45-51’: Permission denied"";s:11:"description";s:5943:"*Issue:*
-------------
Getting "/etc/meif/swupdate/traceme-2020-06-09_10-45-51’: Permission denied" after restarting meif-agent-autostart

Steps:
-----------
1) OMNI: ftp://ftpnew.alm.mentorg.com/pub/omni/200525_0400/
MEIF: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200604-085527/outputs/

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ~/all_cloud -m industrial-pc

6) Setup variables for all cloud in local.conf file
   
7) ./melomni-devshell.sh -b -d ~/all_cloud -t service-stick-image

8)Booted the target with service-stick-image

9)systemctl status meif-agent-autostart

10) make changes in meif.ini

11) systemctl restart meif-agent-autostart
Expected Output:
------------------------
meif-agent-autostart should not contain any errors

Actual Output:
------------------
Permission denied error in status log
{code}
root@allcloud:~# systemctl status meif-agent-autostart
● meif-agent-autostart.service - MEIF Agent Autostart Service
   Loaded: loaded (/lib/systemd/system/meif-agent-autostart.service; enabled; vendor preset: enabled)
   Active: active (running) since Tue 2020-06-09 10:45:51 IST; 8min ago
  Process: 2704 ExecStartPre=/usr/bin/meif-agent-autostart-config (code=exited, status=0/SUCCESS)
 Main PID: 2713 (meif-agent)
    Tasks: 24 (limit: 4412)
   Memory: 12.9M
   CGroup: /system.slice/meif-agent-autostart.service
           ├─2713 /usr/bin/meif-agent
           ├─2863 lttng-sessiond --daemonize
           ├─2864 lttng-runas --daemonize
           ├─2877 lttng-consumerd -u --consumerd-cmd-sock /tmp/.lttng/ustconsumerd64/command --consumerd-err-sock /tmp/.lttng/ustconsumerd64/error --group tracing
           └─2880 lttng-runas -u --consumerd-cmd-sock /tmp/.lttng/ustconsumerd64/command --consumerd-err-sock /tmp/.lttng/ustconsumerd64/error --group tracing

Jun 09 10:45:51 allcloud systemd[1]: Starting MEIF Agent Autostart Service...
Jun 09 10:45:51 allcloud systemd[1]: Started MEIF Agent Autostart Service.
Jun 09 10:45:51 allcloud meif-agent[2713]: mkdir: cannot create directory ‘/etc/meif/swupdate/traceme-2020-06-09_10-45-51’: Permission denied
Jun 09 10:45:51 allcloud meif-agent[2713]: touch: cannot touch '/etc/meif/swupdate/traceme-2020-06-09_10-45-51/traceme.log': No such file or directory
root@allcloud:~# 
root@allcloud:~# 
root@allcloud:~# 
root@allcloud:~# usermod -aG meif root
root@allcloud:~# 
root@allcloud:~# 
root@allcloud:~# systemctl status meif-agent-autostart
● meif-agent-autostart.service - MEIF Agent Autostart Service
   Loaded: loaded (/lib/systemd/system/meif-agent-autostart.service; enabled; vendor preset: enabled)
   Active: active (running) since Tue 2020-06-09 10:45:51 IST; 12min ago
  Process: 2704 ExecStartPre=/usr/bin/meif-agent-autostart-config (code=exited, status=0/SUCCESS)
 Main PID: 2713 (meif-agent)
    Tasks: 24 (limit: 4412)
   Memory: 12.9M
   CGroup: /system.slice/meif-agent-autostart.service
           ├─2713 /usr/bin/meif-agent
           ├─2863 lttng-sessiond --daemonize
           ├─2864 lttng-runas --daemonize
           ├─2877 lttng-consumerd -u --consumerd-cmd-sock /tmp/.lttng/ustconsumerd64/command --consumerd-err-sock /tmp/.lttng/ustconsumerd64/error --group tracing
           └─2880 lttng-runas -u --consumerd-cmd-sock /tmp/.lttng/ustconsumerd64/command --consumerd-err-sock /tmp/.lttng/ustconsumerd64/error --group tracing

Jun 09 10:45:51 allcloud systemd[1]: Starting MEIF Agent Autostart Service...
Jun 09 10:45:51 allcloud systemd[1]: Started MEIF Agent Autostart Service.
Jun 09 10:45:51 allcloud meif-agent[2713]: mkdir: cannot create directory ‘/etc/meif/swupdate/traceme-2020-06-09_10-45-51’: Permission denied
Jun 09 10:45:51 allcloud meif-agent[2713]: touch: cannot touch '/etc/meif/swupdate/traceme-2020-06-09_10-45-51/traceme.log': No such file or directory
root@allcloud:~# systemctl restart meif-agent-autostart
root@allcloud:~# systemctl status meif-agent-autostart
● meif-agent-autostart.service - MEIF Agent Autostart Service
   Loaded: loaded (/lib/systemd/system/meif-agent-autostart.service; enabled; vendor preset: enabled)
   Active: active (running) since Tue 2020-06-09 10:58:24 IST; 1s ago
  Process: 3203 ExecStartPre=/usr/bin/meif-agent-autostart-config (code=exited, status=0/SUCCESS)
 Main PID: 3208 (meif-agent)
    Tasks: 24 (limit: 4412)
   Memory: 10.8M
   CGroup: /system.slice/meif-agent-autostart.service
           ├─3208 /usr/bin/meif-agent
           ├─3358 lttng-sessiond --daemonize
           ├─3359 lttng-runas --daemonize
           ├─3372 lttng-consumerd -u --consumerd-cmd-sock /tmp/.lttng/ustconsumerd64/command --consumerd-err-sock /tmp/.lttng/ustconsumerd64/error --group tracing
           └─3375 lttng-runas -u --consumerd-cmd-sock /tmp/.lttng/ustconsumerd64/command --consumerd-err-sock /tmp/.lttng/ustconsumerd64/error --group tracing

Jun 09 10:58:24 allcloud systemd[1]: Starting MEIF Agent Autostart Service...
Jun 09 10:58:24 allcloud systemd[1]: Started MEIF Agent Autostart Service.
Jun 09 10:58:24 allcloud meif-agent[3208]: mkdir: cannot create directory ‘/etc/meif/swupdate/traceme-2020-06-09_10-58-24’: Permission denied
Jun 09 10:58:24 allcloud meif-agent[3208]: touch: cannot touch '/etc/meif/swupdate/traceme-2020-06-09_10-58-24/traceme.log': No such file or directory
root@allcloud:~# 
root@allcloud:~# 
root@allcloud:~# groups root
root : root meif
root@allcloud:~# 

{code}";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:9:"MEIF-2631";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1591684114;s:7:"updated";i:1592295828;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:112;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2633";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:67:"Firmware Updates is getting failed for MEIF when hawkbit is enabled";s:11:"description";s:151:"When hawkbit is enabled, swupdate-hawkbit service runs in which TMPDIR is not set but TMPDIR is set for meif agents due to which firmware update fails.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"customer issue";a:1:{i:0;s:9:"MEIF-2636";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591887691;s:7:"updated";i:1592199719;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:113;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2632";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:98:"Make Azure IoT Edge Configuration options available in MEIF Run Time Configuration file (meif.ini)";s:11:"description";s:544:"Azure IoT Edge Runtime Configuration is currently being done using meif-config. env. This can be shifted to meif.ini to have consistency among other cloud configuration options. Default configuration options will be available in meif-config.env while Runtime configuration changes will be done using meif.ini

Also After these changes we are rebooting the system. See if changes can be done without rebooting the system. Probably restarting meif-azure-edge-config service and iotedge service will be done.

Documentation update is required.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591627709;s:7:"updated";i:1591772072;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:114;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2631";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:72:"Getting permission denied error when running agent manually or autostart";s:11:"description";s:453:"following error is seen when agent is run automatically via service. same error appears when agent is run manually without sudo.
{code:java}
Jun 08 12:38:22 asaleem-ipc meif-agent[1099]: mkdir: cannot create directory ‘/etc/meif/swupdate/traceme-2020-06-08_12-38-22’: Permission denied
Jun 08 12:38:22 asaleem-ipc meif-agent[1099]: touch: cannot touch '/etc/meif/swupdate/traceme-2020-06-08_12-38-22/traceme.log': No such file or directory {code}";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:5:"fixes";a:1:{i:0;s:9:"MEIF-2634";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:25200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591607079;s:7:"updated";i:1591858859;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:115;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2628";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:38:"MEIF Host Tool User's Guide (sprint 8)";s:11:"description";s:161:"This ticket covers changes to the MHT tool documentation within MEIF 1.4 sprint 8. Previous versions of this document can be found on the older MEIF-2572 ticket.";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2572";}}s:2:"in";a:2:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2657";}s:12:"is Tested By";a:1:{i:0;s:9:"MEIF-2479";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592538473;s:7:"updated";i:1594024936;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:116;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2627";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:76:"Azure-edge certificates option needs to update in local.conf as per GS guide";s:11:"description";s:864:"Azure iot edge certificates variable needs to sync up with GS guide
*Current variable*
{code}
#MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_CERT ?= "gateway_certificate/certs/iot-edge-device-ca-MyEdgeDeviceCA-full-chain.cert.pem"
#MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_PVT_KEY ?= "gateway_certificate/private/iot-edge-device-ca-MyEdgeDeviceCA.key.pem"
#MEIF_AZURE_IOT_EDGE_GATEWAY_ROOT_CA ?= "gateway_certificate/certs/azure-iot-test-only.root.ca.cert.pem"

#MEIF_AZURE_IOT_EDGE_GATEWAY_CERTS_HOST_DIR ??= ""
{code}

*Needs to update as available in GS*
{code}
MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_CERT	"<name-of-dev-crt-file>"	
MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_PVT_KEY	"<name-of-pvt-key-file>"	
MEIF_AZURE_IOT_EDGE_GATEWAY_ROOT_CA	"<name-of-root-ca-file>"	

MEIF_AZURE_IOT_EDGE_GATEWAY_CERTS_HOST_DIR	"/mel-omni-os/<name-of-created-folder>"
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:3600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591601453;s:7:"updated";i:1592284170;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:117;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2626";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:71:"MHT doesn't have Application(.deb) option in Content type for Omni BSPs";s:11:"description";s:455:"We don't have Data and Application(.deb) options in the Content type for Omni BSPs but having those options for MEL BSPs. 

As per https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-PackagingUpdates we support Application(.deb) for Omni BSPs,so we should have Application(.deb) option in the Content type for Omni BSPs.

I am not sure whether we should have Data option for Omni BSP or not.
";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2657";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593444348;s:7:"updated";i:1594734748;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:118;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2625";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:101:"Incase of MEIF_CLOUD="all" , meif exposes no option at build time to configure which agent to autorun";s:11:"description";s:480:"Following comment also needs to be addressed:

https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide?focusedCommentId=189239997#comment-189239997
{code:java}
We need to add a note in "All Cloud Configurations" 
section like : When the image is built with MEIF_CLOUD=ALL and booted, 
only one agent starts automatically,by default azure agent starts,user 
can configure which one to start using meif.ini “MEIF_AUTOSTART_AGENT” 
option. {code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592189483;s:7:"updated";i:1592189489;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:119;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2624";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:89:"rename the "cloud" variable in meif.ini. it basically controls which agent to auto start.";s:11:"description";s:53:"it should be named something e.g MEIF_AUTOSTART_AGENT";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591774944;s:7:"updated";i:1591774969;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:16:"meif-1.4-qa-bugs";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:120;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@3654cde3[id=1843,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 9,startDate=2020-06-14T21:29:12.965+01:00,endDate=2020-07-05T09:29:00.000+01:00,completeDate=2020-07-05T17:26:57.684+01:00,sequence=1843,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2623";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:71:"License restriction on some of the indirectly referenced Java libraries";s:11:"description";s:1889:"We have some license obligations that needs further clearance work in the following libraries:

* JSR 374 (JSON Processing) API
* JSR 374 (JSON Processing) Default Provider
* Org.eclipse.paho.client.mqttv3

The following license restrictions must be fulfilled for this component:

|O: If you distribute your product on or accompanied by data carriers, you must include this text on the data carriers/leaflet: “Copyright © Siemens AG,[YYYY], and licensors. All rights reserved. Portions include Open Source Software. See ReadMe_OSS [ “Copyright © Siemens AG, [YYYY], and licensors. All rights reserved. Portions include Open Source Software. See ReadMe_OSS.txt for details.”]|Distribution||
|O: You must contact your Patent Strategy Manager to check the patentleft effect|Patent| 
|E: Verify if the classpath exception applies, otherwise GPL V2 must be fulfilled: If you link this library with independent modules to produce an executable, you may copy and distribute the resulting executable under terms of your choice, provided that you also meet, for each linked independent module, the terms and conditions of the license of that module. An independent module is a module which is not derived from or based on this library. []|Distribution| 
|O: You must contact your BU Rep. to check the copyleft effect|Distribution| 
|Ri: If Siemens sues contributors regarding Siemens patents, any patent license granted to Siemens for this component will automatically terminate|Patent| 
|O: You must make the source code of (L)GPL covered code, including build and install scripts, available either: 1: together with your product, or 2: by including a written offer in your ReadMe_OSS to deliver on physical media or 3: in such cases when you distribute the binaries solely on a website, it is sufficient to make the source code available on the same website|Distribution|";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-2231";}}}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593673032;s:7:"updated";i:1593761411;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:4:"risk";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:121;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2622";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:115:"MEIF_INSTALLATION_PATH and MEIF_AWS_IOT_CERTS_HOST_DIR should have default paths set instead of being empty string.";s:11:"description";s:174:"See if GSG needs updates after this change

another variable that needs to have some default value is pointed out in MEIF-2605 (i.e. MEIF_AZURE_IOT_EDGE_CONNECTION_STRING)";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:5:"fixes";a:1:{i:0;s:9:"MEIF-2605";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591768795;s:7:"updated";i:1591768804;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:122;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2614";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@782e2c09[id=2016,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 13,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2080,goal=Starts: 7th Sept till 25th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2621";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:49:"Prepare QA artefacts for MEIF_REF_DESIGN_1.4.0_QA";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1593420412;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:24:"meif_ref_design_1.4.0_qa";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:123;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2614";s:6:"sprint";a:1:{i:0;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2620";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:53:"Release doc verification for MEIF_REF_DESIGN_1.4.0_QA";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595611269;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:24:"meif_ref_design_1.4.0_qa";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:124;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2614";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2619";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:40:"RC QA cycle for MEIF_REF_DESIGN_1.4.0_QA";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594712413;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:24:"meif_ref_design_1.4.0_qa";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:125;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2614";s:6:"sprint";a:1:{i:0;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2618";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:31:"Regression cycle for MEIFMR-252";s:11:"description";s:139:"* Install,build and boot for Primary hosts(Debian 10 and Windows 10)
* Hawkbit,aws,azure-edge,cloud all testing
* other required features";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2721";}}}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:28800;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1596104176;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:24:"meif_ref_design_1.4.0_qa";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:126;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2614";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@67ebfbbc[id=2013,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 10,startDate=2020-07-06T06:38:36.945+01:00,endDate=2020-07-24T17:38:00.000+01:00,completeDate=2020-07-24T20:15:38.837+01:00,sequence=2014,goal=Starts: 6th July  Till 24th July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2617";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"Pre-FF QA cycle for MEIF_REF_DESIGN_1.4.0_QA";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595575758;s:7:"updated";i:1595836363;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:24:"meif_ref_design_1.4.0_qa";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:127;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2614";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@67ebfbbc[id=2013,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 10,startDate=2020-07-06T06:38:36.945+01:00,endDate=2020-07-24T17:38:00.000+01:00,completeDate=2020-07-24T20:15:38.837+01:00,sequence=2014,goal=Starts: 6th July  Till 24th July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2616";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:51:"Develop test cases for INDOSMR-532 (epic MEIF-2575)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595575611;s:7:"updated";i:1595836401;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:128;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2614";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@67ebfbbc[id=2013,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 10,startDate=2020-07-06T06:38:36.945+01:00,endDate=2020-07-24T17:38:00.000+01:00,completeDate=2020-07-24T20:15:38.837+01:00,sequence=2014,goal=Starts: 6th July  Till 24th July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2615";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:55:"Document Runtime Test plan for MEIF_REF_DESIGN_1.4.0_QA";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594713623;s:7:"updated";i:1595521202;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:24:"meif_ref_design_1.4.0_qa";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:129;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2614";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:24:"MEIF_REF_DESIGN_1.4.0_QA";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595611068;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:24:"meif_ref_design_1.4.0_qa";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:130;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2613";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:110:"Codebench Project build failed for AWS, Azure & Mindconnect cloud, ADE generated using MEIF_CLOUD set to "all"";s:11:"description";s:7937:"Issue:
------------
Cloud specific project demo build failed when ADE is generated using MEIF_CLOUD set to "all"

Steps:
-----------
1) Installer used:
OMNI: ftp://inpftp.ina.mentorg.com/pub/omni/200525_0400/omni-linux-x64-2.0.0.bin
MEIF:  ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200531-222207/outputs/meif-linux-x64-1.4.0.bin
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.
5)./melomni-devshell.sh -c -d ../../all_cloud -m industrial-pc
6)Set cloud variables
{code}
MEIF_CLOUD ??= "all"
MEIF_AWS_IOT_HOST_MQTT_ADDR ??= "ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com"
MEIF_AWS_IOT_CLIENT_MY_THING_NAME ??= "ravi_iot"
MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID ??= "ravi_iot"

MEIF_AWS_IOT_SECURITY_ROOT_CA_FILENAME ?= "aws-rootca.pem"
MEIF_AWS_IOT_SECURITY_CERTIFICATE_FILENAME ?= "aws-devcrt.pem"
MEIF_AWS_IOT_SECURITY_PRIVATE_KEY_FILENAME ?= "aws-prvkey.pem"
MEIF_AWS_IOT_CERT_DIR_HOST ?= "/mel-omni-os/security_keys/aws"
SWU_KEYS_PATH ?= "/mel-omni-os/swupdate_keys"

MEIF_AZURE_DEMO_DEVICE_ID ??= "meif14_dev1"
MEIF_AZURE_DEMO_HOSTNAME ??= "iothub-fafve.azure-devices.net"
MEIF_AZURE_DEMO_DEVICE_KEY ??= "mgKoiIf93uLJDp2ET2uSBgLzmf2idqRd7YDSTkytelQ="

MEIF_AZURE_IOT_EDGE_CONNECTION_STRING ??= "HostName=pbu-dev-iothub-franz.azure-devices.net;DeviceId=tester;SharedAccessKey=I+gZ7sJkeLN+bsjBGJCMSmh85BerTkMBs0u+ykodtO8="
MEIF_MINDSPHERE_SERVER_BASEURL ??= "https://southgate.eu1-b.mindsphere.io"
MEIF_MINDSPHERE_INITIAL_ACCESS_TOKEN ??= "eyJraWQiOiJrZXktaWQtMSIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJpc3MiOiJTQ0kiLCJzdWIiOiIxNjJhNWNkMmMzZTM0NTgxYjZhMDY2NWNiZDI4NjU5YyIsImF1ZCI6IkFJQU0iLCJpYXQiOjE1ODY5NDc2OTgsIm5iZiI6MTU4Njk0NzY5OCwiZXhwIjoxNTg3NTUyNDk4LCJqdGkiOiJiNzFlZTZmYi04MGUyLTQ4YjEtOWFiZC1hNGJmZTRkN2EyZGQiLCJzY29wZSI6IklBVCIsInRlbiI6Im1lbnRvciIsInRlbl9jdHgiOiJtYWluLXRlbmFudCIsImNsaWVudF9jcmVkZW50aWFsc19wcm9maWxlIjpbIlNIQVJFRF9TRUNSRVQiXSwic2NoZW1hcyI6WyJ1cm46c2llbWVuczptaW5kc3BoZXJlOnYxIl19.DvnblRk-h3sTL-aghq6n6kIA-_wptJpZ6KqAVSCeHt94IFphFmm4xCFOhjd__1W1c0sHE3iESTRq96ZABQ1mn_Rd3RiOiCSc9frobCBDBl-cAvGb9CgwLTGUnSY6puX8LfrmFUX0dwo20YhByDk3mQxKN5I9pwtgWBNBkKCX3TUqVV835xy-v7PRzvD9HCZg2tCxwTIUS1fHeOnujGsR2jpAlqpQrGDwZAKLvXqz19Yw-PIff5oqZMxMDHRHFtlpPoVuSRWwnHRz7tY5KSt8Wtj3iGHHJJqRfMJVhgUlTrLf2EowLijyNeHZzTcivpDx3F55KYYejfd7oM789byLFA"
MEIF_MINDSPHERE_TENANT ??= "mentor"

MEIF_DEMO_ENABLE_TRACING ??= "on"
MEIF_INSTALLATION_PATH ?= "/mel-omni-os/meif"
{code}

7) ./melomni-devshell.sh -b -d ../../all_cloud -t development-ade
8)./melomni-devshell.sh -b -d ../../all_cloud -t service-stick-image
9)Install ade in Codebench by following confluence description
https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-Building,Modifying,andDebuggingtheCloudApplicationinCodeBench

Expected result:
=============
Project Demo should get Build in codebench

Actual Output:
=============
Project Build is getting failed

*aws_demo*
{code}
02:47:56 **** Build of configuration Debug for project aws_demo ****
[Running in image <ade-development-ade-mel-omni-industrial-pc-2.0.1591009563-20200602023445:latest>]
make all 

[1] Invoking Pre-Build commands in the host:
--------------------------------------------

[2] Invoking Build commands in the container: 7e7ade6f791fc095efd07aeeb5611e529910cf750ef6eb29083c0bce0ea233d8 
---------------------------------------------
Building file: ../src/linux/aws_trace_hooks.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -I/ade/rootfs/usr/include/meif/framework/cloud/mindconnect/include -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -pthread -fcommon -MMD -MP -MF"src/linux/aws_trace_hooks.d" -MT"src/linux/aws_trace_hooks.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/aws_trace_hooks.o" "../src/linux/aws_trace_hooks.c"
In file included from /ade/rootfs/usr/include/meif.h:26,
                 from ../src/linux/aws_trace_hooks.c:25:
/ade/rootfs/usr/include/meif/meif_internal.h:46:10: fatal error: framework/cloud/azure/certs/certs.h: No such file or directory
 #include "framework/cloud/azure/certs/certs.h"
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compilation terminated.
make: *** [src/linux/subdir.mk:26: src/linux/aws_trace_hooks.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.

02:47:57 Build Failed. 2 errors, 0 warnings. (took 1s.196ms)
{code}
*Azure_demo*
{code}
02:59:08 **** Build of configuration Debug for project azure_demo ****
[Running in image <ade-development-ade-mel-omni-industrial-pc-2.0.1591009563-20200602023445:latest>]
make all 

[1] Invoking Pre-Build commands in the host:
--------------------------------------------

[2] Invoking Build commands in the container: 87fed067dc853f947e6f52b744cf6a2d20cb0cc02cb9d7871286e127b36e4e41 
---------------------------------------------
Building file: ../src/linux/azure_trace_hooks.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -I/ade/rootfs/usr/include/meif/framework/cloud/mindconnect/include -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -pthread -fcommon -MMD -MP -MF"src/linux/azure_trace_hooks.d" -MT"src/linux/azure_trace_hooks.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/azure_trace_hooks.o" "../src/linux/azure_trace_hooks.c"
In file included from /ade/rootfs/usr/include/meif.h:26,
                 from ../src/linux/azure_trace_hooks.c:24:
/ade/rootfs/usr/include/meif/meif_internal.h:46:10: fatal error: framework/cloud/azure/certs/certs.h: No such file or directory
 #include "framework/cloud/azure/certs/certs.h"
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compilation terminated.
make: *** [src/linux/subdir.mk:26: src/linux/azure_trace_hooks.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.

02:59:09 Build Failed. 2 errors, 0 warnings. (took 1s.64ms)
{code}
*Mindconnect_demo*
{code}
03:05:07 **** Build of configuration Debug for project mindconnect_demo ****
[Running in image <ade-development-ade-mel-omni-industrial-pc-2.0.1591009563-20200602023445:latest>]
make all 

[1] Invoking Pre-Build commands in the host:
--------------------------------------------

[2] Invoking Build commands in the container: 6ad5694a914e6a643a97479b95e3d0ecb75770f4bfe6c31ae8f585e3a47f36f5 
---------------------------------------------
Building file: ../src/linux/linux_mindconnect.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -I/ade/rootfs/usr/include/meif/framework/cloud/mindconnect/include -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -pthread -fcommon -MMD -MP -MF"src/linux/linux_mindconnect.d" -MT"src/linux/linux_mindconnect.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/linux_mindconnect.o" "../src/linux/linux_mindconnect.c"
In file included from /ade/rootfs/usr/include/meif.h:26,
                 from ../src/linux/linux_mindconnect.c:28:
/ade/rootfs/usr/include/meif/meif_internal.h:46:10: fatal error: framework/cloud/azure/certs/certs.h: No such file or directory
 #include "framework/cloud/azure/certs/certs.h"
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
compilation terminated.
make: *** [src/linux/subdir.mk:20: src/linux/linux_mindconnect.o] Er
{code}

*Error /Warning*
 !error_ade.JPG|thumbnail! ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591587714;s:7:"updated";i:1591697274;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:131;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2612";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:66:"Application Update is failing due to /tmp dir not being executable";s:11:"description";s:2380:"Application update is failing.
This is due to /tmp dir not being executable

We are using shellscripts to do application updates / data updates and according to https://sbabic.github.io/swupdate/sw-description.html#scripts

"Scripts
Scripts runs in the order they are put into the sw-description file. The result of a script is valuated by SWUpdate, that stops the update with an error if the result is <> 0.
They are copied into a temporary directory before execution and their name must be unique inside the same cpio archive."
Which is causing error

{code:java}
Jun 01 17:07:30 ehsaeed swupdate[2532]: [INFO ] : SWUPDATE running :  Installation in progress
Jun 01 17:07:30 ehsaeed swupdate[2532]: [ERROR] : SWUPDATE failed [0] ERROR core/pctl.c : run_system_cmd : 366 : sh: 1: /tmp/scripts/install-deb.sh.enc: Permission denied
Jun 01 17:07:30 ehsaeed swupdate[2532]: [TRACE] : SWUPDATE running :  [run_system_cmd] : /tmp/scripts/install-deb.sh.enc preinst  command returned 0
Jun 01 17:07:30 ehsaeed swupdate[2532]: [TRACE] : SWUPDATE running :  [install_single_image] : Found installer for stream meif_1.0_amd64.deb.enc rawfile
Jun 01 17:07:30 ehsaeed swupdate[2532]: [TRACE] : SWUPDATE running :  [install_raw_file] : Installing file meif_1.0_amd64.deb.enc on /etc/meif_1.0_amd64.deb
Jun 01 17:07:30 ehsaeed swupdate[2532]: [ERROR] : SWUPDATE failed [0] ERROR core/pctl.c : run_system_cmd : 366 : sh: 1: /tmp/scripts/install-deb.sh.enc: Permission denied
Jun 01 17:07:30 ehsaeed swupdate[2532]: [TRACE] : SWUPDATE running :  [run_system_cmd] : /tmp/scripts/install-deb.sh.enc postinst  command returned 126
Jun 01 17:07:30 ehsaeed swupdate[2532]: [ERROR] : SWUPDATE failed [0] ERROR core/installer.c : install_images : 367 : execute postinstall scripts failed
Jun 01 17:07:30 ehsaeed swupdate[2532]: [DEBUG] : SWUPDATE running :  [bootloader_env_set] : Setting recovery_status=failed in bootloader environment
{code}

Another minor bug is with sw-description filename
Getting the following  while creating application update
{code:java}
for i in $FILES;do echo $i;done | cpio -ov -H crc > application_update.swu
cpio: sw-description: Cannot stat: No such file or directory
cpio: sw-description.sig: Cannot stat: No such file or directory
meif_1.0_amd64.deb.enc
install-deb.sh.enc
{code}

The filename sw-description has spelling mistake.

";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591189888;s:7:"updated";i:1591253662;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:132;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2611";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"MEIF 1.4.0 User's and Reference Manual (Sprint 8)";s:11:"description";s:559:"Incorporate all changes required in the MEIF 1.4 User's and Reference manual.

Engineering content available here:

[https://confluence.alm.mentorg.com:8090/display/MEIF/MEIF-1.4+-+Getting+Started+Guide] [https://confluence.alm.mentorg.com:8090/display/MEIF/MEIF-1.4+-+User%27s+and+Reference+Manual]

Per revision reviews of the document are being tracked here: TO-BE-ADDED

(the changes being made under this ticket follow the documentation change process: [https://confluence.alm.mentorg.com/display/PS/MEIF+1.4+-+Documentation+Change+Management])";s:10:"issuelinks";a:1:{s:2:"in";a:3:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2643";}s:10:"relates to";a:1:{i:0;s:9:"MEIF-1921";}s:12:"is Tested By";a:1:{i:0;s:9:"MEIF-2479";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592223436;s:7:"updated";i:1592223436;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:133;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2610";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:43:"MEIF 1.4.0 Getting Started Guide (Sprint 8)";s:11:"description";s:513:"Incorporate all changes required in the MEIF 1.4 getting started guide.

Engineering content available here:

[https://confluence.alm.mentorg.com:8090/display/MEIF/MEIF-1.4+-+Getting+Started+Guide]

Per revision reviews of the document are being tracked here:

[https://confluence.alm.mentorg.com:8090/display/MEIF/Doc+Review]

(the changes being made under this ticket follow the documentation change process: [https://confluence.alm.mentorg.com/display/PS/MEIF+1.4+-+Documentation+Change+Management])";s:10:"issuelinks";a:2:{s:2:"in";a:2:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2642";}s:12:"is Tested By";a:1:{i:0;s:9:"MEIF-2479";}}s:3:"out";a:1:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-1919";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592201691;s:7:"updated";i:1592201691;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:134;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2609";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:47:"MEIF ADE is broken due to missing certs.h file.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591088043;s:7:"updated";i:1591088055;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:135;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2608";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:51:"Service-stick-image build failed in windows 10 host";s:11:"description";s:200586:"Issue:
------------
Build is failed in windows 10 host

Steps:
---------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200525_0400/omni-windows-x64-2.0.0.zip
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/outputs/meif-windows-x64-1.4.0.zip
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.
5) .\melomni-devshell.ps1 -c -d ..\..\aws -m industrial-pc

6) Set Aws variables in local.conf

7) .\melomni-devshell.ps1 -b -d ..\..\aws-t service-stick-image

Expected Output:
--------------
Build should get completed without any error

Actual Output:
---------------
Build is getting failed
{code}
PS C:\mgc\embedded\mel-omni-os\2> .\melomni-devshell.ps1 -b -d ..\..\aws -t service-stick-image
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-ade
    development-image
    service-stick-image
Parsing recipes: 100% |#######################################################################################################################################################| Time: 0:00:15
Parsing of 122 .bb files complete (0 cached, 122 parsed). 122 targets, 0 skipped, 1 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |####################################################################################################################################################| Time: 0:00:53
NOTE: No setscene tasks
NOTE: Executing Tasks
ERROR: meif-1.0-r0 do_dpkg_build: Error executing a python function in exec_python_func() autogenerated:

The stack trace of python calls that resulted in this exception/failure was:
File: 'exec_python_func() autogenerated', lineno: 2, function: <module>
     0001:
 *** 0002:do_dpkg_build(d)
     0003:
File: '/mel-omni-os/isar/meta/classes/dpkg-base.bbclass', lineno: 130, function: do_dpkg_build
     0126:python do_dpkg_build() {
     0127:    lock = bb.utils.lockfile(d.getVar("REPO_ISAR_DIR") + "/isar.lock",
     0128:                             shared=True)
     0129:    bb.build.exec_func("dpkg_do_mounts", d)
 *** 0130:    bb.build.exec_func("dpkg_runbuild", d)
     0131:    bb.build.exec_func("dpkg_undo_mounts", d)
     0132:    bb.utils.unlockfile(lock)
     0133:}
     0134:
File: '/mel-omni-os/isar/bitbake/lib/bb/build.py', lineno: 249, function: exec_func
     0245:    with bb.utils.fileslocked(lockfiles):
     0246:        if ispython:
     0247:            exec_func_python(func, d, runfile, cwd=adir)
     0248:        else:
 *** 0249:            exec_func_shell(func, d, runfile, cwd=adir)
     0250:
     0251:    try:
     0252:        curcwd = os.getcwd()
     0253:    except:
File: '/mel-omni-os/isar/bitbake/lib/bb/build.py', lineno: 450, function: exec_func_shell
     0446:    with open(fifopath, 'r+b', buffering=0) as fifo:
     0447:        try:
     0448:            bb.debug(2, "Executing shell function %s" % func)
     0449:            with open(os.devnull, 'r+') as stdin, logfile:
 *** 0450:                bb.process.run(cmd, shell=False, stdin=stdin, log=logfile, extrafiles=[(fifo,readfifo)])
     0451:        finally:
     0452:            os.unlink(fifopath)
     0453:
     0454:    bb.debug(2, "Shell function %s finished" % func)
File: '/mel-omni-os/isar/bitbake/lib/bb/process.py', lineno: 182, function: run
     0178:        if not stderr is None:
     0179:            stderr = stderr.decode("utf-8")
     0180:
     0181:    if pipe.returncode != 0:
 *** 0182:        raise ExecutionError(cmd, pipe.returncode, stdout, stderr)
     0183:    return stdout, stderr
Exception: bb.process.ExecutionError: Execution of '/home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/run.dpkg_runbuild.35790' failed with exit code 2:
dpkg-buildpackage: info: source package meif
dpkg-buildpackage: info: source version 1.0
dpkg-buildpackage: info: source distribution stable
dpkg-buildpackage: info: source changed by Fahad Arslan <fahad_arslan@mentor.com>
 dpkg-source -I --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean
   dh_testdir
   dh_auto_clean
   dh_clean
        rm -f debian/debhelper-build-stamp
        rm -rf debian/.debhelper/
        rm -f -- debian/meif.substvars debian/meif-lib.substvars debian/meif-dev.substvars debian/files
        rm -fr -- debian/meif/ debian/tmp/ debian/meif-lib/ debian/meif-dev/
        find .  \( \( \
                \( -path .\*/.git -o -path .\*/.svn -o -path .\*/.bzr -o -path .\*/.hg -o -path .\*/CVS -o -path .\*/.pc -o -path .\*/_darcs \) -prune -o -type f -a \
                \( -name '#*#' -o -name '.*~' -o -name '*~' -o -name DEADJOE \
                 -o -name '*.orig' -o -name '*.rej' -o -name '*.bak' \
                 -o -name '.*.orig' -o -name .*.rej -o -name '.SUMS' \
                 -o -name TAGS -o \( -path '*/.deps/*' -a -name '*.P' \) \
                \) -exec rm -f {} + \) -o \
                \( -type d -a -name autom4te.cache -prune -exec rm -rf {} + \) \)
 dpkg-source -I -b .
dpkg-source: warning: no source format specified in debian/source/format, see dpkg-source(1)
dpkg-source: warning: source directory 'meif' is not <sourcepackage>-<upstreamversion> 'meif-1.0'
dpkg-source: info: using source format '1.0'
dpkg-source: info: building meif in meif_1.0.tar.gz
dpkg-source: info: building meif in meif_1.0.dsc
 debian/rules build
dh build
   dh_testdir
   dh_update_autotools_config
   debian/rules override_dh_auto_configure
make[1]: Entering directory '/home/builder/meif/mel-omni-os/meif'
dh_auto_configure --    -DDEMO_ENABLE_TRACING=off    -DBUILD_VERBOSE=on    -DOS=linux    -DCLOUD=aws    -DLINUX_LIBDIR=    -DCMAKE_BUILD_TYPE=Debug        -DAWS_IOT_HOST_MQTT_ADDR=ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com     -DAWS_IOT_HOST_MQTT_PORT=8883     -DAWS_IOT_CLIENT_MQTT_CLIENT_ID=ravi_iot     -DAWS_IOT_CLIENT_MY_THING_NAME=ravi_iot     -DAWS_IOT_SECURITY_ROOT_CA_FILENAME=aws-rootca.pem     -DAWS_IOT_SECURITY_CERTIFICATE_FILENAME=aws-devcrt.pem     -DAWS_IOT_SECURITY_PRIVATE_KEY_FILENAME=aws-prvkey.pem     -DAWS_USE_THREADING=on     -DAWS_IOT_CERTS_DIR=/home/builder/meif     -DAWS_IOT_CERTS_TGT_DIR=/etc/ssl/certs     -DMEIF_AGENT_AUTOSTART=y    -DMEIF_AGENT_USES_SWUPDATE=yes    -DMEIF_PERSISTENT_DIRECTORY=/persistent/meif    -DMEIF_SOURCE=on    -DMEIF_DOCKER_AZURE_EDGE=off    -DMEIF_BUILD_USES_ISAR_SYSTEM=yes    -DMEIF_BASE_DISTRIBUTION=buster    -DMEIF_SWUPDATE_DEV_PACKAGE=libswupdate-ebg-dev    -DHWREVISION=industrial-pc:v1.0    -DLINUX_DISTRO=debian
        install -d obj-x86_64-linux-gnu
        cd obj-x86_64-linux-gnu && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=None -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_INSTALL_LOCALSTATEDIR=/var -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON "-GUnix Makefiles" -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu -DDEMO_ENABLE_TRACING=off -DBUILD_VERBOSE=on -DOS=linux -DCLOUD=aws -DLINUX_LIBDIR= -DCMAKE_BUILD_TYPE=Debug -DAWS_IOT_HOST_MQTT_ADDR=ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com -DAWS_IOT_HOST_MQTT_PORT=8883 -DAWS_IOT_CLIENT_MQTT_CLIENT_ID=ravi_iot -DAWS_IOT_CLIENT_MY_THING_NAME=ravi_iot -DAWS_IOT_SECURITY_ROOT_CA_FILENAME=aws-rootca.pem -DAWS_IOT_SECURITY_CERTIFICATE_FILENAME=aws-devcrt.pem -DAWS_IOT_SECURITY_PRIVATE_KEY_FILENAME=aws-prvkey.pem -DAWS_USE_THREADING=on -DAWS_IOT_CERTS_DIR=/home/builder/meif -DAWS_IOT_CERTS_TGT_DIR=/etc/ssl/certs -DMEIF_AGENT_AUTOSTART=y -DMEIF_AGENT_USES_SWUPDATE=yes -DMEIF_PERSISTENT_DIRECTORY=/persistent/meif -DMEIF_SOURCE=on -DMEIF_DOCKER_AZURE_EDGE=off -DMEIF_BUILD_USES_ISAR_SYSTEM=yes -DMEIF_BASE_DISTRIBUTION=buster -DMEIF_SWUPDATE_DEV_PACKAGE=libswupdate-ebg-dev -DHWREVISION=industrial-pc:v1.0 -DLINUX_DISTRO=debian ..
-- The C compiler identification is GNU 8.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
dummy.txt does not exist.
dummy.txt does not exist.
dummy.txt does not exist.
dummy.txt does not exist.
dummy.txt does not exist.
-- Configuring done
WARNING: Target "meif_docker_daemon" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
WARNING: Target "shadow_sample" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
WARNING: Target "shadow_sample_console_echo" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
WARNING: Target "subscribe_publish_library_sample" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
WARNING: Target "subscribe_publish_sample" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
WARNING: Target "aws_demo" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
-- Generating done
CMake Warning:
  Manually-specified variables were not used by the project:

    CMAKE_EXPORT_NO_PACKAGE_REGISTRY
    CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY
    CMAKE_INSTALL_LIBDIR
    CMAKE_INSTALL_LOCALSTATEDIR
    CMAKE_INSTALL_SYSCONFDIR


-- Build files have been written to: /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu
make[1]: Leaving directory '/home/builder/meif/mel-omni-os/meif'
   debian/rules override_dh_auto_build
make[1]: Entering directory '/home/builder/meif/mel-omni-os/meif'
dh_auto_build  --  aws_demo
        cd obj-x86_64-linux-gnu && make -j1 aws_demo
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -S/home/builder/meif/mel-omni-os/meif -B/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 aws_demo
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -S/home/builder/meif/mel-omni-os/meif -B/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles 62
make -f CMakeFiles/Makefile2 samples/aws/CMakeFiles/aws_demo.dir/all
make[4]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f CMakeFiles/meif.dir/build.make CMakeFiles/meif.dir/depend
make[5]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/builder/meif/mel-omni-os/meif /home/builder/meif/mel-omni-os/meif /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/meif.dir/DependInfo.cmake --color=
Scanning dependencies of target meif
make[5]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f CMakeFiles/meif.dir/build.make CMakeFiles/meif.dir/build
make[5]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
[  1%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_buffer.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_buffer.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_buffer.c
[  3%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_common.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_common.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_common.c
[  4%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_lite_client.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_lite_client.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_lite_client.c
[  6%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_meif_socket.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_meif_socket.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_meif_socket.c
[  8%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_parser.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_parser.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_parser.c
[  9%] Building C object CMakeFiles/meif.dir/framework/common/http/src/http_ssl.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/http/src/http_ssl.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_ssl.c
[ 11%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt.c
[ 12%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_addresses.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_addresses.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_addresses.c
[ 14%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_empty_tree.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_empty_tree.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_empty_tree.c
[ 16%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_overlay.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_overlay.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_overlay.c
[ 17%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_region.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_region.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_region.c
[ 19%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_ro.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_ro.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_ro.c
[ 20%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_rw.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_rw.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_rw.c
[ 22%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_strerror.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_strerror.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_strerror.c
[ 24%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_sw.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_sw.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_sw.c
[ 25%] Building C object CMakeFiles/meif.dir/framework/common/libfdt/fdt_wip.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/libfdt/fdt_wip.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_wip.c
[ 27%] Building C object CMakeFiles/meif.dir/framework/common/parson/parson.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/parson/parson.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/parson/parson.c
[ 29%] Building C object CMakeFiles/meif.dir/framework/common/utils/dict_container.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/dict_container.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/dict_container.c
[ 30%] Building C object CMakeFiles/meif.dir/framework/common/utils/downloader.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/downloader.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/downloader.c
[ 32%] Building C object CMakeFiles/meif.dir/framework/common/utils/inet_pton.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/inet_pton.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/inet_pton.c
[ 33%] Building C object CMakeFiles/meif.dir/framework/common/utils/utf8_decode.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/utf8_decode.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/utf8_decode.c
[ 35%] Building C object CMakeFiles/meif.dir/framework/common/utils/util_str.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/util_str.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/util_str.c
[ 37%] Building C object CMakeFiles/meif.dir/framework/common/utils/util_uri.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/common/utils/util_uri.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/common/utils/util_uri.c
[ 38%] Building C object CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/devcmd_svcs/devcmd.c
/home/builder/meif/mel-omni-os/meif/framework/services/devcmd_svcs/devcmd.c: In function 'DEVCMD_Get_Next':
/home/builder/meif/mel-omni-os/meif/framework/services/devcmd_svcs/devcmd.c:428:19: warning: assignment discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
             *tags = cmd->tags;
                   ^
[ 40%] Building C object CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/devcmd_svcs/devcmd_list.c
[ 41%] Building C object CMakeFiles/meif.dir/framework/services/devcmd_svcs/linux/linux_devcmd.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/devcmd_svcs/linux/linux_devcmd.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/devcmd_svcs/linux/linux_devcmd.c
[ 43%] Building C object CMakeFiles/meif.dir/framework/services/trace_svcs/trace_cmds.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/trace_svcs/trace_cmds.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/trace_cmds.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/trace_cmds.c:22:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:33: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/trace_cmds.c:22:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:35: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:37,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/trace_cmds.c:22:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 45%] Building C object CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_agent.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_agent.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.c:45:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:33: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.c:45:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:35: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:37,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.c:45:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 46%] Building C object CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_cmds.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_cmds.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_cmds.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_cmds.c:26:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:33: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_cmds.c:26:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:35: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:37,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_cmds.c:26:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 48%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_file.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_file.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_file.c
[ 50%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_locks.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_locks.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_locks.c
[ 51%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_memory.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_memory.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_memory.c
[ 53%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_system.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_system.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_system.c
/home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_system.c: In function 'env_reboot':
/home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_system.c:202:5: warning: ignoring return value of 'system', declared with attribute warn_unused_result [-Wunused-result]
     system("sudo systemctl reboot");
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[ 54%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_thread.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_thread.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_thread.c
[ 56%] Building C object CMakeFiles/meif.dir/framework/env/linux/linux_env_time.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/env/linux/linux_env_time.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/env/linux/linux_env_time.c
[ 58%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/external_libs/jsmn/jsmn.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/external_libs/jsmn/jsmn.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn/jsmn.c
[ 59%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/threads_meif_wrapper.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/threads_meif_wrapper.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif/threads_meif_wrapper.c
[ 61%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/timer_meif_wrapper.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/timer_meif_wrapper.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif/timer_meif_wrapper.c
[ 62%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_interface.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_interface.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_jobs_interface.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_jobs_interface.h:37,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_jobs_interface.c:16:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 64%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_json.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_json.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_jobs_json.c
[ 66%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_topics.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_topics.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_jobs_topics.c
[ 67%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_types.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_types.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_jobs_types.c
[ 69%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_json_utils.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_json_utils.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_json_utils.c
[ 70%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client.c:45:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 72%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_common_internal.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_common_internal.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_common_internal.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_common_internal.c:43:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 74%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_connect.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_connect.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_connect.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_connect.c:44:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 75%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_publish.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_publish.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_publish.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h:51,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_publish.c:43:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 77%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_subscribe.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_subscribe.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_subscribe.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h:51,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_subscribe.c:42:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 79%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_unsubscribe.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_unsubscribe.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_unsubscribe.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h:51,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_unsubscribe.c:42:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 80%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_yield.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_yield.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_yield.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h:51,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_mqtt_client_yield.c:42:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 82%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow.c:26:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 83%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_actions.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_actions.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow_actions.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_shadow_interface.h:40,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_shadow_actions.h:23,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow_actions.c:25:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 85%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_json.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_json.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow_json.c
[ 87%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_records.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_records.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow_records.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_shadow_interface.h:40,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_shadow_records.h:25,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/aws_iot_shadow_records.c:25:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 88%] Building C object CMakeFiles/meif.dir/framework/cloud/aws/platform/linux/mbedtls/network_mbedtls_wrapper.c.o
/usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -Dmeif_EXPORTS -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fPIC   -std=gnu99 -o CMakeFiles/meif.dir/framework/cloud/aws/platform/linux/mbedtls/network_mbedtls_wrapper.c.o   -c /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls/network_mbedtls_wrapper.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls/network_mbedtls_wrapper.c:23:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 90%] Linking C shared library build/Debug/libmeif.so
/usr/bin/cmake -E cmake_link_script CMakeFiles/meif.dir/link.txt --verbose=1
/usr/bin/cc -fPIC -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -Wl,-z,relro -shared -Wl,-soname,libmeif.so -o build/Debug/libmeif.so CMakeFiles/meif.dir/framework/common/http/src/http_buffer.c.o CMakeFiles/meif.dir/framework/common/http/src/http_common.c.o CMakeFiles/meif.dir/framework/common/http/src/http_lite_client.c.o CMakeFiles/meif.dir/framework/common/http/src/http_meif_socket.c.o CMakeFiles/meif.dir/framework/common/http/src/http_parser.c.o CMakeFiles/meif.dir/framework/common/http/src/http_ssl.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_addresses.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_empty_tree.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_overlay.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_region.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_ro.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_rw.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_strerror.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_sw.c.o CMakeFiles/meif.dir/framework/common/libfdt/fdt_wip.c.o CMakeFiles/meif.dir/framework/common/parson/parson.c.o CMakeFiles/meif.dir/framework/common/utils/dict_container.c.o CMakeFiles/meif.dir/framework/common/utils/downloader.c.o CMakeFiles/meif.dir/framework/common/utils/inet_pton.c.o CMakeFiles/meif.dir/framework/common/utils/utf8_decode.c.o CMakeFiles/meif.dir/framework/common/utils/util_str.c.o CMakeFiles/meif.dir/framework/common/utils/util_uri.c.o CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd.c.o CMakeFiles/meif.dir/framework/services/devcmd_svcs/devcmd_list.c.o CMakeFiles/meif.dir/framework/services/devcmd_svcs/linux/linux_devcmd.c.o CMakeFiles/meif.dir/framework/services/trace_svcs/trace_cmds.c.o CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_agent.c.o CMakeFiles/meif.dir/framework/services/trace_svcs/linux/linux_trace_cmds.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_file.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_locks.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_memory.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_system.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_thread.c.o CMakeFiles/meif.dir/framework/env/linux/linux_env_time.c.o CMakeFiles/meif.dir/framework/cloud/aws/external_libs/jsmn/jsmn.c.o CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/threads_meif_wrapper.c.o CMakeFiles/meif.dir/framework/cloud/aws/platform/meif/timer_meif_wrapper.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_interface.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_json.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_topics.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_jobs_types.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_json_utils.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_common_internal.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_connect.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_publish.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_subscribe.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_unsubscribe.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_mqtt_client_yield.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_actions.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_json.c.o CMakeFiles/meif.dir/framework/cloud/aws/src/aws_iot_shadow_records.c.o CMakeFiles/meif.dir/framework/cloud/aws/platform/linux/mbedtls/network_mbedtls_wrapper.c.o
make[5]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
[ 90%] Built target meif
make -f samples/aws/CMakeFiles/aws_demo.dir/build.make samples/aws/CMakeFiles/aws_demo.dir/depend
make[5]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/builder/meif/mel-omni-os/meif /home/builder/meif/mel-omni-os/meif/samples/aws /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws/CMakeFiles/aws_demo.dir/DependInfo.cmake --color=
Scanning dependencies of target aws_demo
make[5]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f samples/aws/CMakeFiles/aws_demo.dir/build.make samples/aws/CMakeFiles/aws_demo.dir/build
make[5]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
[ 91%] Building C object samples/aws/CMakeFiles/aws_demo.dir/aws.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g   -std=gnu99 -o CMakeFiles/aws_demo.dir/aws.c.o   -c /home/builder/meif/mel-omni-os/meif/samples/aws/aws.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws.c:42:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:33: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws.c:42:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:35: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:37,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws.c:42:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 93%] Building C object samples/aws/CMakeFiles/aws_demo.dir/aws_devcmds.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g   -std=gnu99 -o CMakeFiles/aws_demo.dir/aws_devcmds.c.o   -c /home/builder/meif/mel-omni-os/meif/samples/aws/aws_devcmds.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws_devcmds.c:24:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:33: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws_devcmds.c:24:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:35: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:37,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/aws_devcmds.c:24:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 95%] Building C object samples/aws/CMakeFiles/aws_demo.dir/linux/aws_trace_hooks.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g   -std=gnu99 -o CMakeFiles/aws_demo.dir/linux/aws_trace_hooks.c.o   -c /home/builder/meif/mel-omni-os/meif/samples/aws/linux/aws_trace_hooks.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/aws_trace_hooks.c:25:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:33: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/aws_trace_hooks.c:25:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:35: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:37,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/aws_trace_hooks.c:25:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
[ 96%] Building C object samples/aws/CMakeFiles/aws_demo.dir/linux/linux_aws.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g   -std=gnu99 -o CMakeFiles/aws_demo.dir/linux/linux_aws.c.o   -c /home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:31:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:33: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:22,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:31:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:35: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/../platform/linux/mbedtls/network_platform.h:21,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/network_interface.h:44,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h:57,
                 from /home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h:55,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_internal.h:37,
                 from /home/builder/meif/mel-omni-os/meif/framework/include/meif.h:26,
                 from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:31:
/usr/include/mbedtls/net.h:30:2: warning: #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h" [-Wcpp]
 #warning "Deprecated header file: Superseded by mbedtls/net_sockets.h"
  ^~~~~~~
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'aws_get_mem_total':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:395:31: warning: format '%u' expects argument of type 'unsigned int', but argument 4 has type 'uint64_t' {aka 'long unsigned int'} [-Wformat=]
     snprintf(buf, buf_size, "%u kB", value);
                              ~^      ~~~~~
                              %lu
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'aws_get_swap_total':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:402:31: warning: format '%u' expects argument of type 'unsigned int', but argument 4 has type 'uint64_t' {aka 'long unsigned int'} [-Wformat=]
     snprintf(buf, buf_size, "%u kB", value);
                              ~^      ~~~~~
                              %lu
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'main':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:445:49: warning: format '%lu' expects argument of type 'long unsigned int', but argument 3 has type 'int' [-Wformat=]
         printf("\r\nError: \'%s\' larger than %lu\r\n", app_name, ENV_MAX_PATH);
                                               ~~^
                                               %u
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'aws_get_cpu_usage':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:338:5: warning: ignoring return value of 'fscanf', declared with attribute warn_unused_result [-Wunused-result]
     fscanf(f, "%s %" SCNu64 "%" SCNu64 "%" SCNu64 "%" SCNu64, cpu, &user, &nice, &sys, &idle);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'get_from_meminfo':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:362:9: warning: ignoring return value of 'fgets', declared with attribute warn_unused_result [-Wunused-result]
         fgets(buf, 100, f);
         ^~~~~~~~~~~~~~~~~~
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:365:5: warning: ignoring return value of 'fscanf', declared with attribute warn_unused_result [-Wunused-result]
     fscanf(f, "%s %" SCNu64, buf, value);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c: In function 'main':
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:454:9: warning: ignoring return value of 'fscanf', declared with attribute warn_unused_result [-Wunused-result]
         fscanf(pid_file, "%d", &agent_pid);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/builder/meif/mel-omni-os/meif/samples/aws/linux/linux_aws.c:608:5: warning: ignoring return value of 'chdir', declared with attribute warn_unused_result [-Wunused-result]
     chdir("/run/media/persistent");
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[ 98%] Building C object samples/aws/CMakeFiles/aws_demo.dir/linux/swupdate_ipc.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cc -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX -I/home/builder/meif/mel-omni-os/meif -I/home/builder/meif/mel-omni-os/meif/framework/include -I/home/builder/meif/mel-omni-os/meif/framework/common/libfdt -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls -I/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g   -std=gnu99 -o CMakeFiles/aws_demo.dir/linux/swupdate_ipc.c.o   -c /home/builder/meif/mel-omni-os/meif/samples/aws/linux/swupdate_ipc.c
In file included from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/swupdate_ipc.c:18:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:33: warning: "MEIF_OS_LINUX" redefined
 #define MEIF_OS_LINUX

<command-line>: note: this is the location of the previous definition
In file included from /home/builder/meif/mel-omni-os/meif/samples/aws/linux/swupdate_ipc.c:18:
/home/builder/meif/mel-omni-os/meif/framework/include/meif/meif_cfg.h:35: warning: "MEIF_BUILD" redefined
 #define MEIF_BUILD

<command-line>: note: this is the location of the previous definition
[100%] Linking C executable ../../build/Debug/aws-agent
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/cmake -E cmake_link_script CMakeFiles/aws_demo.dir/link.txt --verbose=1
/usr/bin/cc -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -Wl,-z,relro CMakeFiles/aws_demo.dir/aws.c.o CMakeFiles/aws_demo.dir/aws_devcmds.c.o CMakeFiles/aws_demo.dir/linux/aws_trace_hooks.c.o CMakeFiles/aws_demo.dir/linux/linux_aws.c.o CMakeFiles/aws_demo.dir/linux/swupdate_ipc.c.o  -o ../../build/Debug/aws-agent -Wl,-rpath,/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/build/Debug: -Wl,--build-id -Wl,--start-group -lmbedtls -lmbedcrypto -lmbedx509 -ldl -lpthread -lcurl -lswupdate ../../build/Debug/libmeif.so -lgcc -lc -lg -lm -lstdc++ -Wl,--end-group
Generating aws-agent.bin file
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/samples/aws && /usr/bin/objcopy -O binary /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/build/Debug/aws-agent /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/build/Debug/aws-agent.bin
make[5]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
[100%] Built target aws_demo
make[4]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -E cmake_progress_start /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles 0
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make[1]: Leaving directory '/home/builder/meif/mel-omni-os/meif'
   dh_auto_test
 fakeroot debian/rules binary
dh binary
   dh_testroot
   dh_prep
        rm -f -- debian/meif.substvars debian/meif-lib.substvars debian/meif-dev.substvars
        rm -fr -- debian/.debhelper/generated/meif/ debian/meif/ debian/tmp/ debian/.debhelper/generated/meif-lib/ debian/meif-lib/ debian/.debhelper/generated/meif-dev/ debian/meif-dev/
   dh_installdirs
        install -d debian/meif
        install -d debian/meif-lib
        install -d debian/meif-dev
   dh_auto_install
        cd obj-x86_64-linux-gnu && make -j1 install DESTDIR=/home/builder/meif/mel-omni-os/meif/debian/tmp AM_UPDATE_INFO_DIR=no
make[1]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -S/home/builder/meif/mel-omni-os/meif -B/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/progress.marks
make -f CMakeFiles/Makefile2 all
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f CMakeFiles/meif.dir/build.make CMakeFiles/meif.dir/depend
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/builder/meif/mel-omni-os/meif /home/builder/meif/mel-omni-os/meif /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/meif.dir/DependInfo.cmake --color=
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f CMakeFiles/meif.dir/build.make CMakeFiles/meif.dir/build
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make[3]: Nothing to be done for 'CMakeFiles/meif.dir/build'.
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
[100%] Built target meif
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -E cmake_progress_start /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles 0
make -f CMakeFiles/Makefile2 preinstall
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make[2]: Nothing to be done for 'preinstall'.
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
Install the project...
/usr/bin/cmake -P cmake_install.cmake
-- Install configuration: "Debug"
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/lib/libmeif.so
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/docker/meifdockerdaemon/meif_docker_daemon.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/external_libs/jsmn/jsmn.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_json.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_topics.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_json_utils.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_log.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_actions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_json.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_json_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_key.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_records.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_version.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_lib_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_target_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/network_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/threads_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/timer_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/platform/linux/common/timer_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/platform/linux/mbedtls/network_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/platform/linux/pthread/threads_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/platform/meif/threads_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/platform/meif/timer_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/platform/meif/wolfssl/network_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/samples/linux/jobs_sample/aws_iot_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/tests/integration/include/aws_iot_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/tests/integration/include/aws_iot_integ_tests_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/tests/integration/include/aws_iot_test_integration_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/tests/unit/include/aws_iot_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/tests/unit/include/aws_iot_tests_unit_helper_functions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/tests/unit/include/aws_iot_tests_unit_shadow_helper.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/tests/unit/tls_mock/aws_iot_tests_unit_mock_tls_params.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/tests/unit/tls_mock/network_platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/adapters/esp8266_mock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/adapters/linux_time.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/agenttime.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/azure_base32.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/azure_base64.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/buffer_.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/condition.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/connection_string_parser.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/consolelogger.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/const_defines.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/constbuffer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/constbuffer_array.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/constbuffer_array_batcher.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/constmap.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/crt_abstractions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/dns_resolver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/doublylinkedlist.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/envvariable.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/etwlogger_driver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/gb_rand.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/gb_stdio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/gb_time.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/gballoc.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/gbnetwork.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/hmac.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/hmacsha256.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/http_proxy_io.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/httpapi.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/httpapiex.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/httpapiexsas.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/httpheaders.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/lock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/logging_stacktrace.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/map.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/memory_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/optimize_size.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/optionhandler.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/platform.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/refcount.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/sastoken.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/sha-private.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/sha.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/shared_util_options.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/singlylinkedlist.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/socketio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/srw_lock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/stdint_ce6.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/string_token.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/string_tokenizer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/string_tokenizer_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/string_utils.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/strings.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/strings_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tcpsocketconnection_c.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/threadapi.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tickcounter.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/timer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_bearssl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_cyclonessl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_cyclonessl_socket.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_mbedtls.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_openssl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_options.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_schannel.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio_wolfssl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/uniqueid.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/urlencode.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/utf8_checker.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/uuid.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/uws_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/uws_frame_encoder.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/vector.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/vector_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/vector_types_internal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/ws_url.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/wsio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/x509_openssl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/x509_schannel.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/xio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/xlogging.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/pal/generic/refcount_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/pal/inc/sntp.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/pal/inc/socket_async.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/pal/ios-osx/socket_async_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/pal/ios-osx/tlsio_appleios.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/pal/linux/refcount_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/pal/linux/socket_async_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/pal/lwip/sntp_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/pal/mbed_os5/refcount_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/pal/windows/refcount_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/pal/windows/socket_async_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/dns_resolver_ut/win32_fake_linux/socket_async_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_constbuffer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_constbuffer_array.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_constbuffer_array_renames.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_constbuffer_renames.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_map.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_memory_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_memory_data_renames.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_string_tokenizer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/real_test_files/real_strings.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/refcount_ut/some_refcount_impl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/socket_async_ut/keep_alive.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/socket_async_ut/test_defines.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/socket_async_ut/win32_fake_linux/socket_async_os.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/template_ut/target/callee.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/template_ut/target/target.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/tickcounter_freertos_ut/freertos/FreeRTOS.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/tickcounter_freertos_ut/freertos/task.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/tlsio_options_ut/gballoc_ut_impl_1.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/tests/tlsio_options_ut/gballoc_ut_impl_2.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/ctest/inc/aux_inc/inttypes.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/ctest/inc/aux_inc/stdbool.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/ctest/inc/aux_inc/stdint.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/ctest/inc/ctest.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/ctest/inc/ctest_windows.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/globalmock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromockcallmacros.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromockcharstararenullterminatedstrings.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromockcommon.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromockenumtostring.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromockexception.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromocktestmutex.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/micromocktestrunnerhooks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockcallargument.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockcallargumentbase.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockcallcomparer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockcallrecorder.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockmethodcall.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockmethodcallbase.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockresultvalue.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockvalue.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/mockvaluebase.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/nicecallcomparer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/runtimemock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/stdafx.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/strictorderedcallcomparer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/strictunorderedcallcomparer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/targetver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/threadsafeglobalmock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/timediscretemicromock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/inc/timediscretemicromockcallmacros.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/tools/micromockgenerator/stdafx.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/tools/micromockgenerator/targetver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/hypothetic_module.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/hypothetic_module_interfaces.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/resource.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/stdafx.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/stdafx_c.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/micromock/unittests/micromocktest/targetver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/sal/inc/no_sal2.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/sal/inc/sal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/testrunner/inc/ctrs_sprintf.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/testrunner/inc/testmutex.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/c-utility/testtools/testrunner/inc/testrunnerswitcher.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/certs/certs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/blob.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_authorization.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_diagnostic.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_edge.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_hsm_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_ll_uploadtoblob.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_private.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_client_retry_control.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_internal_consts.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothub_transport_ll_private.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_cbs_auth.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_connection.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_device.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_messenger.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_telemetry_messenger.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_amqp_twin_messenger.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransport_mqtt_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/iothubtransportamqp_methods.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/message_queue.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/internal/uamqp_messaging.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_core.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_core_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_core_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_options.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_client_version.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_device_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_device_client_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_message.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_module_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_module_client_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothub_transport_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothubtransportamqp.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothubtransportamqp_websockets.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothubtransporthttp.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothubtransportmqtt.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/inc/iothubtransportmqtt_websockets.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_client_sample_module_filter/iothub_client_sample_module_filter.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_client_sample_module_method_invoke/iothub_client_sample_module_method_invoke.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_client_sample_module_sender/iothub_client_sample_module_sender.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_client_sample_mqtt_dm/iothub_client_sample_mqtt_dm.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_client_sample_mqtt_esp8266/iothub_client_sample_mqtt_esp8266.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/samples/iothub_ll_client_sample_amqp_shared/iothub_ll_client_sample_amqp_shared.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/common_device_method_e2e/iothubclient_common_device_method_e2e.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/common_dt_e2e/iothubclient_common_dt_e2e.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/common_e2e/iothubclient_common_e2e.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/common_longhaul/iothub_client_common_longhaul.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/common_longhaul/iothub_client_statistics.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/iothubtransport_mqtt_common_ut/real_constbuffer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/iothubtransportmqtt_ut/real_constbuffer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_amqp_c2d/longhaul_amqp_c2d.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_amqp_device_methods/longhaul_amqp_device_methods.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_amqp_device_twin_desired/longhaul_amqp_device_twin_desired.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_amqp_device_twin_reported/longhaul_amqp_device_twin_reported.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_amqp_telemetry/longhaul_amqp_telemetry.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_mqtt_c2d/longhaul_mqtt_c2d.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_mqtt_device_methods/longhaul_mqtt_device_methods.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_mqtt_device_twin_desired/longhaul_mqtt_device_twin_desired.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_mqtt_device_twin_reported/longhaul_mqtt_device_twin_reported.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_client/tests/longhaul_mqtt_telemetry/longhaul_mqtt_telemetry.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_deviceconfiguration.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_devicemethod.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_devicetwin.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_messaging.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_messaging_ll.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_registrymanager.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_sc_version.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/iothub_service_client/inc/iothub_service_client_auth.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/adapters/hsm_client_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/adapters/hsm_client_http_edge.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/adapters/hsm_client_key.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/adapters/hsm_client_riot.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/adapters/hsm_client_tpm.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/iothub_auth_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/prov_auth_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/prov_sasl_tpm.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/prov_transport_amqp_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/prov_transport_mqtt_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/internal/prov_transport_private.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/iothub_security_factory.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_client_const.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_device_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_device_ll_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_edge_trusted_certificates.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_security_factory.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport_amqp_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport_amqp_ws_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport_http_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport_mqtt_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/inc/azure_prov_client/prov_transport_mqtt_ws_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/tests/common_prov_e2e/common_prov_e2e.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/tests/common_prov_e2e/prov_hsm/symm_key.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/tests/common_prov_e2e/prov_hsm/tpm_msr.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_client/tests/common_prov_e2e/prov_hsm/x509_info.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_attestation_mechanism.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_bulk_operation.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_device_capabilities.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_device_registration_state.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_enrollment.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_json_const.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_models.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_models_serializer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_query.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_shared_helpers.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_tpm_attestation.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_twin.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_sc_x509_attestation.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/provisioning_service_client/inc/prov_service_client/provisioning_service_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/agenttypesystem.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/codefirst.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/commanddecoder.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/datamarshaller.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/datapublisher.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/dataserializer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/iotdevice.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/jsondecoder.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/jsonencoder.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/methodreturn.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/multitree.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/schema.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/schemalib.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/schemaserializer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/samples/devicemethod_simplesample/devicemethod_simplesample.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/samples/devicetwin_simplesample/devicetwin_simplesample.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/samples/remote_monitoring/remote_monitoring.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_amqp/simplesample_amqp.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/simplesample_http.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/tirtos/cc3200/Board.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/tirtos/cc3200/CC3200_LAUNCHXL.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/tirtos/cc3200/UARTUtils.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/tirtos/cc3200/pin_mux_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_http/tirtos/cc3200/wificonfig.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/samples/simplesample_mqtt/simplesample_mqtt.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/tests/codefirst_cpp_ut/c_bool_size.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/tests/codefirst_ut/c_bool_size.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/tests/datamarshaller_ut/real_agenttypesystem.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/tests/serializer_dt_ut/real_crt_abstractions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/tests/serializer_dt_ut/real_vector.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/serializer/tests/serializer_e2e/MacroE2EModelAction.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/testtools/iothub_test/inc/iothub_account.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/testtools/iothub_test/inc/iothubtest.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/testtools/real_test_files/inc/real_parson.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_accepted.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_address_string.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_amqp_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_amqp_sequence.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_amqp_value.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_annotations.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_application_properties.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_attach.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_begin.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_close.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_connection_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_delivery_annotations.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_delivery_number.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_delivery_tag.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_detach.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_disposition.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_end.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_fields.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_filter_set.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_flow.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_footer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_handle.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_header.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_ietf_language_tag.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_link_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_annotations.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_format.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_id_binary.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_id_string.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_id_ulong.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_message_id_uuid.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_milliseconds.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_modified.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_node_properties.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_open.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_properties.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_received.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_receiver_settle_mode.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_rejected.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_released.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_role.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_challenge.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_code.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_init.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_mechanisms.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_outcome.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sasl_response.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_seconds.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sender_settle_mode.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_sequence_no.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_session_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_source.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_target.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_terminus_durability.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_terminus_expiry_policy.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_transfer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_definitions_transfer_number.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_frame_codec.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_management.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqp_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqpvalue.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/amqpvalue_to_string.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/async_operation.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/cbs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/connection.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/frame_codec.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/header_detect_io.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/link.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/message.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/message_receiver.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/message_sender.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/messaging.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_anonymous.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_frame_codec.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_mechanism.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_mssbcbs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_plain.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_server_io.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/sasl_server_mechanism.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/saslclientio.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/server_protocol_io.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/session.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/socket_listener.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/inc/azure_uamqp_c/uamqp.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/samples/local_server_tls_sample/tls_server_io.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/uamqp/samples/websockets_sample/iothub_certs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/umqtt/inc/azure_umqtt_c/mqtt_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/umqtt/inc/azure_umqtt_c/mqtt_codec.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/umqtt/inc/azure_umqtt_c/mqtt_message.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/umqtt/inc/azure_umqtt_c/mqttconst.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/azure/umqtt/samples/mqtt_client_sample/mqtt_client_sample.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/hawkbit/hawkbit.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/hawkbit/hawkbit_api.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/examples/callbacks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/examples/critical_section.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_communication.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_config_setup.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_configuration.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_custom_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_data_source_configuration.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_event.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_json_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_list.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_log_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_random.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_store.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_stream_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl_time_series.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/include/mcl/meif_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/lib/cJSON/cJSON.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/lib/zf_log/zf_log.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/base64.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/communication.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/configuration.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/custom_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/data_source_configuration.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/data_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/definitions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/event.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/event_list.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/file.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/file_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/hmac.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/http_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/http_client_libcurl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/http_client_nucleus.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/http_definitions.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/http_processor.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/http_request.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/http_response.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/json.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/json_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/jwt.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/list.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/log_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/memory.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/random.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/security.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/security_handler.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/security_libcrypto.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/storage.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/store.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/stream_data.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/string_array.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/string_type.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/string_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/time_series.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/src/time_util.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/test/lib/CMock/src/cmock.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/test/lib/CMock/src/cmock_internals.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/test/lib/CMock/vendor/unity/src/unity.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/mindconnect/test/lib/CMock/vendor/unity/src/unity_internals.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/http/http_lite.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/http/http_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/http/inc/http_buffer.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/http/inc/http_common.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/http/inc/http_defs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/http/inc/http_lite_client.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/http/inc/http_lite_int.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/http/inc/http_parser.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/http/inc/http_socket.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/http/inc/http_ssl.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/libfdt/fdt.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/libfdt/libfdt.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/libfdt/libfdt_env.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/libfdt/libfdt_internal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/parson/parson.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/utils/dict_container.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/utils/downloader.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/utils/inet_aton.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/utils/parse_ini.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/utils/utf8_decode.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/utils/util_str.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/utils/util_uri.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/utils/utils_types.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/env/include/env.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/env/include/env_error.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/env/include/env_file.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/env/include/env_locks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/env/include/env_memory.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/env/include/env_system.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/env/include/env_thread.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/env/include/env_time.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/env/linux/env_target.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/env/nucleus/env_target.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/meif_cfg.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/meif_internal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/services/devcmd_svcs/devcmd.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/services/devcmd_svcs/nucleus/nu_devcmd.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/services/trace_svcs/linux/linux_trace_agent.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/services/trace_svcs/trace_cmds.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/services/trace_svcs/trace_internal.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/services/update_svcs/bootloader_ini.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/services/update_svcs/enc_utils.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/services/update_svcs/firmware_update.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/services/update_svcs/image_verify.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/services/update_svcs/parse_fit_file.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/services/update_svcs/update_svcs_defs.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/samples/aws/aws_devcmds.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/samples/aws/linux/aws_trace_hooks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/samples/aws/nucleus/load_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/samples/aws/nucleus/load_config_proto.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/samples/azure/linux/azure_trace_hooks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/samples/azure/nucleus/load_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/samples/azure/nucleus/load_config_proto.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/samples/mindconnect/callbacks.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/samples/mindconnect/nucleus/load_config.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/samples/mindconnect/nucleus/load_config_proto.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/meif_cfg.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/meif_internal.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/libfdt/fdt.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/libfdt/libfdt.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/libfdt/libfdt_env.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/common/libfdt/libfdt_internal.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/external_libs/jsmn/jsmn.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/platform/meif/threads_platform.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/platform/meif/timer_platform.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/platform/meif/wolfssl/network_platform.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/platform/linux/mbedtls/network_platform.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_config.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_error.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_interface.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_json.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_topics.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_jobs_types.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_json_utils.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_log.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client_common_internal.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_mqtt_client_interface.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_actions.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_interface.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_json.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_json_data.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_key.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_shadow_records.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_iot_version.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_lib_config.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/aws_target_config.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/network_interface.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/threads_interface.h
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/include/meif/framework/cloud/aws/include/timer_interface.h
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/meif/meif.ini
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/lib/systemd/system/run-media-persistent.mount
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/sudoers.d/meif
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/lib/systemd/system/meif-swupdate.service
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/share/lua/5.3/95-swupdate_meif_update_status_handlers.lua
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/meif/meif-config.env
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-rootca.pem
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-devcrt.pem
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-prvkey.pem
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/lib/systemd/system/meif-agent-autostart.service
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-rootca.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-devcrt.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-prvkey.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/lib/systemd/system/meif-agent-autostart.service
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-rootca.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-devcrt.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-prvkey.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/lib/systemd/system/meif-agent-autostart.service
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-rootca.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-devcrt.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-prvkey.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/lib/systemd/system/meif-agent-autostart.service
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/bin/meif-agent-config
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/bin/meif-agent-autostart-config
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/lib/systemd/system/meif-agent-config.service
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/lib/systemd/system/meif-agent-autostart.service
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/bin/traceiot.sh
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-rootca.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-devcrt.pem
-- Up-to-date: /home/builder/meif/mel-omni-os/meif/debian/tmp/etc/ssl/certs/aws-prvkey.pem
-- Installing: /home/builder/meif/mel-omni-os/meif/debian/tmp/usr/bin/aws-agent
-- Set runtime path of "/home/builder/meif/mel-omni-os/meif/debian/tmp/usr/bin/aws-agent" to ""
make[1]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
   dh_install
dh_install: Executable config file debian/meif.install produced a non-empty whitespace-only line
/home/builder/meif/mel-omni-os/meif/debian/meif.install: 2: /home/builder/meif/mel-omni-os/meif/debian/meif.install: /usr/lib/apt: Permission denied
/home/builder/meif/mel-omni-os/meif/debian/meif.install: 3: /home/builder/meif/mel-omni-os/meif/debian/meif.install: /usr/include/aio.h: Permission denied
/home/builder/meif/mel-omni-os/meif/debian/meif.install: 4: /home/builder/meif/mel-omni-os/meif/debian/meif.install: /lib/apt: Permission denied
/home/builder/meif/mel-omni-os/meif/debian/meif.install: 5: /home/builder/meif/mel-omni-os/meif/debian/meif.install: /etc/X11: Permission denied
make: *** [debian/rules:18: binary] Error 29
dpkg-buildpackage: error: fakeroot debian/rules binary subprocess returned exit status 2
WARNING: /home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/run.dpkg_runbuild.35790:1 exit 2 from 'sudo -E chroot --userspec=$( id -u ):$( id -g ) /home/mel/project/build/tmp/deploy/buildchroot-target/mel-omni-amd64 /isar/build.sh /home/builder/meif/mel-omni-os/meif amd64'


ERROR: Logfile of failure stored in: /home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/log.do_dpkg_build.35790
ERROR: Task (/mel-omni-os/industrial-meif/recipes-core/meif/meif.bb:do_dpkg_build) failed with exit code '1'
NOTE: Tasks Summary: Attempted 484 tasks of which 0 didn't need to be rerun and 1 failed.

Summary: 1 task failed:
  /mel-omni-os/industrial-meif/recipes-core/meif/meif.bb:do_dpkg_build
Summary: There was 1 ERROR message shown, returning a non-zero exit code.
PS C:\mgc\embedded\mel-omni-os\2>
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591279461;s:7:"updated";i:1591615527;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:136;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2607";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:73:"MEIF_AZURE_IOT_EDGE_CONNECTION_STRING should be set to some default value";s:11:"description";s:298:"Like all other cloud specific options, MEIF_AZURE_IOT_EDGE_CONNECTION_STRING should be set to some default string.

When MEIF_CLOUD is set to all, building the ADE throws following error if user has not set MEIF_AZURE_IOT_EDGE_CONNECTION_STRING.

!image-2020-05-29-16-42-59-485.png|thumbnail!";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"duplicates";a:1:{i:0;s:9:"MEIF-2605";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1590758832;s:7:"updated";i:1591785679;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:137;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2606";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:90:""95-swupdate_meif_update_status_handlers.lua" is not getting installed in the meif package";s:11:"description";s:190:"95-swupdate_meif_update_status_handlers.lua is not getting installed in the package. The installation dir for this file is */usr/share/lua/5.3* but this is not included in meif.install file.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590991166;s:7:"updated";i:1591162866;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:138;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2605";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:60:"Getting ERROR while building with MEIF_CLOUD = "all" option ";s:11:"description";s:1541:"Steps to reproduce:
 ---------------------
 1) Install Omni TC4 :[ftp://inpftp.ina.mentorg.com/pub/omni/200525_0400/omni-linux-x64-2.0.0.bin]
 Install meif installer : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/outputs/meif-linux-x64-1.4.0.bin]

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5)./melomni-devshell.sh -c -d <path-for-new-workspace> -l meif -m industrial-pc

6) Set below parameters in local.conf file
 MEIF_CLOUD = "all"
 MEIF_MINDSPHERE_SERVER_BASEURL = "<Set to baseURL obtained in JSON.>"
 MEIF_MINDSPHERE_INITIAL_ACCESS_TOKEN = "<Set to access token(at) obtained in JSON.>"
 MEIF_MINDSPHERE_TENANT = "<Set to tenant obtained in JSON.>"
 MEIF_INSTALLATION_PATH = "/mel-omni-os/meif"

MEIF_AZURE_IOT_EDGE_CONNECTION_STRING="<Set to Azure IoT Edge connection string>"

7)./melomni-devshell.sh -b -d <path-for-new-workspace> -t service-stick-image

Expected Result:
 ----------------
 We should not get warnings/errors while building with MEIF_CLOUD="all" option .

Actual Result :
 ---------------
 We are not getting Error while building with MEIF_CLOUD="all" option. Error screen shot is attached.
";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:9:"MEIF-2622";}}s:2:"in";a:1:{s:16:"is duplicated by";a:1:{i:0;s:9:"MEIF-2607";}}}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591768101;s:7:"updated";i:1591955944;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:139;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2604";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:60:"Service-stick-image build failed with collectd option enable";s:11:"description";s:3478:"Issue:
------------
Build is failed with latest omni & meif installer  when collectd option enabled

Steps:
---------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200528_0400/omni-windows-x64-2.0.0.zip
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/outputs/meif-windows-x64-1.4.0.zip
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.
5) .\melomni-devshell.ps1 -c -d ..\..\aws-build -m industrial-pc

6) Set Aws variables in local.conf file with collectd option enabled
MEIF_ENABLE_COLLECTD ?= "y"

7) .\melomni-devshell.ps1 -b -d ..\..\aws-build -t service-stick-image

Expected Output:
--------------
Build should get completed without any error

Actual Output:
---------------
Build is getting failed
{code}
PS C:\mgc\embedded\mel-omni-os\2> .\melomni-devshell.ps1 -b -d ..\..\aws-build -t service-stick-image
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-ade
    development-image
    service-stick-image
Parsing recipes: 100% |#######################################################################################################################################################| Time: 0:00:14
Parsing of 122 .bb files complete (0 cached, 122 parsed). 122 targets, 0 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |####################################################################################################################################################| Time: 0:00:48
NOTE: No setscene tasks
NOTE: Executing Tasks
ERROR: mel-setup-2.38-r0 do_unpack: Error executing a python function in exec_python_func() autogenerated:

The stack trace of python calls that resulted in this exception/failure was:
File: 'exec_python_func() autogenerated', lineno: 2, function: <module>
     0001:
 *** 0002:do_unpack(d)
     0003:
File: '/mel-omni-os/isar/meta/classes/base.bbclass', lineno: 193, function: do_unpack
     0189:    try:
     0190:        fetcher = bb.fetch2.Fetch(src_uri, d)
     0191:        fetcher.unpack(rootdir)
     0192:    except bb.fetch2.BBFetchException as e:
 *** 0193:        raise bb.build.FuncFailed(e)
     0194:}
     0195:
     0196:addtask unpack after do_fetch before do_build
     0197:
Exception: AttributeError: module 'bb.build' has no attribute 'FuncFailed'

ERROR: Logfile of failure stored in: /home/mel/project/build/tmp/work/mel-omni-amd64/mel-setup/2.38-r0/temp/log.do_unpack.8519
ERROR: Task (/mel-omni-os/mel-core/recipes-core/setup/mel-setup.bb:do_unpack) failed with exit code '1'
NOTE: Tasks Summary: Attempted 107 tasks of which 0 didn't need to be rerun and 1 failed.

Summary: 1 task failed:
  /mel-omni-os/mel-core/recipes-core/setup/mel-setup.bb:do_unpack
Summary: There was 1 ERROR message shown, returning a non-zero exit code.
PS C:\mgc\embedded\mel-omni-os\2>
{code}

NOTE: Service-stick-image is getting generated for only OMNI.ANd with MEIF layer other option build is also successful";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591019607;s:7:"updated";i:1591615984;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:140;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2603";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:61:"Implement a UTAH model to handle installation etc of MEL Omni";s:11:"description";s:160:"Implement a UTAH code to handle installation, build, debug etc of MEL Omni, using existing MEL Flex support as a reference.

So the process will be automated.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:140400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592285747;s:7:"updated";i:1592285757;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:141;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2602";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:24:"MEIF TC4 verify tracing.";s:11:"description";s:237:"Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1591075558;s:7:"updated";i:1591166620;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:142;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2601";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:28:"MEIF TC4 verify data updates";s:11:"description";s:237:"Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591209690;s:7:"updated";i:1591209697;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:143;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2600";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:37:"MEIF TC4 Verify docker compose update";s:11:"description";s:237:"Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:10800;s:9:"timespent";i:0;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1591075592;s:7:"updated";i:1591166585;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:144;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2599";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:34:"MEIF TC4 Verify application update";s:11:"description";s:237:"Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200531-222207/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591085370;s:7:"updated";i:1591164951;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:145;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2598";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:32:"MEIF TC4 Verify firmware update.";s:11:"description";s:237:"Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591028167;s:7:"updated";i:1591028167;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:146;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2597";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:79:"MEIF TC4 Verify parameters can be configured using meif.ini and meif-config.env";s:11:"description";s:237:"Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:3600;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591018059;s:7:"updated";i:1591166566;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:147;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2596";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:61:"MEIF TC4 Verify parameters can be configured using local.conf";s:11:"description";s:237:"Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:3600;s:9:"timespent";i:3600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591018126;s:7:"updated";i:1591024185;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:148;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2595";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"MEIF TC4 verify downstream device functionality.";s:11:"description";s:237:"Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591023629;s:7:"updated";i:1591166552;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:149;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2594";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:74:"MEIF TC4 verify azure-edge runs successfully. Deploy a module from portal.";s:11:"description";s:237:"Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591036863;s:7:"updated";i:1591036882;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:150;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2593";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:149:"MEIF TC4 Verify mindconnect agent runs successfully. Agent should show as online. Additionally if telemetry graph can be verified then it will great.";s:11:"description";s:245:"

Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/

Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).
";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:10800;s:9:"timespent";i:10800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591079328;s:7:"updated";i:1591079329;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:151;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2592";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:64:"MEIF TC4 verify aws agent runs successfully. Run ping or reboot.";s:11:"description";s:239:"Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200528-222208/

Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591016112;s:7:"updated";i:1591016126;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:152;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2591";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:66:"MEIF TC4 verify azure agent runs successfully. Run ping or reboot.";s:11:"description";s:237:"Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200531-222207/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:1200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591007838;s:7:"updated";i:1591018013;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:153;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2590";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:25:"MEIF TC4 Build Omni+MEIF.";s:11:"description";s:407:"use latest MEIF installer and Omni TC.

Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200531-222207/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).

Build MEIF+Omni to build and install a new service stick image either on qemu or actual board. cloud=all config can be used.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:3600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591007774;s:7:"updated";i:1591018005;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:154;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2589";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:28:"MEIF TC4 Build Verification.";s:11:"description";s:333:"Use latest meif installer + latest Omni TC.

Latest MEIF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200531-222207/
Omni TC: https://confluence.alm.mentorg.com/display/PS/Omni-2.0%3A++Builds+and+Deliverable#Omni-2.0:BuildsandDeliverable-TestCandidateBuilds(TC).

Only build MEIF not the service stick image. ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:3600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591002883;s:7:"updated";i:1591018000;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:155;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:5:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:3;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:4;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2588";s:6:"status";s:8:"Reopened";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:67:"Licensing docs do not get installed in standalone MEIF installation";s:11:"description";s:146:"Installing MEIF without selecting SA IoT Feature on installer's components page does not install licensing docs at {{<MEIF_install_folder>\docs}}.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869663;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:3:"tc3";i:3;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:156;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2587";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:32:"Service-stick-image build failed";s:11:"description";s:57064:"Issue:
------------
Build is failed with latest omni & meif installer

Steps:
---------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200523_0400/omni-linux-x64-2.0.0.bin
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200524-222207/outputs/meif-linux-x64-1.4.0.bin
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.
5) ./melomni-devshell.sh -c -d ../..//aws-build -m industrial-pc

6) Set Aws variables in local.conf file

7)./melomni-devshell.sh -b -d ../../aws-build -t service-stick-image

Expected Output:
--------------
Build should get completed without any error

Actual Output:
---------------
Build is getting failed
{code}
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/omni_bin/mel-omni-os/2$ ./melomni-devshell.sh -b -d ../../aws-build -t service-stick-image
**************************************************************************
Warning: group id on host does not match the one in container
**************************************************************************
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-ade
    development-image
    service-stick-image
Loading cache: 100% |#########################################################################################################################| Time: 0:00:00
Loaded 122 entries from dependency cache.
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |####################################################################################################################| Time: 0:00:00
NOTE: No setscene tasks
NOTE: Executing Tasks
ERROR: meif-1.0-r0 do_dpkg_build: Error executing a python function in exec_python_func() autogenerated:

The stack trace of python calls that resulted in this exception/failure was:
File: 'exec_python_func() autogenerated', lineno: 2, function: <module>
     0001:
 *** 0002:do_dpkg_build(d)
     0003:
File: '/mel-omni-os/isar/meta/classes/dpkg-base.bbclass', lineno: 130, function: do_dpkg_build
     0126:python do_dpkg_build() {
     0127:    lock = bb.utils.lockfile(d.getVar("REPO_ISAR_DIR") + "/isar.lock",
     0128:                             shared=True)
     0129:    bb.build.exec_func("dpkg_do_mounts", d)
 *** 0130:    bb.build.exec_func("dpkg_runbuild", d)
     0131:    bb.build.exec_func("dpkg_undo_mounts", d)
     0132:    bb.utils.unlockfile(lock)
     0133:}
     0134:
File: '/mel-omni-os/isar/bitbake/lib/bb/build.py', lineno: 249, function: exec_func
     0245:    with bb.utils.fileslocked(lockfiles):
     0246:        if ispython:
     0247:            exec_func_python(func, d, runfile, cwd=adir)
     0248:        else:
 *** 0249:            exec_func_shell(func, d, runfile, cwd=adir)
     0250:
     0251:    try:
     0252:        curcwd = os.getcwd()
     0253:    except:
File: '/mel-omni-os/isar/bitbake/lib/bb/build.py', lineno: 450, function: exec_func_shell
     0446:    with open(fifopath, 'r+b', buffering=0) as fifo:
     0447:        try:
     0448:            bb.debug(2, "Executing shell function %s" % func)
     0449:            with open(os.devnull, 'r+') as stdin, logfile:
 *** 0450:                bb.process.run(cmd, shell=False, stdin=stdin, log=logfile, extrafiles=[(fifo,readfifo)])
     0451:        finally:
     0452:            os.unlink(fifopath)
     0453:
     0454:    bb.debug(2, "Shell function %s finished" % func)
File: '/mel-omni-os/isar/bitbake/lib/bb/process.py', lineno: 182, function: run
     0178:        if not stderr is None:
     0179:            stderr = stderr.decode("utf-8")
     0180:
     0181:    if pipe.returncode != 0:
 *** 0182:        raise ExecutionError(cmd, pipe.returncode, stdout, stderr)
     0183:    return stdout, stderr
Exception: bb.process.ExecutionError: Execution of '/home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/run.dpkg_runbuild.35' failed with exit code 2:
dpkg-buildpackage: info: source package meif
dpkg-buildpackage: info: source version 1.0
dpkg-buildpackage: info: source distribution stable
dpkg-buildpackage: info: source changed by Fahad Arslan <fahad_arslan@mentor.com>
 dpkg-source -I --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean
   dh_testdir
   dh_auto_clean
        rm -rf obj-x86_64-linux-gnu
   dh_clean
        rm -f debian/debhelper-build-stamp
        rm -rf debian/.debhelper/
        rm -f debian/meif-dev.debhelper.log debian/meif-lib.debhelper.log debian/meif.debhelper.log
        rm -f -- debian/meif.substvars debian/meif-lib.substvars debian/meif-dev.substvars debian/files
        rm -fr -- debian/meif/ debian/tmp/ debian/meif-lib/ debian/meif-dev/
        find .  \( \( \
                \( -path .\*/.git -o -path .\*/.svn -o -path .\*/.bzr -o -path .\*/.hg -o -path .\*/CVS -o -path .\*/.pc -o -path .\*/_darcs \) -prune -o -type f -a \
                \( -name '#*#' -o -name '.*~' -o -name '*~' -o -name DEADJOE \
                 -o -name '*.orig' -o -name '*.rej' -o -name '*.bak' \
                 -o -name '.*.orig' -o -name .*.rej -o -name '.SUMS' \
                 -o -name TAGS -o \( -path '*/.deps/*' -a -name '*.P' \) \
                \) -exec rm -f {} + \) -o \
                \( -type d -a -name autom4te.cache -prune -exec rm -rf {} + \) \)
 dpkg-source -I -b .
dpkg-source: warning: no source format specified in debian/source/format, see dpkg-source(1)
dpkg-source: warning: source directory 'meif' is not <sourcepackage>-<upstreamversion> 'meif-1.0'
dpkg-source: info: using source format '1.0'
dpkg-source: info: building meif in meif_1.0.tar.gz
dpkg-source: info: building meif in meif_1.0.dsc
 debian/rules build
dh build
   dh_testdir
   dh_update_autotools_config
   debian/rules override_dh_auto_configure
make[1]: Entering directory '/home/builder/meif/mel-omni-os/meif'
dh_auto_configure --    -DDEMO_ENABLE_TRACING=off    -DBUILD_VERBOSE=on    -DOS=linux    -DCLOUD=aws    -DLINUX_LIBDIR=    -DCMAKE_BUILD_TYPE=Debug        -DAWS_IOT_HOST_MQTT_ADDR=ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com     -DAWS_IOT_HOST_MQTT_PORT=8883     -DAWS_IOT_CLIENT_MQTT_CLIENT_ID=ravi_iot     -DAWS_IOT_CLIENT_MY_THING_NAME=ravi_iot     -DAWS_IOT_SECURITY_ROOT_CA_FILENAME=aws-rootca.pem     -DAWS_IOT_SECURITY_CERTIFICATE_FILENAME=aws-devcrt.pem     -DAWS_IOT_SECURITY_PRIVATE_KEY_FILENAME=aws-prvkey.pem     -DAWS_USE_THREADING=on     -DAWS_IOT_CERTS_DIR=/home/builder/meif     -DAWS_IOT_CERTS_TGT_DIR=/etc/ssl/certs     -DMEIF_AGENT_AUTOSTART=y    -DMEIF_AGENT_USES_SWUPDATE=yes    -DMEIF_PERSISTENT_DIRECTORY=/persistent/meif    -DMEIF_SOURCE=on    -DMEIF_DOCKER_AZURE_EDGE=off    -DMEIF_BUILD_USES_ISAR_SYSTEM=yes    -DMEIF_BASE_DISTRIBUTION=buster    -DMEIF_SWUPDATE_DEV_PACKAGE=libswupdate-ebg-dev    -DHWREVISION=industrial-pc:v1.0    -DLINUX_DISTRO=debian
        install -d obj-x86_64-linux-gnu
        cd obj-x86_64-linux-gnu && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=None -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_INSTALL_LOCALSTATEDIR=/var -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON "-GUnix Makefiles" -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu -DDEMO_ENABLE_TRACING=off -DBUILD_VERBOSE=on -DOS=linux -DCLOUD=aws -DLINUX_LIBDIR= -DCMAKE_BUILD_TYPE=Debug -DAWS_IOT_HOST_MQTT_ADDR=ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com -DAWS_IOT_HOST_MQTT_PORT=8883 -DAWS_IOT_CLIENT_MQTT_CLIENT_ID=ravi_iot -DAWS_IOT_CLIENT_MY_THING_NAME=ravi_iot -DAWS_IOT_SECURITY_ROOT_CA_FILENAME=aws-rootca.pem -DAWS_IOT_SECURITY_CERTIFICATE_FILENAME=aws-devcrt.pem -DAWS_IOT_SECURITY_PRIVATE_KEY_FILENAME=aws-prvkey.pem -DAWS_USE_THREADING=on -DAWS_IOT_CERTS_DIR=/home/builder/meif -DAWS_IOT_CERTS_TGT_DIR=/etc/ssl/certs -DMEIF_AGENT_AUTOSTART=y -DMEIF_AGENT_USES_SWUPDATE=yes -DMEIF_PERSISTENT_DIRECTORY=/persistent/meif -DMEIF_SOURCE=on -DMEIF_DOCKER_AZURE_EDGE=off -DMEIF_BUILD_USES_ISAR_SYSTEM=yes -DMEIF_BASE_DISTRIBUTION=buster -DMEIF_SWUPDATE_DEV_PACKAGE=libswupdate-ebg-dev -DHWREVISION=industrial-pc:v1.0 -DLINUX_DISTRO=debian ..
-- The C compiler identification is GNU 8.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
CMake Error at CMakeLists.txt:148 (add_subdirectory):
  add_subdirectory given source
  "/home/builder/meif/mel-omni-os/meif/os_support/mel-omni2.0/cmake" which is
  not an existing directory.


-- Configuring incomplete, errors occurred!
See also "/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeOutput.log".
        cd obj-x86_64-linux-gnu && tail -v -n \+0 CMakeCache.txt
==> CMakeCache.txt <==
# This is the CMakeCache file.
# For build in directory: /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Trace AWS IoT C SDK function calls
AWS_ENABLE_TRACING:BOOL=OFF

//Maximum time interval after which exponential back-off will stop
// attempting to reconnect.
AWS_IOT_AUTORECONN_MQTT_MAX_RECONNECT_WAIT_INTERVAL:STRING=128000

//Minimum time before the First reconnect attempt is made as part
// of the exponential back-off algorithm
AWS_IOT_AUTORECONN_MQTT_MIN_RECONNECT_WAIT_INTERVAL:STRING=1000

//No help, variable specified on the command line.
AWS_IOT_CERTS_DIR:UNINITIALIZED=/home/builder/meif

//No help, variable specified on the command line.
AWS_IOT_CERTS_TGT_DIR:UNINITIALIZED=/etc/ssl/certs

//MQTT client ID should be unique for every device.
AWS_IOT_CLIENT_MQTT_CLIENT_ID:STRING=ravi_iot

//Thing Name of the Shadow this device is associated with.
AWS_IOT_CLIENT_MY_THING_NAME:STRING=ravi_iot

//Customer specific MQTT HOST. The same will be used for Thing
// Shadow. In the format '<magic>.iot.<geographic zone>.amazonaws.com'
AWS_IOT_HOST_MQTT_ADDR:STRING=ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com

//Default port for MQTT/S.
AWS_IOT_HOST_MQTT_PORT:STRING=8883

//Maximum number of topic filters the MQTT client can handle at
// any given time. This should be increased appropriately when
// using Thing Shadow
AWS_IOT_PUBSUB_MQTT_NUM_SUBSCRIBE_HANDLERS:STRING=20

//Any message that comes into the device should be less than this
// buffer size. If a received message is bigger than this buffer
// size the message will be dropped.
AWS_IOT_PUBSUB_MQTT_RX_BUF_LEN:STRING=8192

//Any time a message is sent out through the MQTT layer. The message
// is copied into this buffer anytime a publish is done. This will
// also be used in the case of Thing Shadow
AWS_IOT_PUBSUB_MQTT_TX_BUF_LEN:STRING=8192

//Device signed certificate file name.
AWS_IOT_SECURITY_CERTIFICATE_FILENAME:STRING=aws-devcrt.pem

//Device private key filename.
AWS_IOT_SECURITY_PRIVATE_KEY_FILENAME:STRING=aws-prvkey.pem

//Root CA file name.
AWS_IOT_SECURITY_ROOT_CA_FILENAME:STRING=aws-rootca.pem

//At Any given time we will wait for this many responses. This
// will correlate to the rate at which the shadow actions are requested
AWS_IOT_THING_SHADOW_MAX_ACKS_TO_COMEIN_AT_ANY_GIVEN_TIME:STRING=10

//These are the max tokens that is expected to be in the Shadow
// JSON document. Include the metadata that gets published
AWS_IOT_THING_SHADOW_MAX_JSON_TOKEN_EXPECTED:STRING=1024

//All shadow actions have to be published or subscribed to a topic
// which is of the format '$aws/things/{thingName}/shadow/update/accepted'.
// This refers to the size of the topic without the Thing Name
AWS_IOT_THING_SHADOW_MAX_SHADOW_TOPIC_LENGTH_WITHOUT_THINGNAME:STRING=60

//The Thing Name should not be bigger than this value. Modify this
// if the Thing Name needs to be bigger
AWS_IOT_THING_SHADOW_MAX_SIZE_OF_THING_NAME:STRING=20

//Maximum size of the Unique Client Id. For More info on the Client
ef response 'Acknowledgments'
AWS_IOT_THING_SHADOW_MAX_SIZE_OF_UNIQUE_CLIENT_ID_BYTES:STRING=80

//We could perform shadow action on any thing Name and this is
// maximum Thing Names we can act on at any given time
AWS_IOT_THING_SHADOW_MAX_THINGNAME_HANDLED_AT_ANY_GIVEN_TIME:STRING=10

//Use threading in AWS client and libraries
AWS_USE_THREADING:BOOL=on

//0: off, 1: errors, 2: warnings, 3: info, 4: debug
AWS_VERBOSITY:STRING=3

//Path to a library.
AZURE_AMQP_TRANSPORT_LIB:FILEPATH=AZURE_AMQP_TRANSPORT_LIB-NOTFOUND

//Path to a library.
AZURE_AMQP_WS_TRANSPORT_LIB:FILEPATH=AZURE_AMQP_WS_TRANSPORT_LIB-NOTFOUND

//Path to a file.
AZURE_HDR_AZUREIOT_FOLDER:FILEPATH=AZURE_HDR_AZUREIOT_FOLDER-NOTFOUND

//Path to a library.
AZURE_HTTP_TRANSPORT_LIB:FILEPATH=AZURE_HTTP_TRANSPORT_LIB-NOTFOUND

//Path to a library.
AZURE_IOTHUB_CLIENT_LIB:FILEPATH=AZURE_IOTHUB_CLIENT_LIB-NOTFOUND

//Path to a library.
AZURE_MQTT_TRANSPORT_LIB:FILEPATH=AZURE_MQTT_TRANSPORT_LIB-NOTFOUND

//Path to a library.
AZURE_MQTT_WS_TRANSPORT_LIB:FILEPATH=AZURE_MQTT_WS_TRANSPORT_LIB-NOTFOUND

//Path to a library.
AZURE_SERIALIZER_LIB:FILEPATH=AZURE_SERIALIZER_LIB-NOTFOUND

//Verbose build mode.
BUILD_VERBOSE:BOOL=on

//Name of cloud service, this will be one of following azure, hawkbit,
// aws, mindconnect, azure-edge, all, none.
CLOUD:STRING=aws

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Debug

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//C compiler
CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-8

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-8

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=-g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=-Wl,-z,relro

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//No help, variable specified on the command line.
CMAKE_EXPORT_NO_PACKAGE_REGISTRY:UNINITIALIZED=ON

//No help, variable specified on the command line.
CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY:UNINITIALIZED=ON

//No help, variable specified on the command line.
CMAKE_INSTALL_LIBDIR:UNINITIALIZED=lib/x86_64-linux-gnu

//No help, variable specified on the command line.
CMAKE_INSTALL_LOCALSTATEDIR:UNINITIALIZED=/var

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr

//No help, variable specified on the command line.
CMAKE_INSTALL_SYSCONFDIR:UNINITIALIZED=/etc

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=-Wl,-z,relro

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=MEIFLibrary

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=0.0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=-Wl,-z,relro

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=ON

//Enable function call tracing for demos.
DEMO_ENABLE_TRACING:BOOL=off

//No help, variable specified on the command line.
HWREVISION:UNINITIALIZED=industrial-pc:v1.0

//No help, variable specified on the command line.
LINUX_DISTRO:UNINITIALIZED=debian

//No help, variable specified on the command line.
LINUX_LIBDIR:UNINITIALIZED=

//Value Computed by CMake
MEIFLibrary_BINARY_DIR:STATIC=/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu

//Value Computed by CMake
MEIFLibrary_SOURCE_DIR:STATIC=/home/builder/meif/mel-omni-os/meif

//No help, variable specified on the command line.
MEIF_AGENT_AUTOSTART:UNINITIALIZED=y

//MEIF Agent depends on swupdate or not, valid values yes/no
MEIF_AGENT_USES_SWUPDATE:STRING=yes

//No help, variable specified on the command line.
MEIF_BASE_DISTRIBUTION:UNINITIALIZED=buster

//No help, variable specified on the command line.
MEIF_BUILD_USES_ISAR_SYSTEM:UNINITIALIZED=yes

//Enable MEIF debug mode.
MEIF_DEBUG:BOOL=ON

//Option to enable/disable device command services in MEIF.
MEIF_DEVCMD_SVCS:BOOL=ON

//No help, variable specified on the command line.
MEIF_DOCKER_AZURE_EDGE:UNINITIALIZED=off

//Option to enable/disable http component in MEIF.
MEIF_HTTP:BOOL=ON

//Option to enable/disable libfdt component in MEIF.
MEIF_LIBFDT:BOOL=ON

//Option to enable/disable parson component in MEIF.
MEIF_PARSON:BOOL=ON

//No help, variable specified on the command line.
MEIF_PERSISTENT_DIRECTORY:UNINITIALIZED=/persistent/meif

//No help, variable specified on the command line.
MEIF_SOURCE:UNINITIALIZED=on

//No help, variable specified on the command line.
MEIF_SWUPDATE_DEV_PACKAGE:UNINITIALIZED=libswupdate-ebg-dev

//Option to enable/disable trace services in MEIF.
MEIF_TRACE_SVCS:BOOL=ON

//Option to enable/disable update services in MEIF.
MEIF_UPDATE_SVCS:BOOL=ON

//Option to enable/disable utils component in MEIF.
MEIF_UTILS:BOOL=ON

//Name of OS, this will be one of following nucleus, linux.
OS:STRING=linux

//Root of OS
OS_ROOT:PATH=


########################
# INTERNAL cache entries
########################

//STRINGS property for variable: CLOUD
CLOUD-STRINGS:INTERNAL=azure;hawkbit;aws;mindconnect;azure-edge;all;none
CLOUD_VALUES:INTERNAL=azure;hawkbit;aws;mindconnect;azure-edge;all;none
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=13
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=4
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/builder/meif/mel-omni-os/meif
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=20
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.13
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
MEIF_BUILD:INTERNAL=ON
//MEIF_INCLUDE_DIRECTORIES
MEIF_INCLUDE_DIRECTORIES:INTERNAL=/home/builder/meif/mel-omni-os/meif;/home/builder/meif/mel-omni-os/meif/framework/include;/home/builder/meif/mel-omni-os/meif/framework/common/libfdt;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/include
//MEIF_LIBS
MEIF_LIBS:INTERNAL=meif
//MEIF_PROJECT_LIB
MEIF_PROJECT_LIB:INTERNAL=meif
//MEIF_SOURCES
MEIF_SOURCES:INTERNAL=/home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_buffer.c;/home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_common.c;/home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_lite_client.c;/home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_meif_socket.c;/home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_parser.c;/home/builder/meif/mel-omni-os/meif/framework/common/http/src/http_ssl.c;/home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt.c;/home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_addresses.c;/home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_empty_tree.c;/home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_overlay.c;/home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_region.c;/home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_ro.c;/home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_rw.c;/home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_strerror.c;/home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_sw.c;/home/builder/meif/mel-omni-os/meif/framework/common/libfdt/fdt_wip.c;/home/builder/meif/mel-omni-os/meif/framework/common/parson/parson.c;/home/builder/meif/mel-omni-os/meif/framework/common/utils/dict_container.c;/home/builder/meif/mel-omni-os/meif/framework/common/utils/downloader.c;/home/builder/meif/mel-omni-os/meif/framework/common/utils/inet_pton.c;/home/builder/meif/mel-omni-os/meif/framework/common/utils/utf8_decode.c;/home/builder/meif/mel-omni-os/meif/framework/common/utils/util_str.c;/home/builder/meif/mel-omni-os/meif/framework/common/utils/util_uri.c;/home/builder/meif/mel-omni-os/meif/framework/services/devcmd_svcs/devcmd.c;/home/builder/meif/mel-omni-os/meif/framework/services/devcmd_svcs/devcmd_list.c;/home/builder/meif/mel-omni-os/meif/framework/services/devcmd_svcs/linux/linux_devcmd.c;/home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/trace_cmds.c;/home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_agent.c;/home/builder/meif/mel-omni-os/meif/framework/services/trace_svcs/linux/linux_trace_cmds.c;/home/builder/meif/mel-omni-os/meif/framework/env/./linux/linux_env_file.c;/home/builder/meif/mel-omni-os/meif/framework/env/./linux/linux_env_locks.c;/home/builder/meif/mel-omni-os/meif/framework/env/./linux/linux_env_memory.c;/home/builder/meif/mel-omni-os/meif/framework/env/./linux/linux_env_system.c;/home/builder/meif/mel-omni-os/meif/framework/env/./linux/linux_env_thread.c;/home/builder/meif/mel-omni-os/meif/framework/env/./linux/linux_env_time.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/external_libs/jsmn/./jsmn.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif/./threads_meif_wrapper.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/meif/./timer_meif_wrapper.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_jobs_interface.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_jobs_json.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_jobs_topics.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_jobs_types.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_json_utils.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_mqtt_client.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_mqtt_client_common_internal.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_mqtt_client_connect.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_mqtt_client_publish.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_mqtt_client_subscribe.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_mqtt_client_unsubscribe.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_mqtt_client_yield.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_shadow.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_shadow_actions.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_shadow_json.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/src/./aws_iot_shadow_records.c;/home/builder/meif/mel-omni-os/meif/framework/cloud/aws/platform/linux/mbedtls/./network_mbedtls_wrapper.c
//STRINGS property for variable: OS
OS-STRINGS:INTERNAL=nucleus;linux
OS_VALUES:INTERNAL=nucleus;linux

        cd obj-x86_64-linux-gnu && tail -v -n \+0 CMakeFiles/CMakeOutput.log
==> CMakeFiles/CMakeOutput.log <==
The system is: Linux - 5.3.0-51-generic - x86_64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: /usr/bin/cc
Build flags: -g;-O2;-fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=.;-fstack-protector-strong;-Wformat;-Werror=format-security;-Wno-format-security;-Wdate-time;-D_FORTIFY_SOURCE=2
Id flags:

The output was:
0


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.out"

The C compiler identification is GNU, found in "/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/3.13.4/CompilerIdC/a.out"

Determining if the C compiler works passed with the following output:
Change Dir: /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_2c663/fast"
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
/usr/bin/make -f CMakeFiles/cmTC_2c663.dir/build.make CMakeFiles/cmTC_2c663.dir/build
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_2c663.dir/testCCompiler.c.o
/usr/bin/cc   -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2    -o CMakeFiles/cmTC_2c663.dir/testCCompiler.c.o   -c /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp/testCCompiler.c
Linking C executable cmTC_2c663
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2c663.dir/link.txt --verbose=1
/usr/bin/cc -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -Wl,-z,relro  CMakeFiles/cmTC_2c663.dir/testCCompiler.c.o  -o cmTC_2c663
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'


Detecting C compiler ABI info compiled with the following output:
Change Dir: /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_21124/fast"
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
/usr/bin/make -f CMakeFiles/cmTC_21124.dir/build.make CMakeFiles/cmTC_21124.dir/build
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_21124.dir/CMakeCCompilerABI.c.o
/usr/bin/cc   -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2    -o CMakeFiles/cmTC_21124.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.13/Modules/CMakeCCompilerABI.c
Linking C executable cmTC_21124
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_21124.dir/link.txt --verbose=1
/usr/bin/cc -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -Wl,-z,relro -v CMakeFiles/cmTC_21124.dir/CMakeCCompilerABI.c.o  -o cmTC_21124
Using built-in specs.
COLLECT_GCC=/usr/bin/cc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/8/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Debian 8.3.0-6' --with-bugurl=file:///usr/share/doc/gcc-8/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-8 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 8.3.0 (Debian 8.3.0-6)
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/8/:/usr/lib/gcc/x86_64-linux-gnu/8/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/8/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/8/:/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/8/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-g' '-O2' '-fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=.' '-fstack-protector-strong' '-Wformat=1' '-Werror=format-security' '-Wno-format-security' '-Wdate-time' '-D' '_FORTIFY_SOURCE=2' '-v' '-o' 'cmTC_21124' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/8/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/8/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/8/lto-wrapper -plugin-opt=-fresolution=/tmp/ccnHHgqH.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -o cmTC_21124 /usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/8 -L/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/8/../../.. -z relro CMakeFiles/cmTC_21124.dir/CMakeCCompilerABI.c.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/crtn.o
COLLECT_GCC_OPTIONS='-g' '-O2' '-fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=.' '-fstack-protector-strong' '-Wformat=1' '-Werror=format-security' '-Wno-format-security' '-Wdate-time' '-D' '_FORTIFY_SOURCE=2' '-v' '-o' 'cmTC_21124' '-mtune=generic' '-march=x86-64'
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'


Parsed C implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command:"/usr/bin/make" "cmTC_21124/fast"]
  ignore line: [make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp']
  ignore line: [/usr/bin/make -f CMakeFiles/cmTC_21124.dir/build.make CMakeFiles/cmTC_21124.dir/build]
  ignore line: [make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp']
  ignore line: [Building C object CMakeFiles/cmTC_21124.dir/CMakeCCompilerABI.c.o]
  ignore line: [/usr/bin/cc   -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2    -o CMakeFiles/cmTC_21124.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.13/Modules/CMakeCCompilerABI.c]
  ignore line: [Linking C executable cmTC_21124]
  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_21124.dir/link.txt --verbose=1]
  ignore line: [/usr/bin/cc -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -Wl,-z,relro -v CMakeFiles/cmTC_21124.dir/CMakeCCompilerABI.c.o  -o cmTC_21124 ]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/cc]
  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/8/lto-wrapper]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Debian 8.3.0-6' --with-bugurl=file:///usr/share/doc/gcc-8/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-8 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 8.3.0 (Debian 8.3.0-6) ]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/8/:/usr/lib/gcc/x86_64-linux-gnu/8/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/8/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/8/:/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/8/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-g' '-O2' '-fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=.' '-fstack-protector-strong' '-Wformat=1' '-Werror=format-security' '-Wno-format-security' '-Wdate-time' '-D' '_FORTIFY_SOURCE=2' '-v' '-o' 'cmTC_21124' '-mtune=generic' '-march=x86-64']
  link line: [ /usr/lib/gcc/x86_64-linux-gnu/8/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/8/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/8/lto-wrapper -plugin-opt=-fresolution=/tmp/ccnHHgqH.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -o cmTC_21124 /usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/8 -L/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/8/../../.. -z relro CMakeFiles/cmTC_21124.dir/CMakeCCompilerABI.c.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/crtn.o]
    arg [/usr/lib/gcc/x86_64-linux-gnu/8/collect2] ==> ignore
    arg [-plugin] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/8/liblto_plugin.so] ==> ignore
    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/8/lto-wrapper] ==> ignore
    arg [-plugin-opt=-fresolution=/tmp/ccnHHgqH.res] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
    arg [-plugin-opt=-pass-through=-lc] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
    arg [--build-id] ==> ignore
    arg [--eh-frame-hdr] ==> ignore
    arg [-m] ==> ignore
    arg [elf_x86_64] ==> ignore
    arg [--hash-style=gnu] ==> ignore
    arg [-dynamic-linker] ==> ignore
    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
    arg [-pie] ==> ignore
    arg [-o] ==> ignore
    arg [cmTC_21124] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/Scrt1.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/crti.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o] ==> ignore
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/8] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/8]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib]
    arg [-L/lib/x86_64-linux-gnu] ==> dir [/lib/x86_64-linux-gnu]
    arg [-L/lib/../lib] ==> dir [/lib/../lib]
    arg [-L/usr/lib/x86_64-linux-gnu] ==> dir [/usr/lib/x86_64-linux-gnu]
    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/8/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/8/../../..]
    arg [-zrelro] ==> ignore
    arg [CMakeFiles/cmTC_21124.dir/CMakeCCompilerABI.c.o] ==> ignore
    arg [-lgcc] ==> lib [gcc]
    arg [--push-state] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [--pop-state] ==> ignore
    arg [-lc] ==> lib [c]
    arg [-lgcc] ==> lib [gcc]
    arg [--push-state] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [--pop-state] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/crtn.o] ==> ignore
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/8] ==> [/usr/lib/gcc/x86_64-linux-gnu/8]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib] ==> [/usr/lib]
  collapse library dir [/lib/x86_64-linux-gnu] ==> [/lib/x86_64-linux-gnu]
  collapse library dir [/lib/../lib] ==> [/lib]
  collapse library dir [/usr/lib/x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/../lib] ==> [/usr/lib]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/8/../../..] ==> [/usr/lib]
  implicit libs: [gcc;gcc_s;c;gcc;gcc_s]
  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/8;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
  implicit fwks: []




Detecting C [-std=c11] compiler features compiled with the following output:
Change Dir: /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_43c33/fast"
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
/usr/bin/make -f CMakeFiles/cmTC_43c33.dir/build.make CMakeFiles/cmTC_43c33.dir/build
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_43c33.dir/feature_tests.c.o
/usr/bin/cc   -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2    -std=c11 -o CMakeFiles/cmTC_43c33.dir/feature_tests.c.o   -c /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/feature_tests.c
Linking C executable cmTC_43c33
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_43c33.dir/link.txt --verbose=1
/usr/bin/cc -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -Wl,-z,relro  CMakeFiles/cmTC_43c33.dir/feature_tests.c.o  -o cmTC_43c33
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'


    Feature record: C_FEATURE:1c_function_prototypes
    Feature record: C_FEATURE:1c_restrict
    Feature record: C_FEATURE:1c_static_assert
    Feature record: C_FEATURE:1c_variadic_macros


Detecting C [-std=c99] compiler features compiled with the following output:
Change Dir: /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_1e86f/fast"
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
/usr/bin/make -f CMakeFiles/cmTC_1e86f.dir/build.make CMakeFiles/cmTC_1e86f.dir/build
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1e86f.dir/feature_tests.c.o
/usr/bin/cc   -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2    -std=c99 -o CMakeFiles/cmTC_1e86f.dir/feature_tests.c.o   -c /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/feature_tests.c
Linking C executable cmTC_1e86f
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1e86f.dir/link.txt --verbose=1
/usr/bin/cc -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -Wl,-z,relro  CMakeFiles/cmTC_1e86f.dir/feature_tests.c.o  -o cmTC_1e86f
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'


    Feature record: C_FEATURE:1c_function_prototypes
    Feature record: C_FEATURE:1c_restrict
    Feature record: C_FEATURE:0c_static_assert
    Feature record: C_FEATURE:1c_variadic_macros


Detecting C [-std=c90] compiler features compiled with the following output:
Change Dir: /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_52f06/fast"
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
/usr/bin/make -f CMakeFiles/cmTC_52f06.dir/build.make CMakeFiles/cmTC_52f06.dir/build
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_52f06.dir/feature_tests.c.o
/usr/bin/cc   -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2    -std=c90 -o CMakeFiles/cmTC_52f06.dir/feature_tests.c.o   -c /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/feature_tests.c
Linking C executable cmTC_52f06
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_52f06.dir/link.txt --verbose=1
/usr/bin/cc -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -Wl,-z,relro  CMakeFiles/cmTC_52f06.dir/feature_tests.c.o  -o cmTC_52f06
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'


    Feature record: C_FEATURE:1c_function_prototypes
    Feature record: C_FEATURE:0c_restrict
    Feature record: C_FEATURE:0c_static_assert
    Feature record: C_FEATURE:0c_variadic_macros
dh_auto_configure: cd obj-x86_64-linux-gnu && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=None -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_INSTALL_LOCALSTATEDIR=/var -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON "-GUnix Makefiles" -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu -DDEMO_ENABLE_TRACING=off -DBUILD_VERBOSE=on -DOS=linux -DCLOUD=aws -DLINUX_LIBDIR= -DCMAKE_BUILD_TYPE=Debug -DAWS_IOT_HOST_MQTT_ADDR=ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com -DAWS_IOT_HOST_MQTT_PORT=8883 -DAWS_IOT_CLIENT_MQTT_CLIENT_ID=ravi_iot -DAWS_IOT_CLIENT_MY_THING_NAME=ravi_iot -DAWS_IOT_SECURITY_ROOT_CA_FILENAME=aws-rootca.pem -DAWS_IOT_SECURITY_CERTIFICATE_FILENAME=aws-devcrt.pem -DAWS_IOT_SECURITY_PRIVATE_KEY_FILENAME=aws-prvkey.pem -DAWS_USE_THREADING=on -DAWS_IOT_CERTS_DIR=/home/builder/meif -DAWS_IOT_CERTS_TGT_DIR=/etc/ssl/certs -DMEIF_AGENT_AUTOSTART=y -DMEIF_AGENT_USES_SWUPDATE=yes -DMEIF_PERSISTENT_DIRECTORY=/persistent/meif -DMEIF_SOURCE=on -DMEIF_DOCKER_AZURE_EDGE=off -DMEIF_BUILD_USES_ISAR_SYSTEM=yes -DMEIF_BASE_DISTRIBUTION=buster -DMEIF_SWUPDATE_DEV_PACKAGE=libswupdate-ebg-dev -DHWREVISION=industrial-pc:v1.0 -DLINUX_DISTRO=debian .. returned exit code 1
make[1]: *** [debian/rules:21: override_dh_auto_configure] Error 2
make[1]: Leaving directory '/home/builder/meif/mel-omni-os/meif'
make: *** [debian/rules:18: build] Error 2
dpkg-buildpackage: error: debian/rules build subprocess returned exit status 2
WARNING: /home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/run.dpkg_runbuild.35:1 exit 2 from 'sudo -E chroot --userspec=$( id -u ):$( id -g ) /home/mel/project/build/tmp/deploy/buildchroot-target/mel-omni-amd64 /isar/build.sh /home/builder/meif/mel-omni-os/meif amd64'


ERROR: Logfile of failure stored in: /home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/log.do_dpkg_build.35
ERROR: Task (/mel-omni-os/industrial-meif/recipes-core/meif/meif.bb:do_dpkg_build) failed with exit code '1'
NOTE: Tasks Summary: Attempted 504 tasks of which 488 didn't need to be rerun and 1 failed.

Summary: 1 task failed:
  /mel-omni-os/industrial-meif/recipes-core/meif/meif.bb:do_dpkg_build
Summary: There was 1 ERROR message shown, returning a non-zero exit code.
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/omni_bin/mel-omni-os/2$
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590655982;s:7:"updated";i:1590997646;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:157;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2480";s:6:"sprint";a:1:{i:0;s:300:"com.atlassian.greenhopper.service.sprint.Sprint@1ee33c7c[id=1941,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 8,startDate=2020-05-25T08:58:07.341+01:00,endDate=2020-06-12T18:58:00.000+01:00,completeDate=2020-06-15T08:49:00.180+01:00,sequence=1941,goal=Starts : 25th May till 12th June]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2586";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:70:"PRE-FF:Go through the MEIFMR-252 and create the use cases in test plan";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591980852;s:7:"updated";i:1591980857;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:6:"pre-ff";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:158;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2422";s:6:"sprint";a:1:{i:0;s:300:"com.atlassian.greenhopper.service.sprint.Sprint@1ee33c7c[id=1941,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 8,startDate=2020-05-25T08:58:07.341+01:00,endDate=2020-06-12T18:58:00.000+01:00,completeDate=2020-06-15T08:49:00.180+01:00,sequence=1941,goal=Starts : 25th May till 12th June]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2585";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"FF:Bug verification and regression with MEIF TC3";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591700850;s:7:"updated";i:1591702957;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:159;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2161";s:6:"sprint";a:1:{i:0;s:300:"com.atlassian.greenhopper.service.sprint.Sprint@1ee33c7c[id=1941,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 8,startDate=2020-05-25T08:58:07.341+01:00,endDate=2020-06-12T18:58:00.000+01:00,completeDate=2020-06-15T08:49:00.180+01:00,sequence=1941,goal=Starts : 25th May till 12th June]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2584";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:59:"FF:Execute the run time tests for MEIF_CLOUD = "all" option";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591884702;s:7:"updated";i:1591887323;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:160;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2260";s:6:"sprint";a:1:{i:0;s:300:"com.atlassian.greenhopper.service.sprint.Sprint@1ee33c7c[id=1941,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 8,startDate=2020-05-25T08:58:07.341+01:00,endDate=2020-06-12T18:58:00.000+01:00,completeDate=2020-06-15T08:49:00.180+01:00,sequence=1941,goal=Starts : 25th May till 12th June]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2583";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:73:"FF:Build with MEIF_CLOUD = "all" option and other clouds on primary hosts";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591695500;s:7:"updated";i:1591695575;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:161;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:5:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:3;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:4;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2582";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:35:"Issues observed on MHT CPIO Package";s:11:"description";s:761:"Steps to reproduce:
 ---------------------
 1)Install meif installer :  [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200426-222207/]

2)Go to the following path <meif-installation-path>/tools/mht

3)Launch the meif host tool:
 $ ./meif-host-tools

4)Go to package tab and then select CPIO .

5) We observed below issues :
{code:java}
1.Platform names in CPIO package should start with MEL Flex and MEL Omni.

2.When Omni Platform selected, Encrypt is default selected and Compress disabled. 
User should have option to select either Compress or Encrypt.

3. For MEL Plat form user is able to select both Compress and Encrypt at same time.The compression check box should be disabled when encryption is selected and vice versa.{code}";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:8:"CB-13350";}}s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2657";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593585089;s:7:"updated";i:1595882529;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:162;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2128";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2581";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:94:"QA: Tools: Test cycle 1 for bugs fixes, improvements and housekeeping of MEIF product (part 2)";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2133";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:3600;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594556070;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:2:"bv";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:163;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2154";s:6:"sprint";a:1:{i:0;s:300:"com.atlassian.greenhopper.service.sprint.Sprint@1ee33c7c[id=1941,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 8,startDate=2020-05-25T08:58:07.341+01:00,endDate=2020-06-12T18:58:00.000+01:00,completeDate=2020-06-15T08:49:00.180+01:00,sequence=1941,goal=Starts : 25th May till 12th June]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2580";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:86:"FF:Document verifiaction for pending documents like MHT Guide,RH/RN,User's Manual..etc";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591890833;s:7:"updated";i:1591890838;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:164;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2166";s:6:"sprint";a:1:{i:0;s:300:"com.atlassian.greenhopper.service.sprint.Sprint@1ee33c7c[id=1941,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 8,startDate=2020-05-25T08:58:07.341+01:00,endDate=2020-06-12T18:58:00.000+01:00,completeDate=2020-06-15T08:49:00.180+01:00,sequence=1941,goal=Starts : 25th May till 12th June]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2579";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:47:"FF:MEIF 1.4.0 test case automation continuation";s:11:"description";s:186:"We should try automate all the possible test cases from "Can be Automated" list of https://docs.google.com/spreadsheets/d/1c0E9hIQbG6Ou-XlaF1HiT8JIiG8OMT9VOtcUaA20Aa4/edit#gid=1696402988";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:230400;s:9:"timespent";i:172800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591957866;s:7:"updated";i:1591957917;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:165;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2260";s:6:"sprint";a:1:{i:0;s:300:"com.atlassian.greenhopper.service.sprint.Sprint@1ee33c7c[id=1941,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 8,startDate=2020-05-25T08:58:07.341+01:00,endDate=2020-06-12T18:58:00.000+01:00,completeDate=2020-06-15T08:49:00.180+01:00,sequence=1941,goal=Starts : 25th May till 12th June]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2578";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:75:"FF:Build with MEIF_CLOUD = "all" option and other clouds on secondary hosts";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591691677;s:7:"updated";i:1591691677;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:166;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2454";s:6:"sprint";a:4:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:2;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:3;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2577";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:60:"RD-OSS: Apply for OSS for new components added in RD project";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869663;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:167;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2574";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:100:"Remove the unnecessary MEIF_SOURCE, MEIF_DOCKER_AZURE_EDGE and AZURE_EDGE_ROLE configuration options";s:11:"description";s:311:"The configuration options MEIF_SOURCE and MEIF_DOCKER_AZURE_EDGE can be removed from MEIF and the relative decisions can be made based on cloud.

Also AZURE_EDGE_ROLE can be removed. we can remove the master/slave options. the master related code should exist only then.

Documentation update also required.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:5:"fixes";a:1:{i:0;s:9:"MEIF-2573";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590631951;s:7:"updated";i:1591009464;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:168;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2573";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:77:"Azure IoT Edge Packages are not being installed for CLOUD "all" configuration";s:11:"description";s:646:"Azure IoT Edge Packages are not being included when Cloud is set to "all" because the option MEIF_DOCKER_AZURE_EDGE is ignored in this case and we are adding packages depending on MEIF_DOCKER_AZURE_EDGE option


{code:java}
# Following is controlled by the option 'MEIF_DOCKER_AZURE_EDGE' in local.conf.
MEIF_EXCLUDE_MOBY_on = " "
MEIF_EXCLUDE_MOBY_off = " moby-engine moby-cli"
IMAGE_INSTALL_EXTRAS_AZURE_IOT_EDGE_off = ""
IMAGE_INSTALL_EXTRAS_AZURE_IOT_EDGE_on = " iotedge ${MEIF_EXCLUDE_MOBY_${MEIF_EXCLUDE_MOBY}} "

IMAGE_INSTALL_EXTRAS_AZURE_IOT_EDGE = "${IMAGE_INSTALL_EXTRAS_AZURE_IOT_EDGE_${MEIF_DOCKER_AZURE_EDGE}}"

{code}
";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:9:"MEIF-2574";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1591016176;s:7:"updated";i:1591016176;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:169;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2571";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:85:"Influxdb steps need to update in MEIF 1.4 GS guide as influxdata.com site get updated";s:11:"description";s:772:"Influxdb setup steps need to update
OLD steps:
1. Install influxDB as a Systemd Service  --> Page Number:-155  --> Needs to update
-2. Install influxDB in a Custom Location --> Page Number:-156 --> Needs to remove-

New Steps for "Install influxDB as a Systemd Service"
-> Prerequisites
       Download influxdb from url
         https://portal.influxdata.com/downloads/
{code}
        wget https://dl.influxdata.com/influxdb/releases/influxdb_1.8.0_amd64.deb
{code}
-> Procedure
      1) Install using dpkg command
             -> sudo dpkg -i influxdb_1.8.0_amd64.deb
       2) Enable the influxDB service and start it.
             -> sudo systemctl enable influxdb && sudo systemctl restart influxdb
 -> Results
            AS it is no need to change";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591967955;s:7:"updated";i:1591968100;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:170;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2570";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:51:"Not getting Collectd option during first boot setup";s:11:"description";s:2380:"*Issue:*
-------------
Not getting Collectd option during first boot setup even after enabling it in local.conf file using 'MEIF_ENABLE_COLLECTD = "y" ' option
Steps:
-----------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200504_0400/omni-linux-x64-online-2.0.0.bin
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200506-222207/outputs/meif-linux-x64-1.4.0.bin
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ~/meif_aws-collectd -m industrial-pc

6) Setup AWS variables in local.conf file
{code}
MEIF_CLOUD ??= "aws"
MEIF_AWS_IOT_HOST_MQTT_ADDR ??= "ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com"
MEIF_AWS_IOT_CLIENT_MY_THING_NAME ??= "ravi_iot"
MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID ??= "ravi_iot"

MEIF_AWS_IOT_SECURITY_ROOT_CA_FILENAME ?= "aws-rootca.pem"
MEIF_AWS_IOT_SECURITY_CERTIFICATE_FILENAME ?= "aws-devcrt.pem"
MEIF_AWS_IOT_SECURITY_PRIVATE_KEY_FILENAME ?= "aws-prvkey.pem"
MEIF_INSTALLATION_PATH ?= "/mel-omni-os/meif"
MEIF_AWS_IOT_CERT_DIR_HOST ?= "/mel-omni-os/security_keys/aws"
SWU_KEYS_PATH ?= "/mel-omni-os/swupdate_keys"
MEIF_ENABLE_COLLECTD = "y"
{code}



7) ./melomni-devshell.sh -b -d ~/meif_aws-collectd -t service-stick-image
8) Prepare service stick image
9) Started First boot setup in target

Expected Output:
------------------------
While First boot setup collectd option should appear

Actual Output:
------------------
Not getting collectd option while first boot setup
{code}
root@collectd:~# ls /etc/ | grep collectd
root@collectd:~# systemctl status collectd
Unit collectd.service could not be found.
root@collectd:~# 
{code}

Even after first boot setup,while executing mel-setup also , not getting collect option
 !collectd_issue.jpg|thumbnail! 

NOTE : Followed workaround mentioned in MEIF-2522 comment https://jira.alm.mentorg.com/browse/MEIF-2522?focusedCommentId=707490&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-707490";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589542223;s:7:"updated";i:1590997397;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:171;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2552";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@67ebfbbc[id=2013,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 10,startDate=2020-07-06T06:38:36.945+01:00,endDate=2020-07-24T17:38:00.000+01:00,completeDate=2020-07-24T20:15:38.837+01:00,sequence=2014,goal=Starts: 6th July  Till 24th July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2569";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:79:"PRE-FF:Test execution for INDOSMR-548 : Productize IPC127E Azure IoT Edge Demo ";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595151135;s:7:"updated";i:1595151146;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:172;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2551";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@67ebfbbc[id=2013,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 10,startDate=2020-07-06T06:38:36.945+01:00,endDate=2020-07-24T17:38:00.000+01:00,completeDate=2020-07-24T20:15:38.837+01:00,sequence=2014,goal=Starts: 6th July  Till 24th July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2568";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:102:"PRE-FF:Test execution for INDOSMR-543 : Provide a reference Docker-based Software Update Configuration";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595493499;s:7:"updated";i:1595493505;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:173;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2550";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@67ebfbbc[id=2013,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 10,startDate=2020-07-06T06:38:36.945+01:00,endDate=2020-07-24T17:38:00.000+01:00,completeDate=2020-07-24T20:15:38.837+01:00,sequence=2014,goal=Starts: 6th July  Till 24th July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2567";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:75:"PRE-FF:Test execution for INDOSMR-533 : Pre-built binary packaging for MEIF";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595150850;s:7:"updated";i:1595219427;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:174;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2549";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@67ebfbbc[id=2013,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 10,startDate=2020-07-06T06:38:36.945+01:00,endDate=2020-07-24T17:38:00.000+01:00,completeDate=2020-07-24T20:15:38.837+01:00,sequence=2014,goal=Starts: 6th July  Till 24th July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2566";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:135:"PRE-FF:Test execution for INDOSMR-532 : Provide a reference security configuration for Device On-boarding and Software Update via Cloud";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595601297;s:7:"updated";i:1595601426;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:175;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2480";s:6:"sprint";a:1:{i:0;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@67ebfbbc[id=2013,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 10,startDate=2020-07-06T06:38:36.945+01:00,endDate=2020-07-24T17:38:00.000+01:00,completeDate=2020-07-24T20:15:38.837+01:00,sequence=2014,goal=Starts: 6th July  Till 24th July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2565";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:70:"PRE:FF:Conflence test plan and Testlink Testplan update for MEIFMR-252";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595610571;s:7:"updated";i:1595610576;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:176;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2552";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2564";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:74:"RC:Test execution for INDOSMR-548 : Productize IPC127E Azure IoT Edge Demo";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594712502;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:177;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2551";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2563";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:98:"RC:Test execution for INDOSMR-543 : Provide a reference Docker-based Software Update Configuration";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594712519;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:178;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2550";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2562";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:71:"RC:Test execution for INDOSMR-533 : Pre-built binary packaging for MEIF";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594712536;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:179;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2549";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2561";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:131:"RC:Test execution for INDOSMR-532 : Provide a reference security configuration for Device On-boarding and Software Update via Cloud";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594712552;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:180;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2552";s:6:"sprint";a:1:{i:0;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2560";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:74:"FF:Test execution for INDOSMR-548 : Productize IPC127E Azure IoT Edge Demo";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:57600;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1596103359;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:181;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2551";s:6:"sprint";a:1:{i:0;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2559";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:98:"FF:Test execution for INDOSMR-543 : Provide a reference Docker-based Software Update Configuration";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594712667;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:182;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2550";s:6:"sprint";a:1:{i:0;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2558";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:71:"FF:Test execution for INDOSMR-533 : Pre-built binary packaging for MEIF";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594712684;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:183;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2549";s:6:"sprint";a:1:{i:0;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2557";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:131:"FF:Test execution for INDOSMR-532 : Provide a reference security configuration for Device On-boarding and Software Update via Cloud";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:57600;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1596100513;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:184;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2556";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:23:"fix meif build failures";s:11:"description";s:66:"jenkins job for meif is failing. it needs to be fixed on pritority";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589543759;s:7:"updated";i:1589543810;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:185;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2552";s:6:"sprint";a:1:{i:0;s:299:"com.atlassian.greenhopper.service.sprint.Sprint@6e261774[id=2012,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 9,startDate=2020-06-15T08:50:57.907+01:00,endDate=2020-07-03T17:50:00.000+01:00,completeDate=2020-07-06T06:30:59.942+01:00,sequence=2012,goal=Starts: 15th June Till 3rd July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2555";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:81:"PRE-FF:Test Development for INDOSMR-548 : Productize IPC127E Azure IoT Edge Demo ";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593592641;s:7:"updated";i:1595522735;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:186;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2551";s:6:"sprint";a:1:{i:0;s:299:"com.atlassian.greenhopper.service.sprint.Sprint@6e261774[id=2012,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 9,startDate=2020-06-15T08:50:57.907+01:00,endDate=2020-07-03T17:50:00.000+01:00,completeDate=2020-07-06T06:30:59.942+01:00,sequence=2012,goal=Starts: 15th June Till 3rd July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2554";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:104:"PRE-FF:Test Development for INDOSMR-543 : Provide a reference Docker-based Software Update Configuration";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593598645;s:7:"updated";i:1593602310;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:187;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2550";s:6:"sprint";a:1:{i:0;s:299:"com.atlassian.greenhopper.service.sprint.Sprint@6e261774[id=2012,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 9,startDate=2020-06-15T08:50:57.907+01:00,endDate=2020-07-03T17:50:00.000+01:00,completeDate=2020-07-06T06:30:59.942+01:00,sequence=2012,goal=Starts: 15th June Till 3rd July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2553";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:77:"PRE-FF:Test Development for INDOSMR-533 : Pre-built binary packaging for MEIF";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593415322;s:7:"updated";i:1595840786;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:188;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2552";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:46:"QA:MEL:Productize IPC127E Azure IoT Edge Demo ";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2480";}s:10:"implements";a:2:{i:0;s:11:"INDOSMR-548";i:1;s:10:"MEIFMR-252";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1590740501;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:189;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2551";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:70:"QA:MEL:Provide a reference Docker-based Software Update Configuration ";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2480";}s:10:"implements";a:2:{i:0;s:10:"MEIFMR-252";i:1;s:11:"INDOSMR-543";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1589468401;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:190;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2550";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:42:"QA:MEL:Pre-built binary packaging for MEIF";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2480";}s:10:"implements";a:2:{i:0;s:10:"MEIFMR-252";i:1;s:11:"INDOSMR-533";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1589468280;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:191;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2549";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:102:"QA:MEL:Provide a reference security configuration for Device On-boarding and Software Update via Cloud";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2480";}s:10:"implements";a:2:{i:0;s:11:"INDOSMR-532";i:1;s:10:"MEIFMR-252";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1589467660;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:192;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2549";s:6:"sprint";a:1:{i:0;s:299:"com.atlassian.greenhopper.service.sprint.Sprint@6e261774[id=2012,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 9,startDate=2020-06-15T08:50:57.907+01:00,endDate=2020-07-03T17:50:00.000+01:00,completeDate=2020-07-06T06:30:59.942+01:00,sequence=2012,goal=Starts: 15th June Till 3rd July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2548";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:137:"PRE-FF:Test Development for INDOSMR-532 : Provide a reference security configuration for Device On-boarding and Software Update via Cloud";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593784831;s:7:"updated";i:1595522262;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:193;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2547";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:114:"MEIF nightly installer should only make the installer if meif jenkins job that build meif on omni2.0 is successful";s:11:"description";s:633:"the MEIF installer job should only create the installer if the following meif job that builds MEIF with Omni2.0 is successful : [
|https://alm-jenkins-02.alm.mentorg.com:8443/job/meif/job/meif_with_omni2.0/]

Success of following can be made optional:

[https://alm-jenkins-02.alm.mentorg.com:8443/job/meif/job/git_meif_with_git_omni2.0/ 
|https://alm-jenkins-02.alm.mentorg.com:8443/job/meif/job/meif_with_omni2.0/]

Success of following should be must:[
https://alm-jenkins-02.alm.mentorg.com:8443/job/meif/job/git_meif_with_installer_omni2.0/
|https://alm-jenkins-02.alm.mentorg.com:8443/job/meif/job/meif_with_omni2.0/]";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1591688454;s:7:"updated";i:1591688454;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:194;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2545";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:127:"MEIF uses invalid terminology in documentation. omni does not use the word "compound update" . it uses the word "system image".";s:11:"description";s:422:"MEIF doc uses the term "compund update" whereas Omni does not have such a term. It only has "system update". 
 we need to update our docs and possibly the MHT tempaltes to use the term system instead of compound.


Update:

Investigate if this change makes sense. The MHT probably uses the 'compound' word. we will have to probably get that updated too. not sure if tools team would be able to do it in a short time.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591796056;s:7:"updated";i:1591796061;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:195;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2428";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2544";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:42:"Add a profile for iotedge in ufw firewall.";s:11:"description";s:133:"`ufw-iotedge` profile should be added in `/etc/ufw/application.d/` on installation which will enable few limited ports for incomings.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589564825;s:7:"updated";i:1591014782;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:196;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2543";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:74:"Improve and unify a method to pass parameter to meif services and scripts ";s:11:"description";s:2723:"currently we have no unified method to pass parameters to the scripts or service files.
 we add variables in service files and scripts. then we use configure_file() to replace variables with values. 
 e.g
*PROBLEM*
 meif-agent-autostart.service has following
{code:java}
EnvironmentFile=/usr/bin/meif-agent-autostart.env
ExecStartPre=+/usr/bin/meif-agent-autostart-config ${MEIF_PERSISTENT_DIRECTORY} ${MEIF_RUN_TIME_CONFIGURATION}
ExecStart=/usr/bin/meif-agent {code}
Service is configuring the parameters it needs using variables ${MEIF_PERSISTENT_DIRECTORY} and ${MEIF_RUN_TIME_CONFIGURATION}. then there is also environemntfile meif-agent-autostart.env which configures the meif-agent-autostart-config script.



meif-agent-autostart-config has following
{code:java}
MEIF_PERSISTENT_DIRECTORY=$1
MEIF_RUN_TIME_CFG=$2
MEIF_AGENT=${AUTOSTART_AGENT}
MEIF_RUN_TIME_CFG_PERSISTENT_PATH=${MEIF_PERSISTENT_DIRECTORY}/${MEIF_RUN_TIME_CFG}
MEIF_AUTOSTART_AGENT_PID_PATH=/var/run/${AUTOSTART_AGENT}.pid
DEBUG=0 {code}
meif-agent-autostart-config script uses the environmentfile to configure it. it also needs some parameters to run. so either is should use parameters or environment variables. using both seems to be incorrect



meif-agent-autostart.env is as follows
{code:java}
AUTOSTART_AGENT=${AUTOSTART_AGENT}
LTTNG_HOME=/tmp {code}


*SOLUTION:*
e.g
 meif-agent-autostart.service should be updated to configure its parameters from environment file. it should not be modified using configure_file()
{code:java}
EnvironmentFile=/usr/bin/meif-agent-autostart.env
ExecStartPre=+/usr/bin/meif-agent-autostart-config
ExecStart=/usr/bin/meif-agent  {code}

meif-agent-autostart.env can be updated as follows
{code:java}
MEIF_PERSISTENT_DIRECTORY=${MEIF_PERSISTENT_DIRECTORY}
MEIF_RUN_TIME_CFG=${MEIF_RUN_TIME_CONFIGURATION}
AUTOSTART_AGENT=${AUTOSTART_AGENT}
LTTNG_HOME=/tmp {code}

meif-agent-autostart-config should be as following
{code:java}
MEIF_AGENT=${AUTOSTART_AGENT}
MEIF_RUN_TIME_CFG_PERSISTENT_PATH=${MEIF_PERSISTENT_DIRECTORY}/${MEIF_RUN_TIME_CFG}
MEIF_AUTOSTART_AGENT_PID_PATH=/var/run/${AUTOSTART_AGENT}.pid
DEBUG=0  {code}
with above changes we only need to update  the meif-agent-autostart.env using the configure_file() instead of updating the service as well as env file.


Update all services and scripts using the above explained method. We can probably have a single environment file for all services/scripts or we can have a separate environment file for each service. i would prefer a single environment file.
 if there is some other method you think is better then please use that .

 objective is to have a unified way of configuring parameters.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589646093;s:7:"updated";i:1590662579;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:197;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2542";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:109:"UnboundLocalError: local variable 'meif_default_certs_warning' referenced before assignment when building AWS";s:11:"description";s:2280:"Building AWS, got the following error:
{code:java}
mel@PKL-AARSLAN-LT:~/project/build$ bitbake -c cleanall meif && bitbake meif
Parsing recipes: 100% |##########################################| Time: 0:00:01
Parsing of 119 .bb files complete (0 cached, 119 parsed). 119 targets, 0 skipped, 1 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
ERROR: Execution of event handler 'meif_validity_checks' failed
Traceback (most recent call last):
  File "/mel-omni-os/industrial-meif/classes/meif-config-validation.bbclass", line 78, in meif_validity_checks(e=<bb.event.BuildStarted object at 0x7f8042034cf8>):
     
    >    if (meif_default_certs_warning == 1):
                 bb.warn(" You are using default certificates for Azure IoT Edge gateway, which means each time MEIF is built, new certificates are generated.\nIt is recommended to provide your own certificates so that Azure IoT Edge gateway and the downstream device(azure agent) use the same certificates.")
UnboundLocalError: local variable 'meif_default_certs_warning' referenced before assignmentERROR: Command execution failed: Traceback (most recent call last):
  File "/mel-omni-os/isar/bitbake/lib/bb/command.py", line 106, in runAsyncCommand
    commandmethod(self.cmds_async, self, options)
  File "/mel-omni-os/isar/bitbake/lib/bb/command.py", line 598, in buildTargets
    command.cooker.buildTargets(pkgs_to_build, task)
  File "/mel-omni-os/isar/bitbake/lib/bb/cooker.py", line 1487, in buildTargets
    bb.event.fire(bb.event.BuildStarted(buildname, ntargets), self.databuilder.mcdata[mc])
  File "/mel-omni-os/isar/bitbake/lib/bb/event.py", line 215, in fire
    fire_class_handlers(event, d)
  File "/mel-omni-os/isar/bitbake/lib/bb/event.py", line 122, in fire_class_handlers
    execute_handler(name, handler, event, d)
  File "/mel-omni-os/isar/bitbake/lib/bb/event.py", line 94, in execute_handler
    ret = handler(event)
  File "/mel-omni-os/industrial-meif/classes/meif-config-validation.bbclass", line 78, in meif_validity_checks
    if (meif_default_certs_warning == 1):
UnboundLocalError: local variable 'meif_default_certs_warning' referenced before assignment
Summary: There were 2 ERROR messages shown, returning a non-zero exit code.
{code}";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"duplicates";a:1:{i:0;s:9:"MEIF-2451";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1589278045;s:7:"updated";i:1589278104;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:198;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2541";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:109:"UnboundLocalError: local variable 'meif_default_certs_warning' referenced before assignment when building AWS";s:11:"description";s:2280:"Building AWS, got the following error:
{code:java}
mel@PKL-AARSLAN-LT:~/project/build$ bitbake -c cleanall meif && bitbake meif
Parsing recipes: 100% |##########################################| Time: 0:00:01
Parsing of 119 .bb files complete (0 cached, 119 parsed). 119 targets, 0 skipped, 1 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
ERROR: Execution of event handler 'meif_validity_checks' failed
Traceback (most recent call last):
  File "/mel-omni-os/industrial-meif/classes/meif-config-validation.bbclass", line 78, in meif_validity_checks(e=<bb.event.BuildStarted object at 0x7f8042034cf8>):
     
    >    if (meif_default_certs_warning == 1):
                 bb.warn(" You are using default certificates for Azure IoT Edge gateway, which means each time MEIF is built, new certificates are generated.\nIt is recommended to provide your own certificates so that Azure IoT Edge gateway and the downstream device(azure agent) use the same certificates.")
UnboundLocalError: local variable 'meif_default_certs_warning' referenced before assignmentERROR: Command execution failed: Traceback (most recent call last):
  File "/mel-omni-os/isar/bitbake/lib/bb/command.py", line 106, in runAsyncCommand
    commandmethod(self.cmds_async, self, options)
  File "/mel-omni-os/isar/bitbake/lib/bb/command.py", line 598, in buildTargets
    command.cooker.buildTargets(pkgs_to_build, task)
  File "/mel-omni-os/isar/bitbake/lib/bb/cooker.py", line 1487, in buildTargets
    bb.event.fire(bb.event.BuildStarted(buildname, ntargets), self.databuilder.mcdata[mc])
  File "/mel-omni-os/isar/bitbake/lib/bb/event.py", line 215, in fire
    fire_class_handlers(event, d)
  File "/mel-omni-os/isar/bitbake/lib/bb/event.py", line 122, in fire_class_handlers
    execute_handler(name, handler, event, d)
  File "/mel-omni-os/isar/bitbake/lib/bb/event.py", line 94, in execute_handler
    ret = handler(event)
  File "/mel-omni-os/industrial-meif/classes/meif-config-validation.bbclass", line 78, in meif_validity_checks
    if (meif_default_certs_warning == 1):
UnboundLocalError: local variable 'meif_default_certs_warning' referenced before assignment
Summary: There were 2 ERROR messages shown, returning a non-zero exit code.
{code}";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:9:"MEIF-2455";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589270978;s:7:"updated";i:1589270978;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:199;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2540";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:66:"Update user reference manual for updates made in  device commands.";s:11:"description";s:447:"please also fix the documentation issue which is follows
In user reference manual's chapter Device Commnad, it says that it returns a json string *not implemented*. it should be "not implemented" **  
all instances where a json string is returned should have double quotes. without double quotes its not a valid json 

 

also document the new features/improvements added to device commands. e.g the tag related stuff, default handlers, etc";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589481434;s:7:"updated";i:1591016055;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:200;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2539";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:95:"Update the *.install files in debian folder to not override files installed by other meif debs ";s:11:"description";s:175:"update debs created by meif. the debs should not be overwriting files of each other. meif.deb installs libmeif.so, meif-lib also installs the same file. this needs to be fixed";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591612165;s:7:"updated";i:1591612219;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:201;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2538";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:124:"Update MEIF control file to have Depends on mbedtls packages to avoid runtime error of missing shared mbed* shared libraries";s:11:"description";s:189:"libmbedtls debian package has following in its control file
Depends: libc6 (>= 2.15), libmbedcrypto0 (>= 2.0), libmbedx509-0 (>= 2.0)
we need to have something similar in our control file";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589303385;s:7:"updated";i:1590662557;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:202;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:4:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:3;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2537";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:57:"Document MEIF design flows from application point of view";s:11:"description";s:671:"Update User reference manual.

if a user writes his own application then we need to document the supporting services we have i.e config service, autostart service,etc  that the user can use with his application.


{code:java}
Fakhir Ansari: I think for this ticket, the new chapter in the reference manual should be titled "Integration of MEIF with system services":https://jira.alm.mentorg.com/browse/MEIF-2537 And it contain different sections for Nucleus, MEL Flex and MEL Omni. Within the MEL Omni chapter, we should describe each aspect of the integration, such as systemd, auto-run scripts, users/groups, different directories/files, daemons/services. {code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:64800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592466730;s:7:"updated";i:1594719725;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:203;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2536";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:78:"MEIF apt repo key is about to expire in July-2020.  expiry needs to be updated";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:9000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589202744;s:7:"updated";i:1589366022;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:204;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2535";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:108:"AWS Cloud Build Proceeding without any error even after removing or commenting "MEIF_AWS_IOT_CERT_DIR_HOST "";s:11:"description";s:5977:"*Issue:*
-------------
AWS Cloud Build Proceeding without any error even after removing or commenting "MEIF_AWS_IOT_CERT_DIR_HOST "

Steps:
-----------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200504_0400/omni-linux-x64-online-2.0.0.bin
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200506-222207/outputs/meif-linux-x64-1.4.0.bin
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ~/meif_aws-test -m industrial-pc

6) Setup AWS variables in local.conf file
{code}
MEIF_CLOUD ??= "aws"
MEIF_AWS_IOT_HOST_MQTT_ADDR ??= "ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com"
MEIF_AWS_IOT_CLIENT_MY_THING_NAME ??= "ravi_iot"
MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID ??= "ravi_iot"

MEIF_AWS_IOT_SECURITY_ROOT_CA_FILENAME ?= "aws-rootca.pem"
MEIF_AWS_IOT_SECURITY_CERTIFICATE_FILENAME ?= "aws-devcrt.pem"
MEIF_AWS_IOT_SECURITY_PRIVATE_KEY_FILENAME ?= "aws-prvkey.pem"
MEIF_INSTALLATION_PATH ?= "/mel-omni-os/meif"

#MEIF_AWS_IOT_CERT_DIR_HOST ?= "/mel-omni-os/security_keys/aws"

{code}



7) ./melomni-devshell.sh -b -d ~/meif_aws-test -t service-stick-image

Expected Output:
------------------------
Build should get warning message and get aborted due to "MEIF_AWS_IOT_CERT_DIR_HOST" variable is not set in local.conf file

Actual Output:
------------------
Build get completed without getting failed 
{code}
ravi@debian:~/mgc/omni_meif_0705/mel-omni-os/2$ ./melomni-devshell.sh -c -d ~/meif_aws-test -m industrial-pc
BSP (Machine) industrial-pc is selected
**************************************************************************
Warning: user id on host does not match the one in container
Warning: group id on host does not match the one in container
**************************************************************************
Locating layers and bitbake...done
Parsing layer configuration files...done
Processing layer dependencies...done
You had no local.conf file. This configuration file has therefore been
created for you with some default values.
You had no bblayers.conf file. This configuration file has therefore been
created for you with some default values.
Locating layers and bitbake...done
Parsing layer configuration files...done
Determining layers to include for DISTRO 'mel-omni'...standard-edition
Determining layers to include for MACHINE 'industrial-pc'...standard-edition
Processing layer dependencies...done
Checking for optional layers...
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-image
    service-stick-image
ravi@debian:~/mgc/omni_meif_0705/mel-omni-os/2$
ravi@debian:~/mgc/omni_meif_0705/mel-omni-os/2$ ./melomni-devshell.sh -b -d ~/meif_aws-test -t service-stick-image
**************************************************************************
Warning: user id on host does not match the one in container
Warning: group id on host does not match the one in container
**************************************************************************
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-image
    service-stick-image
Loading cache: 100% |###############################################################################################################################################################################| Time: 0:00:00
Loaded 121 entries from dependency cache.
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |##########################################################################################################################################################################| Time: 0:00:00
NOTE: No setscene tasks
NOTE: Executing Tasks
WARNING: core-image-1.0-r12 do_swu_generate: signing/encrypting SWUpdate files with the test (default) keys is insecure!
WARNING: development-image-1.0-r12 do_swu_generate: signing/encrypting SWUpdate files with the test (default) keys is insecure!
NOTE: Tasks Summary: Attempted 584 tasks of which 256 didn't need to be rerun and all succeeded.

Summary: There were 2 WARNING messages shown.
ravi@debian:~/mgc/omni_meif_0705/mel-omni-os/2$ 
{code}

{code}
ravi@debian:~/mgc/omni_meif_0705/mel-omni-os/2$ cd ~/meif_aws-test/build/tmp/work/mel-omni-amd64/development-image-industrial-pc-ext4-img/1.0-r12/rootfs/
ravi@debian:~/meif_aws-test/build/tmp/work/mel-omni-amd64/development-image-industrial-pc-ext4-img/1.0-r12/rootfs$ ls etc/ssl/certs/ | grep aws
ravi@debian:~/meif_aws-test/build/tmp/work/mel-omni-amd64/development-image-industrial-pc-ext4-img/1.0-r12/rootfs$ ls
bin  boot  dev  etc  home  initrd.img  initrd.img.old  lib  lib32  lib64  libx32  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var  vmlinuz  vmlinuz.old
ravi@debian:~/meif_aws-test/build/tmp/work/mel-omni-amd64/development-image-industrial-pc-ext4-img/1.0-r12/rootfs$ 
ravi@debian:~/meif_aws-test/build/tmp/work/mel-omni-amd64/development-image-industrial-pc-ext4-img/1.0-r12/rootfs$ ls etc/ssl/certs/ | grep aws
ravi@debian:~/meif_aws-test/build/tmp/work/mel-omni-amd64/development-image-industrial-pc-ext4-img/1.0-r12/rootfs$ 
ravi@debian:~/meif_aws-test/build/tmp/work/mel-omni-amd64/development-image-industrial-pc-ext4-img/1.0-r12/rootfs$ 

{code}

NOTE : Followed workaround mentioned in MEIF-2522 comment https://jira.alm.mentorg.com/browse/MEIF-2522?focusedCommentId=707490&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-707490";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:300;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1589208336;s:7:"updated";i:1590031995;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:205;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2534";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:47:"meif-agent-autostart-config throws syntax error";s:11:"description";s:230:"{code:java}
root@ipcdownstream:~# /usr/bin/meif-agent-autostart-config /persistent/meif meif.ini
/usr/bin/meif-agent-autostart-config: line 63: syntax error near unexpected token `fi'
{code}
!image-2020-05-08-18-30-07-755.png!";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588947353;s:7:"updated";i:1591016045;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:206;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2533";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"'dpkg-reconfigure meif' produces undesired results";s:11:"description";s:650:"since meif deb pkg is not configurable, dpkg-reconfigure meif should not do anything. however the following output was returned:
{code:java}
root@ipcdownstream:~# dpkg-reconfigure meif
The user `meif' is already a member of `meif'.
adduser: Only one or two names allowed.
adduser: Only one or two names allowed.
The user `meif' is already a member of `tracing'.
{code}
 

Update: debhelper and dpkg expect 4 maintainer scripts: preinst, prerm ,postinst, postrm. meif pkg currently contains only postinst. others need to be added as well to remove dpkg warnings and handling inputs provided by apt and dpkg like install, remove, purge, etc.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:46800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590645405;s:7:"updated";i:1591016308;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:207;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2532";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:104:"Documentation for azure iot edge needs to be improved after the option of having MEIF_CLOUD set to 'all'";s:11:"description";s:757:"the current documentation has a dedicated section 'Build and Run Azure Agent as a downstream device' . This says to set MEIF_CLOUD to azure and provides other options that need to be set. this had no issues when we did not have the 'all' value in MEIF_CLOUD.
Now if user set MEIF_CLOUD='all' and want to run azure agent as downstream device then our documentation does not mention what to do. 

we probably need to update this section and provide documentation for configuring the certificate at runtime using the update-ca-certificate command. 

So we can probably have a Run Time Configuration for 'Running Azure Agent As Downstream Device' and also a builf time configuration section.

Whatever makes the documentation easy to read should be done.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2525";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589450967;s:7:"updated";i:1589450967;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:208;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2531";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:40:"Removed unused MEIF_DOCKER_NATIVE option";s:11:"description";s:349:"The MEIF_DOCKER_NATIVE option in the industrial-meif repository is unused. Please remove this option and all related documentation from the getting started guide. Please do also notify TechPubs of this change.

Building MEIF as a native Docker application is not currently supported and this support will likely be added in a future MEIF version.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589528285;s:7:"updated";i:1591016183;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:209;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2530";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:94:"azure-agent fails to connect to the cloud due to time synchronization issue on MEL Omni target";s:11:"description";s:4441:"*Steps Followed*

Built MEL Omni with MEIF support for Azure cloud as per the steps mentioned at [https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-BuildandConfigureDevice].

While booting the target using service stick image, I selected Asia as the time zone region and Karachi as the time zone city.

In the date and time settings, I specified *09:30:45* when it was 9:30 PM on the dial.

*Results*

The target booted fine but date command showed following date whereas the actual date was 9:30 pm PKT :
{code:java}
omni@sumaiyyafarooq:~$ date
Tue 05 May 2020 02:42:45 PM PKT{code}
The I tried to manually run the azure-agent, and it threw following error:
{code:java}
omni@sumaiyyafarooq:~$ azure-agent
INFO: update_status file not found
**** Initializing ****
******** Device Connection Information ********
deviceId: [ipc_sfarooq]
iotHubHostname: [iothub-fafve.azure-devices.net]
deviceKey: [3rtWwcdVsVSHL4ij3sPA2ttrNRGz2tJFTUIa2bjW+uk=]
connectionString: [HostName=iothub-fafve.azure-devices.net;DeviceId=ipc_sfarooq;SharedAccessKey=3rtWwcdVsVSHL4ij3sPA2ttrNRGz2tJFTUIa2bjW+uk=]
zure_main
Azure IoT SDK C version 1.3.7
This sample simulates a Chiller device connected to the Remote Monitoring solution accelerator
Creating IoTHub handle
Supported methods = Reboot,FirmwareUpdate,StartTelemetry,StopTelemetry,EmergencyValveRelease,IncreasePressure,PingDevice,list
Sending sensor value Temperature = 55.000000 F,
Sending sensor value Pressure = 66.000000 psig,
Sending sensor value Humidity = 52.000000 %,
Error: Time:Tue May 5 14:42:51 2020 File:/home/builder/meif/mel-omni-os/meif/framework/cloud/azure/iothub_client/src/iothubtransport_mqtt_common.c Func:mqtt_operation_complete_callback Line:1749 Connection Not Accepted: 0x5: Not Authorized
The device client has been disconnected
Connection Error: Stopping Telemetry
{code}
I reset the time manually as follows and then the azure-agent run fine and my device got connected with the cloud successfully.
{code:java}
omni@sumaiyyafarooq:~$ sudo date +%T%p -s "09:43:30PM"
[sudo] password for omni:
21:43:30PM
omni@sumaiyyafarooq:~$ date
Tue 05 May 2020 09:43:34 PM PKT
omni@sumaiyyafarooq:~$ azure-agent
INFO: update_status file not found
**** Initializing ****
******** Device Connection Information ********
deviceId: [ipc_sfarooq]
iotHubHostname: [iothub-fafve.azure-devices.net]
deviceKey: [3rtWwcdVsVSHL4ij3sPA2ttrNRGz2tJFTUIa2bjW+uk=]
connectionString: [HostName=iothub-fafve.azure-devices.net;DeviceId=ipc_sfarooq;SharedAccessKey=3rtWwcdVsVSHL4ij3sPA2ttrNRGz2tJFTUIa2bjW+uk=]
zure_main
Azure IoT SDK C version 1.3.7
This sample simulates a Chiller device connected to the Remote Monitoring solution accelerator
Creating IoTHub handle
Supported methods = Reboot,FirmwareUpdate,StartTelemetry,StopTelemetry,EmergencyValveRelease,IncreasePressure,PingDevice,list
Sending sensor value Temperature = 57.000000 F,
Sending sensor value Pressure = 68.000000 psig,
Sending sensor value Humidity = 38.000000 %,
The device client is connected to iothub
Connection with Azure successful: Restoring Telemetry State
Confirmation callback received for message 1 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 2 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 3 with result IOTHUB_CLIENT_CONFIRMATION_OK
Device Twin reported properties update completed with result: 204
Sending sensor value Temperature = 55.000000 F,
Sending sensor value Pressure = 68.000000 psig,
Sending sensor value Humidity = 39.000000 %,
Confirmation callback received for message 4 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 5 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 6 with result IOTHUB_CLIENT_CONFIRMATION_OK
Sending sensor value Temperature = 55.000000 F,
Sending sensor value Pressure = 69.000000 psig,
Sending sensor value Humidity = 37.000000 %,
Confirmation callback received for message 7 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 8 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 9 with result IOTHUB_CLIENT_CONFIRMATION_OK
{code}
[~asaleem] pointed out that the agent connection problem occurs due to time synchronization issue.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:3600;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592132455;s:7:"updated";i:1592189390;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:6:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:8:"samr-338";i:2;s:3:"tc2";i:3;s:5:"tools";i:4;s:13:"documentation";i:5;s:7:"triaged";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:210;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2427";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2529";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:46:"MEIF PingDevice command return non JSON string";s:11:"description";s:447:"The PingDevice command is sending non json string. It should return the JSON string. pleas emake sure that all commands should return JSON in a specified format (in success or failure case) like

 {

    'status':0|1 ,

    'response'="Return message of command "

}  

I see out put of PingDevice as 'MEIF executed Ping success.'

Incase the command name is not correct it returns 

{"Response":"Method not recognized"}

 ";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2528";}}s:2:"in";a:1:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-1815";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589451149;s:7:"updated";i:1589875357;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:211;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2427";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2528";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:43:"MEIF commands name alignment in all clouds ";s:11:"description";s:165:"I see some name differences in the commands like in azure Reboot and in aws reboot. Please check it and make sure all MEIF command names are same in all clouds.  ";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2529";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1588933037;s:7:"updated";i:1589875370;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:212;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2527";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:58:"Add internal documentation for  updating the meif apt repo";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589177830;s:7:"updated";i:1589177838;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:213;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2526";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:41:"inconsistent meif.ini and local.conf keys";s:11:"description";s:303:"e.g local.conf has MEIF_AZURE_DEMO_DEVICE_ID and meif.ini has azure_device_id.

All keys shall be same across both files.

Demo updates might also be required since they read these keys.

Update the documentation, GSG guide and appendix chapter.
Fix documentation issues mentioned in the comments";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:192600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591167955;s:7:"updated";i:1591168216;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:214;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2525";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:117:"Documentation for azure agent as a downstream needs to be improved after the option of having MEIF_CLOUD set to 'all'";s:11:"description";s:757:"the current documentation has a dedicated section 'Build and Run Azure Agent as a downstream device' . This says to set MEIF_CLOUD to azure and provides other options that need to be set. this had no issues when we did not have the 'all' value in MEIF_CLOUD.
Now if user set MEIF_CLOUD='all' and want to run azure agent as downstream device then our documentation does not mention what to do. 

we probably need to update this section and provide documentation for configuring the certificate at runtime using the update-ca-certificate command. 

So we can probably have a Run Time Configuration for 'Running Azure Agent As Downstream Device' and also a builf time configuration section.

Whatever makes the documentation easy to read should be done.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2532";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588947210;s:7:"updated";i:1588947221;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:215;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2524";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:113:"Azure downstream device certificate error "SSL routines:tls_process_server_certificate:certificate verify failed"";s:11:"description";s:3420:"*Issue:*
 -------------
 Sending telemetry data to upstream using Iot Edge device gateway failed due to "SSL routines:tls_process_server_certificate:certificate verify failed" error

Steps:
 -----------
 1) Omni Installer: [ftp://inpftp.ina.mentorg.com/pub/omni/200501_0400/omni-linux-x64-2.0.0.bin]
 MIEF installer: [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200504-222207/outputs/meif-linux-x64-1.4.0.bin]
 2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ~/meif_downstream -m industrial-pc

6) Setup Azure-downstream variables in local.conf file
 MEIF_CLOUD ??= "azure"
 MEIF_AZURE_DEMO_DEVICE_ID ??= "azure_device_test"
 MEIF_AZURE_DEMO_HOSTNAME ??= "iotedge.azure-devices.net"
 MEIF_AZURE_DEMO_DEVICE_KEY ??= "4SC1tohk7YwXq2a2TEkgoegbaolYhoRD2Yn6H5rPm6s="
 MEIF_AZURE_IOT_EDGE_GATEWAY_ROOT_CA ?= "/mel-omni-os/certificate/azure-iot-test-only.root.ca.cert.pem"
 SWU_KEYS_PATH = "/mel-omni-os/swupdate_keys"

MEIF_INSTALLATION_PATH ?= "/mel-omni-os/meif"

7) ./melomni-devshell.sh -b -d ~/meif_downstream -t service-stick-image

8)Booted the target with service-stick-image

9)systemctl status meif-agent-autostart

Expected Output:
 ------------------------
 Status log should contain info for telemetry data sending

Actual Output:
 ------------------
 Having certificate errors
{code:java}
root@downstream:~# journalctl -u meif-agent-autostart -f
-- Logs begin at Wed 2020-05-06 08:54:01 IST. --
May 06 09:01:18 downstream azure-agent[1101]: Error: Time:Wed May  6 09:00:54 2020 File:/home/builder/meif/mel-omni-os/meif/framework/cloud/azure/umqtt/src/mqtt_client.c Func:onOpenComplete Line:454 Error: failure opening connection to endpoint
May 06 09:01:18 downstream azure-agent[1101]: The device client has been disconnected
May 06 09:01:18 downstream azure-agent[1101]: [1B blob data]
May 06 09:01:18 downstream azure-agent[1101]: Connection Error: Stopping Telemetry
May 06 09:01:18 downstream azure-agent[1101]: Error: Time:Wed May  6 09:01:02 2020 File:/home/builder/meif/mel-omni-os/meif/framework/cloud/azure/c-utility/adapters/tlsio_openssl.c Func:send_handshake_bytes Line:673 error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed
May 06 09:01:18 downstream azure-agent[1101]: Error: Time:Wed May  6 09:01:02 2020 File:/home/builder/meif/mel-omni-os/meif/framework/cloud/azure/umqtt/src/mqtt_client.c Func:onOpenComplete Line:454 Error: failure opening connection to endpoint
May 06 09:01:18 downstream azure-agent[1101]: The device client has been disconnected
May 06 09:01:18 downstream azure-agent[1101]: [1B blob data]
May 06 09:01:18 downstream azure-agent[1101]: Connection Error: Stopping Telemetry
May 06 09:01:18 downstream azure-agent[1101]: Error: Time:Wed May  6 09:01:18 2020 File:/home/builder/meif/mel-omni-os/meif/framework/cloud/azure/c-utility/adapters/tlsio_openssl.c Func:send_handshake_bytes Line:673 error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:18000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588944434;s:7:"updated";i:1591166535;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:216;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2523";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:46:"/usr/bin/traceiot.sh "Permission denied" ERROR";s:11:"description";s:3926:"*Issue:*
-------------
Getting "/usr/bin/traceiot.sh: 1: eval: /tmp/met_trace.sh: Permission denied" error in meif-agent-autostart status

Steps:
-----------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200501_0400/omni-linux-x64-2.0.0.bin
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200504-222207/outputs/meif-linux-x64-1.4.0.bin
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ~/meif_edge -m industrial-pc

6) Setup Azure-downstream variables in local.conf file
    -> MEIF_CLOUD ??= "azure-edge"
    -> MEIF_AZURE_IOT_EDGE_CONNECTION_STRING ??= "HostName=pbu-dev-iothub-franz.azure-devices.net;DeviceId=tester;SharedAccessKey=I+gZ7sJkeLN+bsjBGJCMSmh85BerTkMBs0u+ykodtO8="
    -> MEIF_INSTALLATION_PATH ?= "/mel-omni-os/meif"
    -> MEIF_SOURCE ??= "off"
    -> MEIF_DOCKER_NATIVE ??= "off"
    -> MEIF_DOCKER_AZURE_EDGE ??= "on"


7) ./melomni-devshell.sh -b -d ~/meif_edge/ -t service-stick-image

8)Booted the target with service-stick-image

9)systemctl status meif-agent-autostart

Expected Output:
------------------------
meif-agent-autostart should not contain any errors

Actual Output:
------------------
Permission denied error in status log
{code}
root@downstream:~# systemctl status meif-agent-autostart
● meif-agent-autostart.service - MEIF Agent Autostart Service
   Loaded: loaded (/lib/systemd/system/meif-agent-autostart.service; enabled; vendor preset: enabled)
   Active: active (running) since Wed 2020-05-06 09:00:47 IST; 8s ago
 Main PID: 1101 (azure-agent)
    Tasks: 2 (limit: 4411)
   Memory: 2.9M
   CGroup: /system.slice/meif-agent-autostart.service
           └─1101 /usr/bin/azure-agent

May 06 09:00:47 downstream azure-agent[1101]: [1B blob data]
May 06 09:00:47 downstream azure-agent[1101]: **** Initializing ****
May 06 09:00:47 downstream azure-agent[1101]: [1B blob data]
May 06 09:00:47 downstream azure-agent[1101]:  ******** Device Connection Information ********
May 06 09:00:47 downstream azure-agent[1101]: [30B blob data]
May 06 09:00:47 downstream azure-agent[1101]: [44B blob data]
May 06 09:00:47 downstream azure-agent[1101]: [58B blob data]
May 06 09:00:47 downstream azure-agent[1101]: [143B blob data]
May 06 09:00:47 downstream azure-agent[1101]: [11B blob data]
May 06 09:00:47 downstream azure-agent[1101]: /usr/bin/traceiot.sh: 1: eval: /tmp/met_trace.sh: Permission denied
root@downstream:~# 
{code}

{code}
root@downstream:~# sudo azure-agent
INFO: update_status file not found

**** Initializing **** 

 ******** Device Connection Information ********
deviceId: [azure_device_test]
iotHubHostname: [iotedge.azure-devices.net]
deviceKey: [4SC1tohk7YwXq2a2TEkgoegbaolYhoRD2Yn6H5rPm6s=]
connectionString: [HostName=iotedge.azure-devices.net;DeviceId=azure_device_test;SharedAccessKey=4SC1tohk7YwXq2a2TEkgoegbaolYhoRD2Yn6H5rPm6s=]
/usr/bin/traceiot.sh: 1: eval: /tmp/met_trace.sh: Permission denied
zure_main

Azure IoT SDK C version 1.3.7
/usr/bin/traceiot.sh: 1: eval: /tmp/met_trace.sh: Permission denied
This sample simulates a Chiller device connected to the Remote Monitoring solution accelerator

Creating IoTHub handle

Supported methods = Reboot,FirmwareUpdate,StartTelemetry,StopTelemetry,EmergencyValveRelease,IncreasePressure,PingDevice,list
Sending sensor value Temperature = 58.000000 F,
Sending sensor value Pressure = 68.000000 psig,
Sending sensor value Humidity = 39.000000 %,
The device client is connected to iothub
{code}";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"customer issue";a:1:{i:0;s:8:"MELO-393";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590658519;s:7:"updated";i:1591680718;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:217;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2522";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"BUILD Failed with "ERROR: meif-1.0-r0 do_dpkg_build"";s:11:"description";s:16736:"*Issue:*
-------------
Build failed with Daily build Installer

Steps:
-----------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200504_0400/omni-linux-x64-online-2.0.0.bin
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200504-222207/outputs/meif-linux-x64-1.4.0.bin
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ~/meif_edge -m industrial-pc

6) Setup Azure-downstream variables in local.conf file
    -> MEIF_CLOUD ??= "azure-edge"
    -> MEIF_AZURE_IOT_EDGE_CONNECTION_STRING ??= "HostName=pbu-dev-iothub-franz.azure-devices.net;DeviceId=tester;SharedAccessKey=I+gZ7sJkeLN+bsjBGJCMSmh85BerTkMBs0u+ykodtO8="
    -> MEIF_INSTALLATION_PATH ?= "/mel-omni-os/meif"
    -> MEIF_SOURCE ??= "off"
    -> MEIF_DOCKER_NATIVE ??= "off"
    -> MEIF_DOCKER_AZURE_EDGE ??= "on"


7) ./melomni-devshell.sh -b -d ~/meif_edge/ -t service-stick-image

Expected Output:
------------------------
Build should get completed without any warnings/errors

Actual Output:
------------------
Build get Failed
{code}
ravi@debian:~/mgc/omni_0505/mel-omni-os/2$ ./melomni-devshell.sh -b -d ~/meif_edge -t service-stick-image
**************************************************************************
Warning: user id on host does not match the one in container
Warning: group id on host does not match the one in container
**************************************************************************
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-image
    service-stick-image
Parsing recipes: 100% |#############################################################################################################################################################################| Time: 0:00:03
Parsing of 123 .bb files complete (0 cached, 123 parsed). 123 targets, 0 skipped, 1 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
WARNING:  You are using default certificates for Azure IoT Edge gateway, which means each time MEIF is built, new certificates are generated.
It is recommended to provide your own certificates so that Azure IoT Edge gateway and the downstream device(azure agent) use the same certificates.
Initialising tasks: 100% |##########################################################################################################################################################################| Time: 0:00:01
NOTE: No setscene tasks
NOTE: Executing Tasks
ERROR: meif-1.0-r0 do_dpkg_build: Error executing a python function in exec_python_func() autogenerated:

The stack trace of python calls that resulted in this exception/failure was:
File: 'exec_python_func() autogenerated', lineno: 2, function: <module>
     0001:
 *** 0002:do_dpkg_build(d)
     0003:
File: '/mel-omni-os/isar/meta/classes/dpkg-base.bbclass', lineno: 130, function: do_dpkg_build
     0126:python do_dpkg_build() {
     0127:    lock = bb.utils.lockfile(d.getVar("REPO_ISAR_DIR") + "/isar.lock",
     0128:                             shared=True)
     0129:    bb.build.exec_func("dpkg_do_mounts", d)
 *** 0130:    bb.build.exec_func("dpkg_runbuild", d)
     0131:    bb.build.exec_func("dpkg_undo_mounts", d)
     0132:    bb.utils.unlockfile(lock)
     0133:}
     0134:
File: '/mel-omni-os/isar/bitbake/lib/bb/build.py', lineno: 249, function: exec_func
     0245:    with bb.utils.fileslocked(lockfiles):
     0246:        if ispython:
     0247:            exec_func_python(func, d, runfile, cwd=adir)
     0248:        else:
 *** 0249:            exec_func_shell(func, d, runfile, cwd=adir)
     0250:
     0251:    try:
     0252:        curcwd = os.getcwd()
     0253:    except:
File: '/mel-omni-os/isar/bitbake/lib/bb/build.py', lineno: 450, function: exec_func_shell
     0446:    with open(fifopath, 'r+b', buffering=0) as fifo:
     0447:        try:
     0448:            bb.debug(2, "Executing shell function %s" % func)
     0449:            with open(os.devnull, 'r+') as stdin, logfile:
 *** 0450:                bb.process.run(cmd, shell=False, stdin=stdin, log=logfile, extrafiles=[(fifo,readfifo)])
     0451:        finally:
     0452:            os.unlink(fifopath)
     0453:
     0454:    bb.debug(2, "Shell function %s finished" % func)
File: '/mel-omni-os/isar/bitbake/lib/bb/process.py', lineno: 182, function: run
     0178:        if not stderr is None:
     0179:            stderr = stderr.decode("utf-8")
     0180:
     0181:    if pipe.returncode != 0:
 *** 0182:        raise ExecutionError(cmd, pipe.returncode, stdout, stderr)
     0183:    return stdout, stderr
Exception: bb.process.ExecutionError: Execution of '/home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/run.dpkg_runbuild.8438' failed with exit code 2:
dpkg-buildpackage: info: source package meif
dpkg-buildpackage: info: source version 1.0
dpkg-buildpackage: info: source distribution stable
dpkg-buildpackage: info: source changed by Fahad Arslan <fahad_arslan@mentor.com>
 dpkg-source -I --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean
   dh_testdir
   dh_auto_clean
   dh_clean
	rm -f debian/debhelper-build-stamp
	rm -rf debian/.debhelper/
	rm -f -- debian/meif.substvars debian/files
	rm -fr -- debian/meif/ debian/tmp/
	find .  \( \( \
		\( -path .\*/.git -o -path .\*/.svn -o -path .\*/.bzr -o -path .\*/.hg -o -path .\*/CVS -o -path .\*/.pc -o -path .\*/_darcs \) -prune -o -type f -a \
	        \( -name '#*#' -o -name '.*~' -o -name '*~' -o -name DEADJOE \
		 -o -name '*.orig' -o -name '*.rej' -o -name '*.bak' \
		 -o -name '.*.orig' -o -name .*.rej -o -name '.SUMS' \
		 -o -name TAGS -o \( -path '*/.deps/*' -a -name '*.P' \) \
		\) -exec rm -f {} + \) -o \
		\( -type d -a -name autom4te.cache -prune -exec rm -rf {} + \) \)
 dpkg-source -I -b .
dpkg-source: warning: no source format specified in debian/source/format, see dpkg-source(1)
dpkg-source: warning: source directory 'meif' is not <sourcepackage>-<upstreamversion> 'meif-1.0'
dpkg-source: info: using source format '1.0'
dpkg-source: info: building meif in meif_1.0.tar.gz
dpkg-source: info: building meif in meif_1.0.dsc
 debian/rules build
dh build
   dh_testdir
   dh_update_autotools_config
   debian/rules override_dh_auto_configure
make[1]: Entering directory '/home/builder/meif/mel-omni-os/meif'
dh_auto_configure --    -DDEMO_ENABLE_TRACING=off    -DBUILD_VERBOSE=on    -DOS=linux    -DCLOUD=azure-edge    -DLINUX_LIBDIR=        -DAZURE_EDGE_ROLE=master    -DMEIF_AZURE_EDGE_CONFIG_SERVICE=/home/builder/meif/meif-azure-edge-config.service    -DMEIF_AZURE_EDGE_CONFIG_SCRIPT=/home/builder/meif/meif-azure-edge-config    -DMEIF_AZURE_EDGE_GATEWAY_DEVICE_CA_CERT=/home/builder/meif/gateway_certificate/certs/iot-edge-device-ca-MyEdgeDeviceCA-full-chain.cert.pem    -DAZURE_IOT_EDGE_GATEWAY_DEVICE_CA_PVT_KEY=/home/builder/meif/gateway_certificate/private/iot-edge-device-ca-MyEdgeDeviceCA.key.pem    -DAZURE_IOT_EDGE_GATEWAY_ROOT_CA=/home/builder/meif/gateway_certificate/certs/azure-iot-test-only.root.ca.cert.pem     -DMEIF_AGENT_USES_SWUPDATE=yes    -DMEIF_AGENT_AUTOSTART_SERVICE=/home/builder/meif/dummy.txt    -DMEIF_AGENT_CONFIG_SERVICE=/home/builder/meif/dummy.txt    -DMEIF_AGENT_CONFIG_SCRIPT=/home/builder/meif/meif-agent-config    -DMEIF_DOCKER_DAEMON_SERVICE=/home/builder/meif/meif-docker-daemon.service    -DMEIF_RUN_TIME_CONFIGURATION=/home/builder/meif/meif.ini 
	install -d obj-x86_64-linux-gnu
	cd obj-x86_64-linux-gnu && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=None -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_INSTALL_LOCALSTATEDIR=/var -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON "-GUnix Makefiles" -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu -DDEMO_ENABLE_TRACING=off -DBUILD_VERBOSE=on -DOS=linux -DCLOUD=azure-edge -DLINUX_LIBDIR= -DAZURE_EDGE_ROLE=master -DMEIF_AZURE_EDGE_CONFIG_SERVICE=/home/builder/meif/meif-azure-edge-config.service -DMEIF_AZURE_EDGE_CONFIG_SCRIPT=/home/builder/meif/meif-azure-edge-config -DMEIF_AZURE_EDGE_GATEWAY_DEVICE_CA_CERT=/home/builder/meif/gateway_certificate/certs/iot-edge-device-ca-MyEdgeDeviceCA-full-chain.cert.pem -DAZURE_IOT_EDGE_GATEWAY_DEVICE_CA_PVT_KEY=/home/builder/meif/gateway_certificate/private/iot-edge-device-ca-MyEdgeDeviceCA.key.pem -DAZURE_IOT_EDGE_GATEWAY_ROOT_CA=/home/builder/meif/gateway_certificate/certs/azure-iot-test-only.root.ca.cert.pem -DMEIF_AGENT_USES_SWUPDATE=yes -DMEIF_AGENT_AUTOSTART_SERVICE=/home/builder/meif/dummy.txt -DMEIF_AGENT_CONFIG_SERVICE=/home/builder/meif/dummy.txt -DMEIF_AGENT_CONFIG_SCRIPT=/home/builder/meif/meif-agent-config -DMEIF_DOCKER_DAEMON_SERVICE=/home/builder/meif/meif-docker-daemon.service -DMEIF_RUN_TIME_CONFIGURATION=/home/builder/meif/meif.ini ..
-- The C compiler identification is GNU 8.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Configuring done
WARNING: Target "meif_docker_daemon" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it.  CMake does not define behavior for this case.
-- Generating done
CMake Warning:
  Manually-specified variables were not used by the project:

    CMAKE_EXPORT_NO_PACKAGE_REGISTRY
    CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY
    CMAKE_INSTALL_LIBDIR
    CMAKE_INSTALL_LOCALSTATEDIR
    CMAKE_INSTALL_SYSCONFDIR
    DEMO_ENABLE_TRACING
    MEIF_AGENT_AUTOSTART_SERVICE
    MEIF_AGENT_CONFIG_SCRIPT
    MEIF_AGENT_CONFIG_SERVICE


-- Build files have been written to: /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu
make[1]: Leaving directory '/home/builder/meif/mel-omni-os/meif'
   debian/rules override_dh_auto_build
make[1]: Entering directory '/home/builder/meif/mel-omni-os/meif'
dh_auto_build  -- meif_docker_daemon
	cd obj-x86_64-linux-gnu && make -j1 meif_docker_daemon
make[2]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -S/home/builder/meif/mel-omni-os/meif -B/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 meif_docker_daemon
make[3]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
/usr/bin/cmake -S/home/builder/meif/mel-omni-os/meif -B/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/CMakeFiles 4
make -f CMakeFiles/Makefile2 docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/all
make[4]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/build.make docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/depend
make[5]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /home/builder/meif/mel-omni-os/meif /home/builder/meif/mel-omni-os/meif/docker/meifdockerdaemon /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/docker/meifdockerdaemon /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/DependInfo.cmake --color=
Scanning dependencies of target meif_docker_daemon
make[5]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make -f docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/build.make docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/build
make[5]: Entering directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
[ 25%] Building C object docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/meif_docker_daemon.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/docker/meifdockerdaemon && /usr/bin/cc -DMEIF_AGENT_USES_SWUPDATE -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif_docker_daemon.dir/meif_docker_daemon.c.o   -c /home/builder/meif/mel-omni-os/meif/docker/meifdockerdaemon/meif_docker_daemon.c
[ 50%] Building C object docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/meif_docker_daemon_handler.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/docker/meifdockerdaemon && /usr/bin/cc -DMEIF_AGENT_USES_SWUPDATE -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif_docker_daemon.dir/meif_docker_daemon_handler.c.o   -c /home/builder/meif/mel-omni-os/meif/docker/meifdockerdaemon/meif_docker_daemon_handler.c
[ 75%] Building C object docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/meif_docker_swupdate_data_process.c.o
cd /home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu/docker/meifdockerdaemon && /usr/bin/cc -DMEIF_AGENT_USES_SWUPDATE -DMEIF_BUILD=1 -DMEIF_DEBUG -DMEIF_OS_LINUX  -g -O2 -fdebug-prefix-map=/home/builder/meif/mel-omni-os/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -std=gnu99 -o CMakeFiles/meif_docker_daemon.dir/meif_docker_swupdate_data_process.c.o   -c /home/builder/meif/mel-omni-os/meif/docker/meifdockerdaemon/meif_docker_swupdate_data_process.c
/home/builder/meif/mel-omni-os/meif/docker/meifdockerdaemon/meif_docker_swupdate_data_process.c:33:10: fatal error: network_ipc.h: No such file or directory
 #include "network_ipc.h"
          ^~~~~~~~~~~~~~~
compilation terminated.
make[5]: *** [docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/build.make:92: docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/meif_docker_swupdate_data_process.c.o] Error 1
make[5]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make[4]: *** [CMakeFiles/Makefile2:242: docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/all] Error 2
make[4]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make[3]: *** [CMakeFiles/Makefile2:249: docker/meifdockerdaemon/CMakeFiles/meif_docker_daemon.dir/rule] Error 2
make[3]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
make[2]: *** [Makefile:180: meif_docker_daemon] Error 2
make[2]: Leaving directory '/home/builder/meif/mel-omni-os/meif/obj-x86_64-linux-gnu'
dh_auto_build: cd obj-x86_64-linux-gnu && make -j1 meif_docker_daemon returned exit code 2
make[1]: *** [debian/rules:24: override_dh_auto_build] Error 2
make[1]: Leaving directory '/home/builder/meif/mel-omni-os/meif'
make: *** [debian/rules:18: build] Error 2
dpkg-buildpackage: error: debian/rules build subprocess returned exit status 2
WARNING: /home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/run.dpkg_runbuild.8438:1 exit 2 from 'sudo -E chroot --userspec=$( id -u ):$( id -g ) /home/mel/project/build/tmp/deploy/buildchroot-target/mel-omni-amd64 /isar/build.sh /home/builder/meif/mel-omni-os/meif amd64'


ERROR: Logfile of failure stored in: /home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/log.do_dpkg_build.8438
ERROR: Task (/mel-omni-os/industrial-meif/recipes-core/meif/meif.bb:do_dpkg_build) failed with exit code '1'
NOTE: Tasks Summary: Attempted 511 tasks of which 0 didn't need to be rerun and 1 failed.

Summary: 1 task failed:
  /mel-omni-os/industrial-meif/recipes-core/meif/meif.bb:do_dpkg_build
Summary: There was 1 WARNING message shown.
Summary: There was 1 ERROR message shown, returning a non-zero exit code.
ravi@debian:~/mgc/omni_0505/mel-omni-os/2$ 
{code}";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:14:"internal issue";a:1:{i:0;s:8:"MELO-399";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589204603;s:7:"updated";i:1590997540;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:218;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2454";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2521";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:28:"OSS: Apply for OSS approvals";s:11:"description";s:45:"Apply for OSS approvals of all new components";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-2231";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1595834363;s:7:"updated";i:1595834363;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:219;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2454";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2501";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:74:"FWUPDATE-MOD: Add support for get-fwupdate-install-progress device command";s:11:"description";s:136:"A command should be added that returns firmware installing progress, it should read the native swupdate unix socket for the live status.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:100800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594202532;s:7:"updated";i:1594388652;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:220;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2454";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2500";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:70:"FWUPDATE-MOD: Add support for get-fwupdate-logs device command in MEIF";s:11:"description";s:161:"A command should be added in MEIF which returns the logs of the swupdate. This is require to figure out the issue remotely in case the firmware update is failed.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:100800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593375528;s:7:"updated";i:1593780969;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:221;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2454";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2494";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"HEALTH: Implement get-diagnostics-mem device command";s:11:"description";s:197:"Return JSON string including total installed memory, Memory utilization and details like: memory_free, memory_buffered, memory_cached, memory_free, memory_slab_recl, memory_slab_unrecl, memory_used";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:54000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592291890;s:7:"updated";i:1592292310;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:222;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2454";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2493";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"HEALTH: Implement get-diagnostics-disk device command";s:11:"description";s:970:"Return DISK utilization.

 

Edit: scope updated after discussion. this command will display disk space usage and disk io utilization.
{code:java}
root@localhost:~# lsblk
NAME             MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                8:0    0   10G  0 disk 
├─sda1             8:1    0   32M  0 part 
├─sda2             8:2    0   64M  0 part 
├─sda3             8:3    0   64M  0 part 
└─sda4             8:4    0  9.9G  0 part 
  ├─mel-systema  253:0    0    4G  0 lvm  /
  ├─mel-systemb  253:1    0    4G  0 lvm  
  └─mel-userdata 253:2    0  256M  0 lvm  /persistent
{code}
mel omni has two parititons, mounted at / and /persistent, as system and userdata. both will be shown separately. systemb is the redundant system partition for rollback in case fwupdate fails. 

 

for space usage, the following library is available in linux as part of libc: <sys/statvfs.h>

for io utilization: /proc/diskstats";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593587861;s:7:"updated";i:1593587872;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:223;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2454";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2492";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"HEALTH: Implement get-diagnostics-thermal device command";s:11:"description";s:32:"Return board temperature in JSON";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:64800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594279346;s:7:"updated";i:1594279352;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:224;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2454";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2491";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"HEALTH: Implement get-diagnostics-ssd device command";s:11:"description";s:72:"Return a JSON containing SSD wear level, power on hours, power on cycles";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592918551;s:7:"updated";i:1592918557;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:225;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2454";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2490";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"HEALTH: Implement get-diagnostics-cpu device command";s:11:"description";s:181:"Returns a JSON containing over all CPU Utilization, along with individual CPU core utilization. if individual CPU core temperature is available then it can also be part of the JSON.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:70200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592201582;s:7:"updated";i:1592201601;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:226;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:3:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2486";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:85:"IoT-edge : Getting Warning for  DPKG_LICENSE for libiothsm-std, moby-cli, moby-engine";s:11:"description";s:5963:"*NOTE: This Warning is appearing only for IoT-Edge Build time*
*Issue:*
-------------
Getting Warning for  DPKG_LICENSE for libiothsm-std, moby-cli, moby-engine

Steps:
-----------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200501_0400/omni-linux-x64-online-2.0.0.bin
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200501-222207/outputs/meif-linux-x64-1.4.0.bin
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ~/meif_edge -m industrial-pc

6) Setup Azure-downstream variables in local.conf file
    -> MEIF_CLOUD ??= "azure-edge"
    -> MEIF_AZURE_IOT_EDGE_CONNECTION_STRING ??= "HostName=pbu-dev-iothub-franz.azure-devices.net;DeviceId=tester;SharedAccessKey=I+gZ7sJkeLN+bsjBGJCMSmh85BerTkMBs0u+ykodtO8="
    -> MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_CERT ?= "/mel-omni-os/certificates/azure/iot-edge-device-ca-MyEdgeDeviceCA-full-chain.cert.pem"
    -> MEIF_AZURE_IOT_EDGE_GATEWAY_DEVICE_CA_PVT_KEY ?= "/mel-omni-os/certificates/azure/iot-edge-device-ca-MyEdgeDeviceCA.key.pem"
    -> MEIF_AZURE_IOT_EDGE_GATEWAY_ROOT_CA ?= "/mel-omni-os/certificates/azure/azure-iot-test-only.root.ca.cert.pem"

    -> MEIF_INSTALLATION_PATH ?= "/mel-omni-os/meif"

7) ./melomni-devshell.sh -b -d ~/meif_edge/

Expected Output:
------------------------
Build should get completed without any warnings/errors

Actual Output:
------------------
Build completed but with warning message
{code}
WARNING: development-image-1.0-r12 do_rootfs_install: Package libiothsm-std has an unknown license, please set DPKG_LICENSE_libiothsm-std.
WARNING: development-image-1.0-r12 do_rootfs_install: Package moby-cli has an unknown license, please set DPKG_LICENSE_moby-cli.
WARNING: development-image-1.0-r12 do_rootfs_install: Package moby-engine has an unknown license, please set DPKG_LICENSE_moby-engine.
{code}

Full Logs:
{code}
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ ./melomni-devshell.sh -c -d ~/meif_edge -m industrial-pc
BSP (Machine) industrial-pc is selected
**************************************************************************
Warning: user id on host does not match the one in container
Warning: group id on host does not match the one in container
**************************************************************************
Locating layers and bitbake...done
Parsing layer configuration files...done
Processing layer dependencies...done
You had no local.conf file. This configuration file has therefore been
created for you with some default values.
You had no bblayers.conf file. This configuration file has therefore been
created for you with some default values.
Locating layers and bitbake...done
Parsing layer configuration files...done
Determining layers to include for DISTRO 'mel-omni'...standard-edition
Determining layers to include for MACHINE 'industrial-pc'...standard-edition
Processing layer dependencies...done
Checking for optional layers...
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-image
    service-stick-image
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ ls certificates/azure/
azure-iot-test-only.root.ca.cert.pem  iot-edge-device-ca-MyEdgeDeviceCA-full-chain.cert.pem  iot-edge-device-ca-MyEdgeDeviceCA.key.pem
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ vim ~/meif_edge/build/conf/local.conf 
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ vim ~/meif_edge/build/conf/local.conf 
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ ./melomni-devshell.sh -b -d ~/meif_edge/
**************************************************************************
Warning: user id on host does not match the one in container
Warning: group id on host does not match the one in container
**************************************************************************
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-image
    service-stick-image
Parsing recipes: 100% |#############################################################################################################################################################################| Time: 0:00:02
Parsing of 123 .bb files complete (0 cached, 123 parsed). 123 targets, 0 skipped, 1 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |##########################################################################################################################################################################| Time: 0:00:01
NOTE: No setscene tasks
NOTE: Executing Tasks
WARNING: development-image-1.0-r12 do_rootfs_install: Package libiothsm-std has an unknown license, please set DPKG_LICENSE_libiothsm-std.
WARNING: development-image-1.0-r12 do_rootfs_install: Package moby-cli has an unknown license, please set DPKG_LICENSE_moby-cli.
WARNING: development-image-1.0-r12 do_rootfs_install: Package moby-engine has an unknown license, please set DPKG_LICENSE_moby-engine.
WARNING: development-image-1.0-r12 do_swu_generate: signing/encrypting SWUpdate files with the test (default) keys is insecure!
NOTE: Tasks Summary: Attempted 546 tasks of which 0 didn't need to be rerun and all succeeded.

Summary: There were 4 WARNING messages shown.
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ 
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:1200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591356819;s:7:"updated";i:1592314547;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:227;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2485";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:141:"Azure-Downstream:Getting Warning for Azure IoT Edge default gateway certificate, even after setting up user defined certificate in local.conf";s:11:"description";s:5912:"*Issue:*
-------------
Getting Warning for Azure IoT Edge default gateway certificate, even after setting up user defined certificate in local.conf

Steps:
-----------
1) Omni Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200501_0400/omni-linux-x64-online-2.0.0.bin
MIEF installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200501-222207/outputs/meif-linux-x64-1.4.0.bin
2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ~/meif_donstream -m industrial-pc

6) Setup Azure-downstream variables in local.conf file
    -> MEIF_CLOUD ??= "azure"
    -> MEIF_AZURE_DEMO_DEVICE_ID ??= "azure_device_test"
    -> MEIF_AZURE_DEMO_HOSTNAME ??= "iotedge.azure-devices.net"
    -> MEIF_AZURE_DEMO_DEVICE_KEY ??= "4SC1tohk7YwXq2a2TEkgoegbaolYhoRD2Yn6H5rPm6s="
    -> MEIF_AZURE_IOT_EDGE_GATEWAY_ROOT_CA ?= "/mel-omni-os/certificates/azure/azure-iot-test-only.root.ca.cert.pem"
    -> MEIF_INSTALLATION_PATH ?= "/mel-omni-os/meif"

7) ./melomni-devshell.sh -b -d ~/meif_donstream

Expected Output:
------------------------
Build should get completed without any warnings/errors

Actual Output:
------------------
Build completed but with warning message for Azure Iot edge rootca certificate
{code}
Parsing recipes: 100% |#############################################################################################################################################################################| Time: 0:00:02
Parsing of 123 .bb files complete (0 cached, 123 parsed). 123 targets, 0 skipped, 1 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
WARNING:  You are using default certificates for Azure IoT Edge gateway, which means each time MEIF is built, new certificates are generated.
It is recommended to provide your own certificates so that Azure IoT Edge gateway and the downstream device(azure agent) use the same certificates.
Initialising tasks: 100% |##########################################################################################################################################################################| Time: 0:00:01
NOTE: No setscene tasks
NOTE: Executing Tasks
{code}

Full Log:
{code}
Summary: There were 4 WARNING messages shown.
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ ./melomni-devshell.sh -c -d ~/meif_donstream -m industrial-pc
BSP (Machine) industrial-pc is selected
**************************************************************************
Warning: user id on host does not match the one in container
Warning: group id on host does not match the one in container
**************************************************************************
Locating layers and bitbake...done
Parsing layer configuration files...done
Processing layer dependencies...done
You had no local.conf file. This configuration file has therefore been
created for you with some default values.
You had no bblayers.conf file. This configuration file has therefore been
created for you with some default values.
Locating layers and bitbake...done
Parsing layer configuration files...done
Determining layers to include for DISTRO 'mel-omni'...standard-edition
Determining layers to include for MACHINE 'industrial-pc'...standard-edition
Processing layer dependencies...done
Checking for optional layers...
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-image
    service-stick-image
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ vim ~/meif_donstream/build/conf/local.conf 
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ vim ~/meif_donstream/build/conf/local.conf 
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_0405/mel-omni-os/2$ ./melomni-devshell.sh -b -d ~/meif_donstream 
**************************************************************************
Warning: user id on host does not match the one in container
Warning: group id on host does not match the one in container
**************************************************************************
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-image
    service-stick-image
Parsing recipes: 100% |#############################################################################################################################################################################| Time: 0:00:02
Parsing of 123 .bb files complete (0 cached, 123 parsed). 123 targets, 0 skipped, 1 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
WARNING:  You are using default certificates for Azure IoT Edge gateway, which means each time MEIF is built, new certificates are generated.
It is recommended to provide your own certificates so that Azure IoT Edge gateway and the downstream device(azure agent) use the same certificates.
Initialising tasks: 100% |##########################################################################################################################################################################| Time: 0:00:01
NOTE: No setscene tasks
NOTE: Executing Tasks
WARNING: development-image-1.0-r12 do_swu_generate: signing/encrypting SWUpdate files with the test (default) keys is insecure!
NOTE: Tasks Summary: Attempted 546 tasks of which 0 didn't need to be rerun and all succeeded.

Summary: There were 2 WARNING messages shown.
{code}


";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588852080;s:7:"updated";i:1591014312;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:228;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2575";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2484";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:71:"Introductory documentation for IoT Device Solution and document outline";s:11:"description";s:685:"Most of the other tickets under this MR do involve documentation as well. The purpose of this ticket is to cover those areas of the IoT Device Solution documentation which aren't covered in the other tivkets, and to address the documentation task from a holistic point of view. The complete outline of the documentation and the introduction chapter should be written under this ticket.

The Omni related work will be completed later on, so likely the MEIF based work will define the initial documentation drafts.

*References*

Following are some base Omni related reference tickets which might be helpful as a guidance for this ticket: MELO-462, MELO-466, MELO-467, MELO-468";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:10:"depends on";a:1:{i:0;s:9:"MEIF-2445";}}s:2:"in";a:1:{s:6:"blocks";a:2:{i:0;s:9:"MEIF-2698";i:1;s:9:"MEIF-2699";}}}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869663;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:229;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2428";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2483";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:42:"Formalize and document x509 based workflow";s:11:"description";s:1474:"-This ticket is work specific to the IoT Device Solution and it likely won't include MEIF product-specific code/documentation-. This work too will likely fall within the MEIF product.

One workflow we support for IoT Device Solution is TPM based authentication (MEIF-2437). The second option is to allow using x509 based certificates, since clouds other than Azure do not support TPM.

Under this ticket, explore use of x509 certificates for different clouds (AWS, Azure, MindSphere?). And then document a workflow for the user on how to manage an x509 based device and how to manage bulk generation and placement of certificates on the device, along with the cloud-side setup of how to auto-provision devices using x509. For example, one technique supported by most clouds is to have an approved CA set in the cloud. Any device whose certificate is signed by that CA will be auto-provisioned.

In this ticket, create a complete workflow for how a certificate based device identity will be managed and how the user can generate certificates for his devices. For bulk provisioning, provide scripts to setup a CA, and to generate device certificates in bulk. Along with documentation on how to install those certificates, depending on different MEIF supported clouds. Do also provide cloud-side setup scripts where possible, for setting up auto-provisioning using x509.

The documentation for this feature will part of the MEIF product and not the IoT Device Solution.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:5:"fixes";a:2:{i:0;s:9:"MEIF-2696";i:1;s:9:"MEIF-2691";}}}s:20:"timeoriginalestimate";i:288000;s:9:"timespent";i:461700;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594645885;s:7:"updated";i:1595307230;s:7:"duedate";s:0:"";s:8:"subtasks";a:3:{i:0;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2680";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:138:"Write script to create dps service and certificates  that can be used by the device to auto provision using dps and connect to the iot hub";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";s:0:"";s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:0:{}s:17:"issuetypecategory";s:4:"TASK";}i:1;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2686";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:122:"Test ADE and 'all' cloud configuration to ensure the changes made under MEIF-2483 do not break any existing functionality.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";s:0:"";s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:0:{}s:17:"issuetypecategory";s:4:"TASK";}i:2;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2689";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"Define the x509 based workflows for mindsphere cloud.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";s:0:"";s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:0:{}s:17:"issuetypecategory";s:4:"TASK";}}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:230;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2480";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:70:"QA:MEL:Change in MEIF 1.4 release scope due to the IoT Device Solution";s:11:"description";s:0:"";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:10:"depends on";a:4:{i:0;s:9:"MEIF-2549";i:1;s:9:"MEIF-2550";i:2;s:9:"MEIF-2551";i:3;s:9:"MEIF-2552";}}s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-252";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1593794094;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:231;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1955";s:6:"sprint";a:3:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";i:1;s:300:"com.atlassian.greenhopper.service.sprint.Sprint@1ee33c7c[id=1941,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 8,startDate=2020-05-25T08:58:07.341+01:00,endDate=2020-06-12T18:58:00.000+01:00,completeDate=2020-06-15T08:49:00.180+01:00,sequence=1941,goal=Starts : 25th May till 12th June]";i:2;s:301:"com.atlassian.greenhopper.service.sprint.Sprint@67ebfbbc[id=2013,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 10,startDate=2020-07-06T06:38:36.945+01:00,endDate=2020-07-24T17:38:00.000+01:00,completeDate=2020-07-24T20:15:38.837+01:00,sequence=2014,goal=Starts: 6th July  Till 24th July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2479";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:73:"QA: Review the feedback provided to Techpubs for MEIF 1.4.0 documentation";s:11:"description";s:173:"This is a follow-up task.

Review the feedback provided to Techpubs for MEIF 1.4.0 getting started guide, user's and reference manual, SA IoT manual and OSS documentation.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:5:"Tests";a:8:{i:0;s:9:"MEIF-1874";i:1;s:9:"MEIF-2572";i:2;s:9:"MEIF-1919";i:3;s:9:"MEIF-2610";i:4;s:9:"MEIF-2611";i:5;s:9:"MEIF-2628";i:6;s:7:"SA-4885";i:7;s:9:"MEIF-1921";}}}s:20:"timeoriginalestimate";i:72000;s:9:"timespent";i:117900;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594990787;s:7:"updated";i:1594991940;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:3:"doc";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:232;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2453";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2478";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:43:"Engineering testing of Docker Stack support";s:11:"description";s:307:"Perform engineering testing of the Docker Stack support, including testing the following scenarios:
 * Test with different cloud platforms (Azure, aws, hawkbit)
 * Test different examples of Docker Stack applications
 * Ensure invalid swu files or invalid sw-description files are correctly handled

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:144000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593139782;s:7:"updated";i:1593782800;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:13:"documentation";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:233;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2453";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:1;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2477";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:43:"Docker Stack related documentation for MEIF";s:11:"description";s:426:"Prepare Docker Stack related customer documentation which will become part of the MEIF documents. The content will cover an introduction to this feature, the swu file generation script, each supported device command and details of the rollback support.

The documentation content can likely be added to the MEIF reference manual, as a new chapter, since this is generic documentation and won't change from one OS to another.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595312522;s:7:"updated";i:1595312529;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:13:"documentation";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:234;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2453";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2476";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"Implement the docker-stack-rollback device command";s:11:"description";s:280:"Implement the docker-stack-rollback device command. Please refer to the following page for a description of this command:

[https://confluence.alm.mentorg.com/display/PS/INDOSMR-543%3A+Docker-based+software+update+configuration]

Also test this command with both Azure and AWS";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594029874;s:7:"updated";i:1594029881;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:235;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2453";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2475";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"Implement the docker-stack-ls device command";s:11:"description";s:339:"Implement the docker-stack-ls device command, which will perform an operation equivalent to "docker stack ls". Please refer to the following page for a description of this command:

[https://confluence.alm.mentorg.com/display/PS/INDOSMR-543%3A+Docker-based+software+update+configuration]

Also test this command with both Azure and AWS";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:1:{i:0;s:9:"MEIF-2473";}}}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:0;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1592208879;s:7:"updated";i:1592208996;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:236;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2453";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2474";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"Implement the docker-stack-ps device command";s:11:"description";s:340:"Implement the docker-stack-ps device command, which will perform an operation equivalent to "docker stack ps". Please refer to the following page for a description of this command:

[https://confluence.alm.mentorg.com/display/PS/INDOSMR-543%3A+Docker-based+software+update+configuration]

Also test this command with both Azure and AWS.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:1:{i:0;s:9:"MEIF-2473";}}}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:0;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1592208829;s:7:"updated";i:1592208829;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:237;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2453";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2473";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"Implement the docker-stack-services device command";s:11:"description";s:352:"Implement the docker-stack-services device command, which will perform an operation equivalent to "docker stack services". Please refer to the following page for a description of this command:

[https://confluence.alm.mentorg.com/display/PS/INDOSMR-543%3A+Docker-based+software+update+configuration]

Also test this command with both Azure and AWS.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:2:{i:0;s:9:"MEIF-2474";i:1;s:9:"MEIF-2475";}}}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:72000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592208968;s:7:"updated";i:1592222221;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:238;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2453";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2472";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:74:"Write a Docker Stack Lua handler to deploy an application from an swu file";s:11:"description";s:513:"Write a Lua handler which will handle the "docker-stack" type images within the swu file. This handler will deploy the specified application or update it if an application by this name already exists. It will perform the following operations:
 * Unpack and "docker load" all Docker images within the swu file
 * Deploy the stack and note its status, whether there were any failures or not
 * Report the status of the update, using the standard firmware update mechanism of MEIF (device twin).

 

 

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594029863;s:7:"updated";i:1594029886;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:239;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2453";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2471";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:59:"Write a script to package a Docker Stack within an swu file";s:11:"description";s:1183:"The task will involve the following actions:
 * Create/obtain a sample Docker Stack application to use as a test (e.g. [https://github.com/dockersamples/example-voting-app])
 * Write a script which takes a YAML compose file as input and generates an swu image from it
 ** The script should pull all Docker images and their dependencies into the swu file
 ** Pull images even if they are not already locally available
 ** Generate a suitable sw-description file and bundle everything (sw-description, YAML compose file, docker images) in an swu image
 ** The swu file must be signed and encrypted (I think we don't need to make these optional)
 * Wrote some automated tests for the script, to make sure it generates valid images
 * Prepare documentation for the script, which will become part of the MEIF documentation.

The script should be cleanly formatted since it will become part of the MEIF product. It should also be documented. We also need to ensure that it is supported on all supported hosts, including Windows 10.

The script can either be a Bash script, or a Python script. Depending on the complexity of logic, since it might involve parsing the YAML file.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:144000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591770642;s:7:"updated";i:1591770642;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:240;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2470";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:63:"MEIF ADE should install project template of relevant cloud only";s:11:"description";s:241:"Currently when ADE with MEIF support is installed into CodeBench IDE, all the project templates (AWS, Azure, Mindconnect) are available in C project wizard.

*Expected*

Only that project should be available for which ADE has been built.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:0;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1588742786;s:7:"updated";i:1588742786;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";i:3;s:13:"nightly-build";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:241;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2467";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:67:"Codebench: MEIF layer variables not getting populated in local.conf";s:11:"description";s:1503:"*Issue:*
 -------
WINDOWS 10: MEIF layer variables not getting populated in local.conf

*Steps to reproduce:*
 ---------------------
 1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200427_0400/omni-windows-x64-online-2.0.0.exe
 Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200428-222207/outputs/meif-windows-x64-1.4.0.zip

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) Started Sourcery Codebench IDE
6) File > New  >MEL Omni Os Project
7) On the 'New Mentor Embedded Linux Omni OS Project' window, provide 'Project Name', select your machine from the BSP (Machine Name) drop-down menu, and click Finish
8)Go to Project -> Properties -> Mel-Building-Setting
     -> Selected Service-stick-image
     -> Added MEIF layer
     -> Save Apply

Expected Output:
------------------
local.conf should contain meif variables

Actual Output:
------------------
No meif related variables populated in local.conf file.
NOTE: In bblayer.conf file , meif layer path is included
Attached screenshot 
 !cb-1.JPG|thumbnail! 
 !cb-2.JPG|thumbnail! 
 !cb-3.JPG|thumbnail! ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1588232738;s:7:"updated";i:1590032026;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:242;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2466";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:64:"nucleus_gcc.cmake file should be removed from MEIF 1.4.0 release";s:11:"description";s:398:"The file *{{<meif_installation>/meif/cmake/nucleus_gcc.cmake}}* is specific to Nucleus OS which is not supported in MEIF 1.4.0 release. Therefore, it should not be bundled with the installer and the cmake directory should not be present in the MEIF 1.4.0 installation.

Similarly, do we need to remove other Nucleus specific files, for example, from the */samples* and */framework/env* folders?";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1588155053;s:7:"updated";i:1588159887;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:3:"tc2";i:3;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:243;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2465";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:70:"Mindconnect agent is not getting auto-started after booting the target";s:11:"description";s:1671:"Steps to reproduce:
 ---------------------
 1) Install Omni: : [ftp://inpftp.ina.mentorg.com/pub/omni/200421_0400/omni-linux-x64-2.0.0.0.bin]
 Install meif installer : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200426-222207/outputs/]

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5)./melomni-devshell.sh -c -d <path-for-new-workspace> -l meif -m industrial-pc

6) Set below parameters in local.conf file
 MEIF_CLOUD = "mindconnect"
 MEIF_MINDSPHERE_SERVER_BASEURL = "<Set to baseURL obtained in JSON.>"
 MEIF_MINDSPHERE_INITIAL_ACCESS_TOKEN = "<Set to access token(at) obtained in JSON.>"
 MEIF_MINDSPHERE_TENANT = "<Set to tenant obtained in JSON.>"
 MEIF_INSTALLATION_PATH =

MEIF_SOURCE = "on"
 MEIF_DOCKER_NATIVE = "off"
 MEIF_DOCKER_AZURE_EDGE = "off"

7)./melomni-devshell.sh -b -d <path-for-new-workspace> -t service-stick-image

8) Booting Target(qemu) using generated service-stick-image

9) Verify the status of agent by running the following command and check the status :
 # ps -aux | grep mindconnect
 # sudo systemctl status meif-agent-autostart

Expected result:
 =============
 After booting the target , meif-agent should get auto-started .

Actual result:
 ============
 Agent is not getting auto-started by default for mindconnect .";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:300;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1588078373;s:7:"updated";i:1588152382;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:244;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:7:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:4;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:5;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:6;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2464";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:81:"Install, Build steps not mentioned in Installation guide/GS for Windows installer";s:11:"description";s:275:"Needs to update MEIF 1.4 with MEIF Windows installer (Install, Build & Flash image steps). It should be aligned with OMNI windows installer steps.

MEIF Windows Installer: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200426-222207/outputs/meif-windows-x64-1.4.0.zip";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869663;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:245;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:6:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:4;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:5;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2462";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:59:"Missing OSS documentation in OSS ReadMe file for MEIF 1.4.0";s:11:"description";s:1497:"When MEIF is installed over Omni installation with SA IoT component checked, the OSS ReadMe file [^MentorEmbeddedIoTFramework(MEIF)__1.4.0__READMEOSS_2020-04-03__13-04-48.html] is installed at {{<install-folder>/docs/meif/legal}}.
 * Following are the differences in the documented OSS in the installed ReadMe file and the [MEIF 1.4 - OSS Approval|https://confluence.alm.mentorg.com/display/PS/MEIF+1.4+-+OSS+Approval].
||Component Name||ReadMe||Confluence||
|CMock - 2.4.3|Present|Absent|
|node-cjson - 0.4.0|Present|Absent|
|zf_log - 0.4.0|Present|Absent|
|JSR 374 (JSON Processing) API - 1.1.4|Absent|Present|
|JSR 374 (JSON Processing) Default Provider - 1.1.4|Absent|Present|
|Siemens MindConnect Library - 3.1.0.0|Absent|Present|
|libiothsm - 1.0.9|Absent|Present|
|libmbedcrypto - 2.16.0|Absent|Present|
|libmbedx509 - 2.16.0|Absent|Present|
|Moby runc - v1.0.0-rc10|Absent|Present|

 * Following components have their OSS documented but the names are different.
||ReadMe||Confluence||Version||
|containerd/containerd|Moby containerd|v1.2.11|
|docker-cli|Moby Client (cli)|v19.03.5|
|engine - docker/engine|Moby Engine|v19.03.5|
|krallin/tini|Moby docker-init (tini)|0.18.0|
|mbed TLS (formerly PolarSSL) - mbedtls|libmbedtls|2.16.0|
|Microsoft Azure Storage Client SDK|Azure/azure-storage-java|8.6.0|

 * *joda - time* verison in ReadMe file is 2.10.5 but Confluence says 2.10.1.
 
*Note*: The final version of HTML file should not have *DRAFT* watermark.
  ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595869663;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:13:"documentation";i:1;s:16:"meif-1.4-qa-bugs";i:2;s:10:"meifmr-225";i:3;s:3:"tc2";i:4;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:246;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:5:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:4;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2461";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:82:"OSS ReadMe for MEIF 1.4.0 is not getting installed in standalone MEIF installation";s:11:"description";s:335:"The file [^MentorEmbeddedIoTFramework(MEIF)__1.4.0__READMEOSS_2020-04-03__13-04-48.html] is not getting installed in standalone installation of MEIF when SA IoT component is not selected.

But when MEIF is installed over Omni installation with SA IoT component checked, this file is installed at {{<install-folder>/docs/meif/legal}}.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591914893;s:7:"updated";i:1594553272;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:6:{i:0;s:13:"documentation";i:1;s:16:"meif-1.4-qa-bugs";i:2;s:10:"meifmr-225";i:3;s:3:"tc2";i:4;s:5:"tools";i:5;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:247;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:3:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2460";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:68:"Mindconnect,Azure ADE Debug to target is getting connection time out";s:11:"description";s:1430:"Steps to reproduce:
---------------------
1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200421_0400/omni-linux-x64-2.0.0.0.bin
Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200426-222207/outputs/meif-linux-x64-1.4.0.bin

2) Using Above installer and by following confluence link to build ade image
https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-BuildandInstalltheADEinCodeBench

3)Install Generated ADE to codebench

4) Created c project for mindconnect demo

5)Build Project successfully

6) Did Debug configuration, setup target IP for ssh

7)  After configuring Debug setting, Started Debug

Expected Output:
--------------------
gdbserver should start in target, and in codebench , it will stop at breakpoint

Actual Output:
----------------------
gdbserver started in target, but in codebench getting Connection timeout error
 !mconn-issue-1.JPG|thumbnail! 

*Target Ps Output:*
{code}
root@localhost:~# ps aux | grep min
meif 935 0.0 0.2 100084 10696 ? Ss 20:23 0:00 /usr/bin/mindconnect-agent
root 959 0.0 0.0 9776 2320 pts/1 S 20:26 0:00 /usr/bin/gdbserver localhost:10000 /tmp/project_minconnect_demo1588019150982
root 963 0.0 0.0 520 4 pts/1 t+ 20:26 0:00 /tmp/project_minconnect_demo1588019150982
root 972 0.0 0.0 6384 888 pts/0 S+ 20:27 0:00 grep min
root@localhost:~#
{code}
";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588843879;s:7:"updated";i:1590032165;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:248;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:4:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2458";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:61:"Stepping into MEIF library functions behaves as stepping over";s:11:"description";s:1147:"*Steps Followed*
 # Follow [MEIF-1.4 - Getting Started Guide|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide] to build ADE for AWS.
 # Install ADE in CodeBench IDE and restarted IDE.
 # Create _MEIF AWS Demo Project_ using the installed ADE.
 # Right click the project and select _Properties_. Go to _C/C++ Build > Settings_.
 # In the _Tool Settings_ tab, select _Debian x86_64 GNU/Linux C Compiler (v2.0)_ > _Optimization_ and set _Optimization Level_ to _None (-O0)._ Now select _Debugging_ and set _Debug Level_ to _Maximum (-g3)_.
 # Click on _Apply and Close_.
 # Right click the project and select _Build Project_.
 # Launch a debug session on the target via _Linux GDB Server_ launch target. I specified following credentials while launching the debug session.
 ** username: omni
 ** password: omni
 # In _linux_aws.c_ file, put a break point at _env_init()_ (line # 539) and resume the debug session.
 # When the breakpoint is hit, try to step into _env_init()_.

*Results*

Step in behaves like step over because MEIF library does not contain debug information.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:174600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589785448;s:7:"updated";i:1592205646;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:249;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2457";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:94:"Mindconnect device is not getting online when target is booted using build time configurations";s:11:"description";s:1674:"Steps to reproduce:
---------------------
1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200421_0400/omni-linux-x64-2.0.0.0.bin
Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200421-222207/outputs/meif-linux-x64-1.4.0.bin

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5)./melomni-devshell.sh -c -d <path-for-new-workspace> -l meif -m industrial-pc

6) Set below parameters in local.conf file
MEIF_CLOUD = "mindconnect"
MEIF_MINDSPHERE_SERVER_BASEURL = "<Set to baseURL obtained in JSON.>"
MEIF_MINDSPHERE_INITIAL_ACCESS_TOKEN = "<Set to access token(at) obtained in JSON.>"
MEIF_MINDSPHERE_TENANT = "<Set to tenant obtained in JSON.>"
MEIF_INSTALLATION_PATH =

MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"

7)./melomni-devshell.sh -b -d <path-for-new-workspace> -t service-stick-image

8) Booting Target(qemu) using generated service-stick-image

9) Go to the MindSphere web dashboard and then go to Asset Manager, open your asset and then verify the boarding status.

Expected result:
=============
The boarding status of the device should turn online after the target is booted .

Actual result:
============
After booting the target , the boarding status of device is not changing to online .";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:10800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587641028;s:7:"updated";i:1588083528;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:250;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2456";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:25:"meif test automation plan";s:11:"description";s:45:"prepare a plan to do automated tested of MEIF";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:82800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588591194;s:7:"updated";i:1588591212;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:251;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2455";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:72:"Update ADE files in industrial-meif to merge changes made under MELO-340";s:11:"description";s:43:"rebase ADE files.
do basic testing of ADE.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:5:"fixes";a:1:{i:0;s:9:"MEIF-2541";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:25200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588958801;s:7:"updated";i:1589270811;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:252;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2454";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:47:"RD-MEIF: Productize IPC127E Azure IoT Edge Demo";s:11:"description";s:172:"Please refer to the associated INDOSMR-548 for more information. This epic contains MEIF-specific work. A separate epic exists for IPC product specific work (MEIF-2576).";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:11:"INDOSMR-548";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1593587824;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:253;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2453";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:51:"RD-MEIF: Docker-based software update configuration";s:11:"description";s:55:"Please refer to the associated INDOSMR-543 for details.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:11:"INDOSMR-543";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595309161;s:7:"updated";i:1595309161;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:254;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:3:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2452";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:65:"MEIF layer is not getting included while creating build directory";s:11:"description";s:3128:"*Issue:*
 -------
MEIF layer is not getting included in bblayer.conf file

*Steps to reproduce:*
 ---------------------
 1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200421_0400/omni-linux-x64-2.0.0.0.bin
 Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200421-222207/outputs/meif-linux-x64-1.4.0.bin

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) ./melomni-devshell.sh -c -d ../../aws_build -l meif -m industrial-pc

Expected Output:
 ---------------------
Should include meif layer in bblayer.conf file

Actual Output:
 -------------------
MEIF layer not getting included
{code}
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/omni_bin/mel-omni-os/2$ cat ../../aws_build/build/conf/bblayers.conf
MELDIR = "/mel-omni-os"

LCONF_VERSION = "1"
BBPATH = "${TOPDIR}"
BBFILES ?= ""
BBLAYERS = "\
    /mel-omni-os/mel-omni \
    /mel-omni-os/mel-core \
    /mel-omni-os/isar/meta \
"
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/omni_bin/mel-omni-os/2$
{code}

{code}
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/omni_bin/mel-omni-os/2$ ./melomni-devshell.sh -c -d ../../aws_build -l meif -m industrial-pc
BSP (Machine) industrial-pc is selected
**************************************************************************
Warning: user id on host does not match the one in container
Warning: group id on host does not match the one in container
**************************************************************************
Locating layers and bitbake...done
Parsing layer configuration files...done
Processing layer dependencies...done
You had no local.conf file. This configuration file has therefore been
created for you with some default values.
You had no bblayers.conf file. This configuration file has therefore been
created for you with some default values.
Locating layers and bitbake...done
Parsing layer configuration files...done
Determining layers to include for DISTRO 'mel-omni'...standard-edition
Determining layers to include for MACHINE 'industrial-pc'...standard-edition
Processing layer dependencies...done
Checking for optional layers...
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-image
    service-stick-image
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/omni_bin/mel-omni-os/2$ cat ../../aws_build/build/conf/bblayers.conf
MELDIR = "/mel-omni-os"

LCONF_VERSION = "1"
BBPATH = "${TOPDIR}"
BBFILES ?= ""
BBLAYERS = "\
    /mel-omni-os/mel-omni \
    /mel-omni-os/mel-core \
    /mel-omni-os/isar/meta \
"
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/omni_bin/mel-omni-os/2$
{code}";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:13:"is blocked by";a:1:{i:0;s:8:"CB-12768";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588067614;s:7:"updated";i:1590032170;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:255;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2451";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:125:"AZURE: azure-iot-setup.sh getting failed while doing apt update inside while building container with error "DNS lookup error"";s:11:"description";s:2790:"*Issue:*
 -------
azure-iot-setup.sh getting failed while doing apt update inside while building container with error "DNS lookup error"

*Steps to reproduce:*
 ---------------------
 1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200421_0400/omni-linux-x64-2.0.0.0.bin
 Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200421-222207/outputs/meif-linux-x64-1.4.0.bin

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5) cd <meif-installation-path>/samples/azure/scripts

6) ./azure-iot-setup.sh

Expected Output:
 ---------------------
 azure-iot-setup.sh script should proceed without any issue.

Actual Output:
 -------------------
 Getting error azure-iot-setup.sh getting failed while doing apt update inside while building container with error "DNS lookup error"
{code}
ravi@debian:~/mgc/omni_meif_2204/meif/samples/azure/scripts$ ./azure-iot-setup.sh 
Building the Docker image...
Sending build context to Docker daemon  11.26kB
Step 1/8 : FROM mcr.microsoft.com/azure-cli:2.3.1
2.3.1: Pulling from azure-cli
aad63a933944: Pull complete 
f229563217f5: Pull complete 
bce07ec39263: Pull complete 
7fd926f0f7cc: Pull complete 
075e2aee5115: Pull complete 
5d38e80020ff: Pull complete 
76e7a2c48bab: Pull complete 
803669a1dcfa: Pull complete 
e6e7ff9f9c90: Pull complete 
224deca189b4: Pull complete 
0eb5506ec7a3: Pull complete 
Digest: sha256:dfa3a1756690f6302d0eb19e94a4931fd3d15308293cef9a170de80de26b664c
Status: Downloaded newer image for mcr.microsoft.com/azure-cli:2.3.1
 ---> 0f9314c720f1
Step 2/8 : RUN apk update   && 	apk add nodejs npm jq gettext
 ---> Running in 2ac28eaebc5e
fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/main/x86_64/APKINDEX.tar.gz
ERROR: http://dl-cdn.alpinelinux.org/alpine/v3.11/main: DNS lookup error
fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/community/x86_64/APKINDEX.tar.gz
ERROR: http://dl-cdn.alpinelinux.org/alpine/v3.11/community: DNS lookup error
v3.11.5-24-g4a0c4741e7 [http://dl-cdn.alpinelinux.org/alpine/v3.11/main]
v3.11.5-25-g9f05c49f12 [http://dl-cdn.alpinelinux.org/alpine/v3.11/community]
2 errors; 11271 distinct packages available
The command '/bin/sh -c apk update   && 	apk add nodejs npm jq gettext' returned a non-zero code: 2
ravi@debian:~/mgc/omni_meif_2204/meif/samples/azure/scripts$ 
{code}

*NOTE: In Ubuntu 18.04 system it is working as expected*";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:16:"is duplicated by";a:1:{i:0;s:9:"MEIF-2542";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:16:"Cannot Reproduce";s:14:"resolutiondate";i:1587557738;s:7:"updated";i:1590032174;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:256;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:3:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2450";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:73:"aws-prvkey.pem cannot be read while debugging aws-agent through CodeBench";s:11:"description";s:1430:"*Steps Followed*
 # Followed [MEIF-1.4 - Getting Started Guide|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide] to build service stick image and ADE for AWS.
 # Installed ADE in CodeBench IDE and restarted IDE.
 # Created _MEIF AWS Demo Project_ using the installed ADE.
 # Right click the project and select _Properties_. Go to _C/C++ Build > Settings_.
 # In the _Tool Settings_ tab, select _Debian x86_64 GNU/Linux C Compiler (v2.0)_ > _Optimization_ and set _Optimization Level_ to _None (-O0)._ Now select _Debugging_ and set _Debug Level_ to _Maximum (-g3)_.
 # Click on _Apply and Close_.
 # Right click the project and select _Build Project_.
 # Launched a debug session on the target via _Linux GDB Server_ launch target. I specified following credentials while launching the debug session.
 ** username: omni
 ** password: omni
 # Resumed the session.

*Results*

You will see following error in the GDB Server console.

!image-2020-04-21-13-06-11-938.png|thumbnail!

After discussing the issue with [~asaleem], he pointed out that the user trying to access the AWS certificates when the debug session is launched does not have read permissions for *aws-prvkey.pem* file.

!image-2020-04-21-13-08-06-749.png|thumbnail!

Changing this file's permissions as follows has resolved the issue:

{{sudo chmod 775 /etc/ssl/certs/aws-prvkey.pem}}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:18060;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587558210;s:7:"updated";i:1591877535;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:257;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2449";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:37:"meif deb package license info missing";s:11:"description";s:531:"While building MEL, the following warning is received:
{code:java}
WARNING: development-image-1.0-r11 do_rootfs_install: Package meif has an unknown license, please set DPKG_LICENSE_meif.
{code}
Solution 1:

Create a global variable DPKG_LICENSE_meif = "<LICENSE>". This variable bypasses the dpkg-licenses check. 

Solution 2:

Add licensing information to meif deb pkg. /usr/share/doc/meif/copyright doesn't exist currently.

 

The industrial-meif layer overall needs some housekeeping regarding licensing info.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587487597;s:7:"updated";i:1588067270;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:258;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2448";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:74:"AZURE: azure-iot-setup.sh pointing to Wrong Docker file "Dockerfile.amd64"";s:11:"description";s:2159:"*Issue:*
-------
azure-iot-setup.sh script pointing to wrong docker file "Dockerfile.amd64"

*Steps to reproduce:*
---------------------
1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200418_0400/omni-linux-x64-2.0.0.0.bin
Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200419-222208/outputs/meif-linux-x64-1.4.0.bin

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.


5) cd <meif-installation-path>/samples/azure/scripts

6)  ./azure-iot-setup.sh

Expected Output:
---------------------
azure-iot-setup.sh script should proceed without any issue.

Actual Output:
-------------------
Getting error "/home/ravi/jenkins/workspace/OMNI/omni_bin/meif/samples/azure/scripts/Dockerfile.amd64: no such file or directory"
{code}
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/omni_bin/meif/samples/azure/scripts$ ./azure-iot-setup.sh
Building the Docker image...
unable to prepare context: unable to evaluate symlinks in Dockerfile path: lstat /home/ravi/jenkins/workspace/OMNI/omni_bin/meif/samples/azure/scripts/Dockerfile.amd64: no such file or directory
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/omni_bin/meif/samples/azure/scripts$
{code}
NOTE: script is pointing to "Dockerfile.amd64" , which is not present in directory
{code}
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/omni_bin/meif/samples/azure/scripts$ ls -al
total 20
drwxrwxr-x 3 ravi ravi 4096 Apr 20 18:46 .
drwxrwxr-x 5 ravi ravi 4096 Apr 20 18:46 ..
drwxrwxr-x 2 ravi ravi 4096 Apr 20 18:46 azure-docker
-rwxr-xr-x 1 ravi ravi 2180 Apr 19 21:01 azure-iot-setup.sh
-rw-rw-r-- 1 ravi ravi  305 Apr 19 21:01 Dockerfile
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/omni_bin/meif/samples/azure/scripts$
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:300;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587399236;s:7:"updated";i:1590032178;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:259;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2447";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:80:"Boarding status of mindconnect device is not changing after device is offboarded";s:11:"description";s:1644:"Steps to reproduce:
---------------------
1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200409_0400/omni-linux-x64-2.0.0.0.bin
Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200415-222206/outputs/meif-linux-x64-1.4.0.bin

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.

5)./melomni-devshell.sh -c -d <path-for-new-workspace> -l meif -m industrial-pc

6) Set below parameters in local.conf file
MEIF_CLOUD = "mindconnect"
MEIF_MINDSPHERE_SERVER_BASEURL = "<Set to baseURL obtained in JSON.>"
MEIF_MINDSPHERE_INITIAL_ACCESS_TOKEN = "<Set to access token(at) obtained in JSON.>"
MEIF_MINDSPHERE_TENANT = "<Set to tenant obtained in JSON.>"
MEIF_INSTALLATION_PATH =

MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"

7)./melomni-devshell.sh -b -d <path-for-new-workspace> -t service-stick-image

8) Booting Target(qemu) using generated service-stick-image

9) After the device is onboarded , click the offboard button and verify the boarding status

Expected result:
=============
The boarding status should be offline once the device is offboarded .

Actual result:
============
The boarding status is still online even if the device is offboard and the agent is not running";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:3600;s:10:"resolution";s:16:"Cannot Reproduce";s:14:"resolutiondate";i:1587563519;s:7:"updated";i:1587629093;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:260;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2575";s:6:"sprint";a:1:{i:0;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2446";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:50:"Prepare a production configuration for MEIF + Omni";s:11:"description";s:615:"Prepare a production configuration for MEIF + Omni and provide it in a customer-usable form, such as a pre-built image. Also prepare the documentation for production and deployment workflows and all it's possible use-cases including the following:
 * How to apply development image customizations to the production image and how to deploy the production image
 * How to configure the system on first boot
 * How to generate a device identity (TPM or x509 based) and how to onboard the device on different clouds
 * How to secure the production system using advanced features such as firewall, TPM, encrypted FS.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:201600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1593598900;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:261;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2575";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:1;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2445";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:51:"Prepare a development configuration for MEIF + Omni";s:11:"description";s:805:"Prepare a development configuration for MEIF + Omni and provide it in a customer-usable form, such as a pre-built image. Also prepare the documentation for this development workflow and all it's possible use-cases including the following:
 * How to deploy the system
 * How to configure the system on first boot
 * How to generate a device identity (TPM or x509 based) and how to onboard the device on different clouds
 * How to build MEIF applications
 * How to debug MEIF applications
 * How to prepare a custom MEIF application for production use

*References*

Following are some base Omni related reference tickets which might be helpful as a guidance for this ticket: MELO-462, MELO-466, MELO-467, MELO-468

The following ticket describes how the installers would be laid out: MELO-494";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2484";}}}s:20:"timeoriginalestimate";i:201600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595932188;s:7:"duedate";s:0:"";s:8:"subtasks";a:4:{i:0;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2713";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:33:"Install MEIF from debian package.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";s:0:"";s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:0:{}s:17:"issuetypecategory";s:4:"TASK";}i:1;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2714";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:32:"Add manifest files to build MEIF";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";s:0:"";s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:0:{}s:17:"issuetypecategory";s:4:"TASK";}i:2;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2715";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"Investigate how MEIF goes into the unified installer.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";s:0:"";s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:0:{}s:17:"issuetypecategory";s:4:"TASK";}i:3;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2716";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"Investigate if MEIF package feed needs to be updated.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";s:0:"";s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:0:{}s:17:"issuetypecategory";s:4:"TASK";}}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:262;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2444";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:102:"Build time cloud configurations set in local.conf are not used in ADE based debugging workflow - Azure";s:11:"description";s:1679:"*Steps Followed*
 # Followed [MEIF-1.4 - Getting Started Guide|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide] to build service stick image and ADE for Azure.
 Due to MELO-321, the workaround mentioned in the PR at https://jira.alm.mentorg.com/browse/MELO-321?focusedCommentId=702817&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-702817 was manually applied.
 *Note*: Following build time configurations were set in _local.conf_ before building MEL:
 ** MEIF_CLOUD
 ** MEIF_AZURE_DEMO_DEVICE_ID
 ** MEIF_AZURE_DEMO_HOSTNAME
 ** MEIF_AZURE_DEMO_DEVICE_KEY
 # Installed ADE in CodeBench IDE and restarted IDE.
 # Built _MEIF Azure Demo Project_ using the installed ADE. Due to MEIF-2440, demo was built with default optimization and debug flags.
 # Launched a debug session on the target via _Linux GDB Server_ launch target.
 # Resumed the session.

*Results*

The session got terminated quickly.

In the GDB server console, it can be seen that device connection strings are empty and they are not picked up from the  configurations set up at build time.

!image-2020-04-17-11-53-56-512.png|thumbnail!

*Observations*
 * If the same azure-agent is manually run on target, the device gets connected with cloud and telemetry data is also continuously transmitted. It means that the build time device settings are successfully used.
 * If meif.ini file with the device credentials is manually placed at /run/media/persistent, debugging works fine.

*Expected Results*

The debug session should not get terminated and build time device credentials should be used while debugging the demo.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:10800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587353921;s:7:"updated";i:1589525911;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:263;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2443";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:59:"Use bootloader interface to indicate firwmare update status";s:11:"description";s:463:"Currently , in order to get firmware update status , a lua script is used which stores the expected kernel name in persistent directory on post update. After the system reboots, it compares the booted kernel with expected kernel and provide the update status.
But bootloader also stores this information, it can be used directly.

Also note that suricatta calls get_state() to determine if the update is ok or failed and will report its status back to Hawkbit.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588663203;s:7:"updated";i:1589276149;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:264;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2428";s:6:"sprint";a:4:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:2;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:3;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2442";s:6:"status";s:11:"Code Review";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:65:"Enable the Azure cloud solution with TPM and encrypted FS enabled";s:11:"description";s:1241:"Read about the Azure device provisioning service and use of TPM with it. You can refer to the following resources online:
 * Different OEM authentication methods:
 [https://docs.microsoft.com/en-us/azure/iot-dps/concepts-device-oem-security-practices]
 * TPM concepts:
 [https://docs.microsoft.com/en-us/azure/iot-dps/concepts-tpm-attestation]
 [https://trustedcomputinggroup.org/wp-content/uploads/TPM-2.0-A-Brief-Introduction.pdf]
 * C SDK sample setup:
 [https://docs.microsoft.com/en-us/azure/iot-dps/quick-create-simulated-device]
 [https://docs.microsoft.com/en-us/azure/iot-edge/how-to-auto-provision-simulated-device-linux]

Then run the MEIF Azure cloud sample with Azure device provisioning service enabled and it it to auto-provision an MEIF based device which contains a TPM (Omni only supports a software based TPM for now).

Document this setup in the MEIF customer documentation and modify MEIF if any changes are required in it, to enable this support within the build or to enable building of a sample application based on TPM. Also test the Azure TPM usage with an encrypted Omni file system and document how to enable the encrypted file system (if it isn't planned to be documented in the base Omni documents).";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"parent task of";a:1:{i:0;s:9:"MEIF-2722";}}}s:20:"timeoriginalestimate";i:288000;s:9:"timespent";i:374400;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595972619;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:265;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2428";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2441";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:45:"Test MEIF execution with the firewall enabled";s:11:"description";s:270:"Test execution of the various MEIF sample applications while the firewall in the Omni OS is kept enabled using its default policy of allow all outgoing and disallow all incoming. Adjust this default policy if it needs any modifications to allow running the MEIF samples.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:50400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589564800;s:7:"updated";i:1592918734;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:266;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2440";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:73:"MEIF Azure demo building fails with -O0 optimization and -g3 debug levels";s:11:"description";s:27133:"*Steps Followed*
 # Followed [MEIF-1.4 - Getting Started Guide|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide] to build service stick image and ADE for Azure. Due to MELO-321, the workaround mentioned in the PR at https://jira.alm.mentorg.com/browse/MELO-321?focusedCommentId=702817&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-702817 was manually applied.
 # Install ADE in CodeBench IDE and restarted IDE.
 # Go to _File > New > C Project_.
 # Provide any valid name for project and select _Executable > MEIF Azure Demo Project_. Click _Next_.
 # Select the installed ADE in _MEL ADE_ combo box. Click _Next_.
 # Uncheck _Create debug launch configuration_. Click _Finish_.
 # Right click the project and select _Properties_. Go to _C/C++ Build > Settings_.
 # In the _Tool Settings_ tab, select _Debian x86_64 GNU/Linux C Compiler (v2.0)_ > _Optimization_ and set _Optimization Level_ to _None (-O0)._ Now select _Debugging_ and set _Debug Level_ to _Maximum (-g3)_.
 # Click on _Apply and Close_.
 # Right click the project and select _Build Project_.

*Results*

Project building will fail with following error:
{code:java}
11:19:16 **** Build of configuration Debug for project azure_demo ****
[Running in image <ade-development-ade-mel-omni-industrial-pc-2.0.1587022316-20200416082834:latest>]
make all
[1] Invoking Pre-Build commands in the host:
--------------------------------------------
[2] Invoking Build commands in the container: fc4244cf6d2f6009292f315a9506e3b0cd4af319bda38e31e3765ca5814dab10 
---------------------------------------------
Building file: ../src/linux/azure_trace_hooks.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -O0 -g3 -w -c -fmessage-length=0 -pthread -Wformat -Werror=format-security -mtune=generic -march=x86-64 -fcommon -MMD -MP -MF"src/linux/azure_trace_hooks.d" -MT"src/linux/azure_trace_hooks.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/azure_trace_hooks.o" "../src/linux/azure_trace_hooks.c"
Finished building: ../src/linux/azure_trace_hooks.c
 
Building file: ../src/linux/linux_azure.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -O0 -g3 -w -c -fmessage-length=0 -pthread -Wformat -Werror=format-security -mtune=generic -march=x86-64 -fcommon -MMD -MP -MF"src/linux/linux_azure.d" -MT"src/linux/linux_azure.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/linux_azure.o" "../src/linux/linux_azure.c"
Finished building: ../src/linux/linux_azure.c
 
Building file: ../src/linux/swupdate_ipc.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -O0 -g3 -w -c -fmessage-length=0 -pthread -Wformat -Werror=format-security -mtune=generic -march=x86-64 -fcommon -MMD -MP -MF"src/linux/swupdate_ipc.d" -MT"src/linux/swupdate_ipc.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/swupdate_ipc.o" "../src/linux/swupdate_ipc.c"
Finished building: ../src/linux/swupdate_ipc.c
 
Building file: ../src/remote_monitoring.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -O0 -g3 -w -c -fmessage-length=0 -pthread -Wformat -Werror=format-security -mtune=generic -march=x86-64 -fcommon -MMD -MP -MF"src/remote_monitoring.d" -MT"src/remote_monitoring.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/remote_monitoring.o" "../src/remote_monitoring.c"
Finished building: ../src/remote_monitoring.c
 
Building target: azure_demo
Invoking: Debian x86_64 GNU/Linux C Linker
x86_64-linux-gnu-gcc -L/ade/rootfs/usr/lib/x86_64-linux-gnu/ -pthread -Wl,-z,relro -L/ade/rootfs/usr/local/lib/x86_64-linux-gnu -L/ade/rootfs/lib/x86_64-linux-gnu -L/ade/rootfs/usr/lib/x86_64-linux-gnu -L/ade/rootfs/usr/lib/x86_64-linux-gnu64 -L/ade/rootfs/usr/local/lib64 -L/ade/rootfs/lib64 -L/ade/rootfs/usr/lib64 -L/ade/rootfs/usr/local/lib -L/ade/rootfs/lib -L/ade/rootfs/usr/lib -L/ade/rootfs/usr/x86_64-linux-gnu/lib64 -L/ade/rootfs/usr/x86_64-linux-gnu/lib -Xlinker -Map="azure_demo.map" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "azure_demo" "@objs.rsp" "@user_objs.rsp" "@libs.rsp"
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_double':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:831: undefined reference to `Create_AGENT_DATA_TYPE_from_DOUBLE'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_float':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:863: undefined reference to `Create_AGENT_DATA_TYPE_from_FLOAT'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_int':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:896: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT32'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_long':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:928: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT64'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_int8_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:961: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT8'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_uint8_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:993: undefined reference to `Create_AGENT_DATA_TYPE_from_UINT8'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_int16_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1026: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT16'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_int32_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1058: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT32'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_int64_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1090: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT64'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE__Bool':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1121: undefined reference to `Create_EDM_BOOLEAN_from_int'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_ascii_char_ptr':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1152: undefined reference to `Create_AGENT_DATA_TYPE_from_charz'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_ascii_char_ptr_no_quotes':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1199: undefined reference to `Create_AGENT_DATA_TYPE_from_charz_no_quotes'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_EDM_DATE_TIME_OFFSET':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1247: undefined reference to `Create_AGENT_DATA_TYPE_from_EDM_DATE_TIME_OFFSET'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_EDM_GUID':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1279: undefined reference to `Create_AGENT_DATA_TYPE_from_EDM_GUID'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `ToAGENT_DATA_TYPE_EDM_BINARY':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1312: undefined reference to `Create_AGENT_DATA_TYPE_from_EDM_BINARY'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `serializer_ingest':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:35: undefined reference to `CodeFirst_IngestDesiredProperties'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `deviceMethodCallback':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:69: undefined reference to `CodeFirst_ExecuteMethod'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:82: undefined reference to `MethodReturn_GetReturn'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:110: undefined reference to `MethodReturn_Destroy'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `IoTHubDeviceTwinCreate_Impl':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:228: undefined reference to `Schema_GetSchemaForModel'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:237: undefined reference to `Schema_GetMetadata'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:238: undefined reference to `Schema_GetModelByName'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:248: undefined reference to `CodeFirst_CreateDevice'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:262: undefined reference to `CodeFirst_DestroyDevice'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:280: undefined reference to `CodeFirst_DestroyDevice'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `IoTHubDeviceTwin_Destroy_Impl':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:354: undefined reference to `CodeFirst_DestroyDevice'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/azure_trace_hooks.o: in function `IoTHubDeviceTwin_SendReportedState_Impl':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:378: undefined reference to `CodeFirst_SendAsyncReported'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_double':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:831: undefined reference to `Create_AGENT_DATA_TYPE_from_DOUBLE'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_float':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:863: undefined reference to `Create_AGENT_DATA_TYPE_from_FLOAT'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_int':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:896: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT32'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_long':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:928: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT64'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_int8_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:961: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT8'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_uint8_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:993: undefined reference to `Create_AGENT_DATA_TYPE_from_UINT8'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_int16_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1026: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT16'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_int32_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1058: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT32'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_int64_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1090: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT64'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE__Bool':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1121: undefined reference to `Create_EDM_BOOLEAN_from_int'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_ascii_char_ptr':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1152: undefined reference to `Create_AGENT_DATA_TYPE_from_charz'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_ascii_char_ptr_no_quotes':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1199: undefined reference to `Create_AGENT_DATA_TYPE_from_charz_no_quotes'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_EDM_DATE_TIME_OFFSET':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1247: undefined reference to `Create_AGENT_DATA_TYPE_from_EDM_DATE_TIME_OFFSET'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_EDM_GUID':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1279: undefined reference to `Create_AGENT_DATA_TYPE_from_EDM_GUID'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `ToAGENT_DATA_TYPE_EDM_BINARY':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1312: undefined reference to `Create_AGENT_DATA_TYPE_from_EDM_BINARY'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `serializer_ingest':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:35: undefined reference to `CodeFirst_IngestDesiredProperties'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `deviceMethodCallback':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:69: undefined reference to `CodeFirst_ExecuteMethod'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:82: undefined reference to `MethodReturn_GetReturn'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:110: undefined reference to `MethodReturn_Destroy'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `IoTHubDeviceTwinCreate_Impl':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:228: undefined reference to `Schema_GetSchemaForModel'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:237: undefined reference to `Schema_GetMetadata'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:238: undefined reference to `Schema_GetModelByName'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:248: undefined reference to `CodeFirst_CreateDevice'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:262: undefined reference to `CodeFirst_DestroyDevice'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:280: undefined reference to `CodeFirst_DestroyDevice'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `IoTHubDeviceTwin_Destroy_Impl':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:354: undefined reference to `CodeFirst_DestroyDevice'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/linux/linux_azure.o: in function `IoTHubDeviceTwin_SendReportedState_Impl':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:378: undefined reference to `CodeFirst_SendAsyncReported'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_double':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:831: undefined reference to `Create_AGENT_DATA_TYPE_from_DOUBLE'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_float':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:863: undefined reference to `Create_AGENT_DATA_TYPE_from_FLOAT'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_int':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:896: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT32'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_long':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:928: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT64'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_int8_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:961: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT8'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_uint8_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:993: undefined reference to `Create_AGENT_DATA_TYPE_from_UINT8'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_int16_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1026: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT16'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_int32_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1058: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT32'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_int64_t':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1090: undefined reference to `Create_AGENT_DATA_TYPE_from_SINT64'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE__Bool':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1121: undefined reference to `Create_EDM_BOOLEAN_from_int'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_ascii_char_ptr':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1152: undefined reference to `Create_AGENT_DATA_TYPE_from_charz'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_ascii_char_ptr_no_quotes':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1199: undefined reference to `Create_AGENT_DATA_TYPE_from_charz_no_quotes'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_EDM_DATE_TIME_OFFSET':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1247: undefined reference to `Create_AGENT_DATA_TYPE_from_EDM_DATE_TIME_OFFSET'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_EDM_GUID':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1279: undefined reference to `Create_AGENT_DATA_TYPE_from_EDM_GUID'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `ToAGENT_DATA_TYPE_EDM_BINARY':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer.h:1312: undefined reference to `Create_AGENT_DATA_TYPE_from_EDM_BINARY'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `serializer_ingest':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:35: undefined reference to `CodeFirst_IngestDesiredProperties'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `deviceMethodCallback':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:69: undefined reference to `CodeFirst_ExecuteMethod'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:82: undefined reference to `MethodReturn_GetReturn'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:110: undefined reference to `MethodReturn_Destroy'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `IoTHubDeviceTwinCreate_Impl':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:228: undefined reference to `Schema_GetSchemaForModel'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:237: undefined reference to `Schema_GetMetadata'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:238: undefined reference to `Schema_GetModelByName'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:248: undefined reference to `CodeFirst_CreateDevice'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:262: undefined reference to `CodeFirst_DestroyDevice'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:280: undefined reference to `CodeFirst_DestroyDevice'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `IoTHubDeviceTwin_Destroy_Impl':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:354: undefined reference to `CodeFirst_DestroyDevice'
/ade/sdkchroot/usr/bin/ld: /home/sfarooq/omni_2.0.0/200409_0400/workspace_meif/azure_demo/Debug/src/remote_monitoring.o: in function `IoTHubDeviceTwin_SendReportedState_Impl':
/ade/rootfs/usr/include/meif/framework/cloud/azure/serializer/inc/serializer_devicetwin.h:378: undefined reference to `CodeFirst_SendAsyncReported'
collect2: error: ld returned 1 exit status
make: *** [makefile:38: azure_demo] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
11:19:20 Build Failed. 142 errors, 0 warnings. (took 4s.51ms)
{code}
 Please see [^issue-report-20200416-112418.zip] for details.

Note that project is built successfully with default optimization level (-O2) and debug level (-g).

*Note*: This is not an issue with factorial demo.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:5400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587119453;s:7:"updated";i:1589525924;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:267;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2438";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"add the extern C block in our MEIF header files.";s:11:"description";s:252:"the cloud sdk already adds the extern C block in the header files.

MEIF header files should also do the same.

main purpose of the extern C block is to allow users to write application in C++. C++ does name mangling if extern C block is not there.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:3600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587631865;s:7:"updated";i:1587718737;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:268;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2428";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2437";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"Study use of encrypted file system and TPM with Omni 2.0";s:11:"description";s:734:"Study and enable encrypted file systems in Omni 2.0 and also enable TPM. Explore use of TPM and whether the IPC127E BSP provides this feature or whether we would use a simulated TPM.

Document your findings on Confluence including the procedure of how to enable these features and how to use them and any pitfalls you faced. Do check whether these features behave well with Swupdate enabled (i.e. with a read-only file system).

Document TPM usage from the point of view of a customer, who may need to deploy it on thousands of manufactured devices. One portion of this ticket's documentation will become part of the MEIF product itself while a second portion will become a part of the IoT Device Solution (needs more discussion).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:201600;s:9:"timespent";i:432000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591028450;s:7:"updated";i:1593632046;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:269;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2427";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2434";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"Use external Debian package for Azure device SDK on Omni";s:11:"description";s:787:"Microsoft provides a Debian package for the Azure IoT Device SDK for C. MEIF packages the Azure SDK within itself as source code and builds it from source. However, we only need to build the MEIF-packaged Azure SDK for Nucleus and MEL Flex whereas for MEL Omni we can rely on the Microsoft provided Azure SDK Debian package.

The CMake build scripts can be modified to use the Azure SDK Debian package dependency, if being built on a Debian distribution.

In fact, the Azure IoT Edge support within MEIF already uses this particular Azure SDK Debian package within its containers.

We don't want to excessively complicate the MEIF product but if this case can be easily handled without introducing too many special conditional cases in our build system, then we should go for this.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:306000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589480516;s:7:"updated";i:1591013832;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:270;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2427";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2431";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"Debian dev package and on-device development support";s:11:"description";s:979:"Create a dev and debug Debian package for MEIF where you would ship header files and (if desired) source files for customers wanting to rebuild MEIF from source, or for customers wanting to develop MEIF applications.

In the -dev Debian package for MEIF, provide all files needed to setup an MEIF development environment on the target itself. And allow the user to build MEIF based applications on the device itself. Also prepare documentation for the user to guide him on how to set this up, and provide the buildable samples on the device itself, possibly these too would go in the -dev Debian package of MEIF.

Assumption:
 * The Omni development image would provide support for all needed tools already, such as gcc, gdb, g++, cmake, make. And would define a workflow of how this would work.
 * This workflow will just allow building MEIF binaries on the target. It would not support all workflows like creating Debian packages, or building Azure IoT Edge applications.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:201600;s:9:"timespent";i:113400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591706003;s:7:"updated";i:1592911998;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:271;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2427";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2430";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"Bundle ADEs of all cloud platforms with MEIF";s:11:"description";s:755:"ADEs for all the supported clouds (Azue, AWS, MindSphere) should be packaged within MEIF and should be available for the user. The user can develop an application for any of the supported cloud platforms this way. It would be assumed that the user would be using the ADE for the cloud platform which he selected on the device's first boot, since parameters for that would be configured within meif.ini.

Please test and ensure all ADEs work correctly in this configuration. Switching an ADE should not require rebuilding MEIF on the target platform.

[~asaleem] mentioned that if all clouds are enabled, we can also have a single ADE to build all the MEIF samples. If this is possible then do also update the MEIF ADE accordingly, within this ticket.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:201600;s:9:"timespent";i:0;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1591687928;s:7:"updated";i:1591687944;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:272;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2427";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2429";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"First boot configuration to select desired cloud";s:11:"description";s:1127:"On first boot, present the user with an interactive tool which allows him to select one of the supported clouds and to configure all its parameters correctly, which will be updated in meif.ini. The user should also have an option to invoke the configuration tool again, himself from the console and to reconfigure his device using some other cloud.

The configuration can be defined as follows:
 * Only a single cloud will be configured by the user at a time, although it can be anyone of the supported clouds.
 * hawkBit is a service which can run in parallel with other clouds, or it can even run without the other clouds. The user should have the ability to configure hawkBit or disable it at configuration time (is this an Omni requirement?).

When a certain cloud is enabled, its agent will auto-start on boot-up and the agents of all the other clouds will remain disabled. This can be done by not registering an agent start-up script at all, or alternatively by allowing the user to disable each cloud explicitly through meif.ini and if its agent is auto-started, it would immediately exit if the cloud is disabled.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:158400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592295541;s:7:"updated";i:1592842253;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:273;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2428";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:68:"RD-MEIF: Config for Device On-boarding and Software Update via Cloud";s:11:"description";s:176:"See the associated INDOSMR-552 for more information. This epic contains MEIF-specific work. A separate MR/epic exists for IPC product specific work (INDOSMR-532 / MEIF-2575).";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:11:"INDOSMR-552";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1591096133;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:274;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2427";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"RD-MEIF: Pre-built binary packaging for MEIF";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:11:"INDOSMR-533";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593419980;s:7:"updated";i:1593419980;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:275;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2426";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:38:"Codebench project build failed for AWS";s:11:"description";s:5388:"*Issue:*
-------
AWS Build project is getting failed in Codebench

*Steps to reproduce:*
---------------------
1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200409_0400/omni-linux-x64-2.0.0.0.bin
Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200413-222207/outputs/meif-linux-x64-1.4.0.bin

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.


5)./melomni-devshell.sh -c -d <path-for-new-workspace> -l meif -m industrial-pc

6) Set below parameters in local.conf file
BB_NO_NETWORK = "1"
MEIF_CLOUD = "aws"
MEIF_AWS_IOT_HOST_MQTT_ADDR =
MEIF_AWS_IOT_CLIENT_MY_THING_NAME =
MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID = 
MEIF_AWS_IOT_CERT_DIR_HOST = 
MEIF_INSTALLATION_PATH = 


MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"

7)./melomni-devshell.sh -b -d <path-for-new-workspace> -t development-ade

8)Install ade in Codebench by following confluence description
https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-Building,Modifying,andDebuggingtheCloudApplicationinCodeBench


Expected result:
=============
AWS Demo project should get build in codebench

Actual result:
============
Project Build is getting failed
{code}
06:32:28 **** Build of configuration Debug for project aws_demo ****
[Running in image <ade-development-ade-mel-omni-industrial-pc-2.0.1586847981-20200414054101:latest>]
make all 

[1] Invoking Pre-Build commands in the host:
--------------------------------------------

[2] Invoking Build commands in the container: bb734d9b8e03003d05c63d0449a0b8c53c06c2dc92e896208e748b5b4a16024b 
---------------------------------------------
Building file: ../src/linux/aws_trace_hooks.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -pthread -fcommon -MMD -MP -MF"src/linux/aws_trace_hooks.d" -MT"src/linux/aws_trace_hooks.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/aws_trace_hooks.o" "../src/linux/aws_trace_hooks.c"
Finished building: ../src/linux/aws_trace_hooks.c
 
Building file: ../src/linux/linux_aws.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -pthread -fcommon -MMD -MP -MF"src/linux/linux_aws.d" -MT"src/linux/linux_aws.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/linux_aws.o" "../src/linux/linux_aws.c"
Finished building: ../src/linux/linux_aws.c
 
Building file: ../src/linux/swupdate_ipc.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -pthread -fcommon -MMD -MP -MF"src/linux/swupdate_ipc.d" -MT"src/linux/swupdate_ipc.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/swupdate_ipc.o" "../src/linux/swupdate_ipc.c"
Finished building: ../src/linux/swupdate_ipc.c
 
Building file: ../src/aws.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -pthread -fcommon -MMD -MP -MF"src/aws.d" -MT"src/aws.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/aws.o" "../src/aws.c"
Finished building: ../src/aws.c
 
Building file: ../src/aws_devcmds.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -pthread -fcommon -MMD -MP -MF"src/aws_devcmds.d" -MT"src/aws_devcmds.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/aws_devcmds.o" "../src/aws_devcmds.c"
Finished building: ../src/aws_devcmds.c
 
Building target: aws_demo
Invoking: Debian x86_64 GNU/Linux C Linker
x86_64-linux-gnu-gcc -L/ade/rootfs/usr/lib/x86_64-linux-gnu/ -Wl,-z,relro -L/ade/rootfs/usr/local/lib/x86_64-linux-gnu -L/ade/rootfs/lib/x86_64-linux-gnu -L/ade/rootfs/usr/lib/x86_64-linux-gnu -L/ade/rootfs/usr/lib/x86_64-linux-gnu64 -L/ade/rootfs/usr/local/lib64 -L/ade/rootfs/lib64 -L/ade/rootfs/usr/lib64 -L/ade/rootfs/usr/local/lib -L/ade/rootfs/lib -L/ade/rootfs/usr/lib -L/ade/rootfs/usr/x86_64-linux-gnu/lib64 -L/ade/rootfs/usr/x86_64-linux-gnu/lib -pthread -Xlinker -Map="aws_demo.map" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "aws_demo" "@objs.rsp" "@user_objs.rsp" "@libs.rsp"
/ade/sdkchroot/usr/bin/ld: /home/ravi/14aprilworkspace/aws_demo/Debug/src/linux/swupdate_ipc.o: in function `report_download_percentage':
/home/ravi/14aprilworkspace/aws_demo/Debug/../src/linux/swupdate_ipc.c:111: undefined reference to `round'
collect2: error: ld returned 1 exit status
make: *** [makefile:38: aws_demo] Error 1
"make all" terminated with exit code 2. Build might be incomplete.

06:32:31 Build Failed. 3 errors, 0 warnings. (took 3s.520ms)
{code}

Attached setup screenshots";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:9000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586930910;s:7:"updated";i:1590032181;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:276;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2425";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:152:"Fix issues related to return error status properly and update lua script used for indicating firmware update status according to recent changes in Omni.";s:11:"description";s:122:"Fix issues raised by Cedric in PR https://stash.alm.mentorg.com/projects/MEIF/repos/meif/pull-requests/204
for MEIF-2388.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586982440;s:7:"updated";i:1587463352;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:277;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2428";s:6:"sprint";a:5:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:3;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:4;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2424";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:63:"Study SELinux in MEL Omni 2.0 and run MEIF with SELinux Enabled";s:11:"description";s:1356:"Read about SELinux and enable it in MEL Omni 2.0 and run MEIF with SELinux enabled. Will need to create a policy for MEIF, possibly for each of the following configurations:
 * AWS cloud sample
 * Azure cloud sample
 * MindSphere cloud sample
 * hawkBit (not sure whether Omni team already provides this or not)
 * Azure IoT Edge sample/containers and use with MEIF Docker daemon

Please provide the following artifacts as well:
 * Support files/scripts for setting up an out-of-the-box SElinux policy
 * Documentation for how to enable and use this feature, and guide the user to the required documentation if he wants to customize an application himself and would like to use additional resources blocked by default by SELinux

Please make sure you define the SELinux policy to be most restrictive and only allowing MEIF to access exactly what it needs.

Please decide how to package this feature, whether it would become part of the MEIF Debian package (MEIF-1615) or will be configured from Bitbake recipes, or will involve manual steps to be carried out by the user.

 

Documentation at:[ https://confluence.alm.mentorg.com/display/MEIF/MEIF+with+SELinux|https://confluence.alm.mentorg.com/display/MEIF/MEIF+with+SELinux]

Code currently maintained at: [https://stash.alm.mentorg.com/users/aarslan/repos/meif-pol-selinux/browse]";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"depends on";a:1:{i:0;s:8:"MELO-496";}}}s:20:"timeoriginalestimate";i:201600;s:9:"timespent";i:590400;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595996657;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:278;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2422";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:33:"QA:MEL:MEIF 1.4 FF Test execution";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1591979320;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:279;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2421";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:38:"QA:MEL:Omni MEIF 1.4 FF Test execution";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1586533057;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:280;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2422";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2420";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:107:"FF:Test execution : Full Cycle QA for MEIFMR-241,MEIFMR-236,MEIFMR-228,MEIFMR-174,MEIFMR-225 and MEIFMR-240";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:172800;s:9:"timespent";i:172800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588426155;s:7:"updated";i:1588426155;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:281;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2419";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:87:"MEIF 1.4 GS Now IMAGE_FEATURES += "swupdate" is not required , all steps need to update";s:11:"description";s:141:"MEIF 1.4 GS Need to update . Now IMAGE_FEATURES += "swupdate" is not required. With OMNI 2.0 , swupdate feature is default for all build.

";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586930205;s:7:"updated";i:1590032263;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:282;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2418";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:80:"ADE:Ade Build completed but not getting zip file under /tmp/deploy/ade directory";s:11:"description";s:6115:"*Issue:*
-------
ADE Build completed but no zip file available under /tmp/deploy directory

*Steps to reproduce:*
---------------------
1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200409_0400/omni-linux-x64-2.0.0.0.bin
Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200407-222208/outputs/meif-linux-x64-1.4.0.bin

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.


5)./melomni-devshell.sh -c -d <path-for-new-workspace> -l meif -m industrial-pc

6) Set below parameters in local.conf file
BB_NO_NETWORK = "1"
MEIF_CLOUD = "aws"
MEIF_AWS_IOT_HOST_MQTT_ADDR =
MEIF_AWS_IOT_CLIENT_MY_THING_NAME =
MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID = 
MEIF_AWS_IOT_CERT_DIR_HOST = 
MEIF_INSTALLATION_PATH = 


MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"

7)./melomni-devshell.sh -b -d <path-for-new-workspace> -t development-ade


Expected result:
=============
Build should get completed and ade zip file should available under tmp/deploy/ade directory

Actual result:
============
No ade directory present  under tmp/deploy/ directory
{code}
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ ls ~/omni_iot-ade/build/tmp/deploy/
bootstrap/          buildchroot/        buildchroot-target/ images/             isar-apt/           sdk/                
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$
{code}

{code}
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ ./melomni-devshell.sh -c -d ~/omni_iot-ade -l meif -m industrial-pc
BSP (Machine) industrial-pc is selected
docker: invalid reference format.
See 'docker run --help'.
**************************************************************************
Warning: user id on host does not match the one in container
Warning: group id on host does not match the one in container
**************************************************************************
Locating layers and bitbake...done
Parsing layer configuration files...done
Processing layer dependencies...done
You had no local.conf file. This configuration file has therefore been
created for you with some default values.
You had no bblayers.conf file. This configuration file has therefore been
created for you with some default values.
Locating layers and bitbake...done
Parsing layer configuration files...done
Determining layers to include for DISTRO 'mel-omni'...standard-edition
Determining layers to include for MACHINE 'industrial-pc'...standard-edition
Processing layer dependencies...done
Checking for optional layers...
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-image
    service-stick-image
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ cat security_keys/aws/
cat: security_keys/aws/: Is a directory
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ cat security_keys/aws/mqtt 
ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ vim ~/omni_iot-ade/build/conf/local.conf 
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ ./melomni-devshell.sh -b -d ~/omni_iot-ade -t development-ade
**************************************************************************
Warning: user id on host does not match the one in container
Warning: group id on host does not match the one in container
**************************************************************************
### Shell environment set up for builds. ###

You can now run 'bitbake <target>'

Common targets are:
    core-image
    development-image
    service-stick-image
Parsing recipes: 100% |#############################################################################################################################################################################| Time: 0:00:04
Parsing of 117 .bb files complete (0 cached, 117 parsed). 117 targets, 0 skipped, 1 masked, 0 errors.
WARNING: No bb files matched BBFILE_PATTERN_mel-reference-bsps '^/mel-omni-os/mel-reference-bsps/'
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |##########################################################################################################################################################################| Time: 0:00:07
NOTE: No setscene tasks
NOTE: Executing Tasks
WARNING: development-ade-1.0-r11 do_rootfs_sdk: Package meif has an unknown license, please set DPKG_LICENSE_meif.
NOTE: Tasks Summary: Attempted 389 tasks of which 0 didn't need to be rerun and all succeeded.

Summary: There were 2 WARNING messages shown.
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ ls ~/omni_iot-ade/build/
bitbake-cookerdaemon.log  bitbake.lock  bitbake.sock  conf  downloads  setup-environment  tmp
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ vim ~/omni_iot-ade/build/conf/local.conf 
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ 
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ ls ~/omni_iot-ade/build/tmp/deploy/
bootstrap/          buildchroot/        buildchroot-target/ images/             isar-apt/           sdk/                
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ ls ~/omni_iot-ade/build/tmp/deploy/images/industrial-pc/
development-ade-1.0-r11.manifest  development-ade-mel-omni-industrial-pc.features
ravi@debian:~/mgc/omni_meif_1004/mel-omni-os/2$ 
{code}

Tried with codebench also, same issue:
 !codebench_build.png|thumbnail! ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586850005;s:7:"updated";i:1590032268;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:283;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2427";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2417";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"Making MEIF a more consistent and standard Linux package";s:11:"description";s:3343:"MEIF packaging has two parts. One is its own core CMake based build and a second portion is the MEL specific (or Nucleus specific) files such as recipes and other such related content specific to a certain target OS. Currently some items which belong in the core MEIF packaging have been handled in the supplemental recipe-specific portion. We need to make MEIF more consistent as a standard *NIX open source package and then handle the remaining details within the recipes and external build systems.

Following are some suggestions on what needs to be done to improve MEIF packaging:
 * Use a standard prefix: Source code packages by default use a prefix of /usr/local/ and install all their files within the local prefix, such as /usr/local/etc, /usr/local/bin/, /var/local/meif/, etc. MEIF should also use the local prefix by default but also allow the user to specify a custom prefix such as /usr/ instead of /usr/local/.
 * The /etc/ directory should be used to store meif.ini. A build time option should be added to set this default to some other custom directory, such as /persistent/meif/.
 * /var/local/meif/ is currently being used to store some supporting script/config files. This directory is strictly meant to be used for files used by a program at run-time, such as PID files, databases, cache, logs ([https://www.tldp.org/LDP/Linux-Filesystem-Hierarchy/html/var.html|https://slack-redir.net/link?url=https%3A%2F%2Fwww.tldp.org%2FLDP%2FLinux-Filesystem-Hierarchy%2Fhtml%2Fvar.html]). So supporting scripts should be placed elsewhere, such as /usr/share/meif/ or if it is a sample config then at /usr/share/doc/meif/example/ (or /usr/local/share/ if using the local prefix).

 * Consistency in program prefixes is important in Linux. /bin are system tools, /usr/bin/ are out-of-the-box programs, /usr/local/bin are programs installed later by the system admin. The /usr/xyz/ vs /usr/local/xyz/ convention should be followed consistently so either we should use /usr/ throughout or /usr/local/ throughout. MEIF uses /usr/bin/ for its binaries, so it shouldn't be using the local hierarchy anywhere, such as /var/local/xyz/.
 * We can support packaging MEIF as a deb package using "make deb" or whatever the standard convention is for building debs from source packages. If this logic is currently in bitbake recipes then it should be brought to the CMake side.
 * "make install" should install all standard files to their destinations, including config within /usr/local/etc/ and binaries within /usr/local/bin/.

On the recipes side, following are some suggestions:
 * The MEIF CMake should be invoked with appropriate switches to override default paths/prefixes and make it suitable for MEL Omni/Flex. Such as using the persistent partition for storing the configuration.
 * I've also noticed that in some cases we're pre-creating MEIF specific files within system directories so that we can set the MEIF user/group on the files so that when MEIF runs, its user has write access to those files (e.g. the pid file or maybe even the config file within the persistent partition). In such cases, instead of pre-creating the file we should consider creating an meif/ directory at those locations with the correct permissions, so that MEIF can create its files within that directory itself (e.g. /var/run/meif/ etc).
 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:100800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590649223;s:7:"updated";i:1590662607;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:284;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2280";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2415";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:79:"QA: Tools: Execute the remaining test cases for SA IoT support on Azure and AWS";s:11:"description";s:377:"The remaining test cases needs to be executed once the following bugs are resolved.
 * SA-4866
 * SA-4867
 * SA-4868

 * *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Sourcery Analyzer IoT
 * *Platforms*
 ** Azure - IPC 127E - Ubuntu 18
 ** Azure - IPC 127E - Windows 10
 ** Azure - IPC 127E - Debian 10
 ** AWS - IPC 127E - Windows 10 (64 bit)";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:15:"is triggered by";a:1:{i:0;s:9:"MEIF-2293";}}}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:45000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589109732;s:7:"updated";i:1589109752;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:285;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2414";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:75:"AZURE-EDGE:After Booting getting error "EXT4-fs error filesystem corrupted"";s:11:"description";s:1684:"*Issue:*
-------
After Booting with azure-edge image getting error "EXT4-fs error filesystem corrupted"

*Steps to reproduce:*
---------------------
1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200407_0400/omni-linux-x64-2.0.0.0.bin
Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200407-222208/outputs/meif-linux-x64-1.4.0.bin

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.


5)./melomni-devshell.sh -c -d <path-for-new-workspace> -l meif -m industrial-pc

6) Set below parameters in local.conf file
BB_NO_NETWORK = "1"
MEIF_CLOUD = "azure-edge"
MEIF_AZURE_IOT_EDGE_CONNECTION_STRING =

MEIF_SOURCE = "off"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "on"
MEIF_INSTALLATION_PATH = "/mel-omni-os/meif"

7)./melomni-devshell.sh -b -d <path-for-new-workspace>

8) Image build completed and booted the qemu target by following confluence link
https://confluence.alm.mentorg.com/display/PS/Running+Omni+2.0+on+QEMU

Expected result:
=============
After initial setup target should up and running

Actual result:
============
Target is up , but after 30 sec started getting error, and not able to execute any commands
{code}
EXT4-fs error filesystem corrupted
{code}

Attached error screenshot !azure-edge-issue.JPG|thumbnail! ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:7200;s:10:"resolution";s:16:"Cannot Reproduce";s:14:"resolutiondate";i:1586764260;s:7:"updated";i:1590032272;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:286;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2413";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:108:"add functionality in mindconnect demo so that it can either create files or read from already created files.";s:11:"description";s:321:"udpates required in mindconnect demo. 
 right now it creates the files however in case of mel omni it has to rely on pre created files.

demo logic has to be updated so that it can perform all operations on files already created. it should not be creating any files.

 

also update the documentation accordingly.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586444507;s:7:"updated";i:1586516465;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:287;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2412";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:64:"Getting messages on console while launching mht tool through GUI";s:11:"description";s:3523:"Steps to reproduce:
---------------------
1)Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200324-032921/outputs/meif-linux-x64-1.4.0.bin

2)Go to the following path <meif-installation-path>/tools/mht

3)Launch the meif host tool:
$ ./meif-host-tools


Expected result:
=============
mht tool should launch successfully without any error message on console.

Actual result:
============
Getting messages on console while launching mht tool through GUI.
{code}
kalyani@kalyani:~/meif_3_install/tools/mht$ ./meif-host-tool
[ERROR] Invalid command, please check usage.
Usage: meif-host-tool.sh [options] [command] [command options]
 Options:
 --debug
 Enable debug messages.
 Default: false
 -h, --help
 Displays this help message.

Commands:
 help Display additional help topics...
 Usage: help [options]
 Options:
 * -t, --topic
 Topic about which more help is required. Valid topics include 
 fit-content-types, cpio-content-types and cpio-platforms.
 -p, --platform
 Platform (board) for which more information is required. This 
 option is only valid for cpio-content-types topic.

packagefit Package FIT image...
 Usage: packagefit [options]
 Options:
 * -t, --content-type
 Type of contents to package. More information about available 
 content types for packagefit command can be viewed by running this 
 command with [help --topic fit-content-types] parameters.
 * -f, --input-file
 Image file to package.
 * -la, --load-address
 Image load address in hex, e.g. 0x10000
 * -ea, --entry-address
 Image entry address in hex, e.g. 0x10000
 * -o, --output-folder
 Output folder for any generated file.
 -k, --keys-folder
 Folder that contains encryption and signing keys.
 -s, --sign
 Sign images using key from the supplied key folder
 Default: false
 -e, --encrypt
 Encrypt images using key from the supplied key folder
 Default: false

packagecpio Package CPIO image for SwUpdate...
 Usage: packagecpio [options]
 Options:
 * -p, --platform
 Platform (board) for which to package the contents. The list of 
 available platforms can be viewed by running this command with 
 [help --topic cpio-platforms] parameters.
 * -t, --content-type
 Type of contents to package. More information about available 
 content types for a platform can be viewed by running this command 
 with [help --topic cpio-content-types --platform <platform-name>] 
 parameters. 
 * -f, --input-file
 File(s) to package. Detailed options can be specified by using 
 -f "cli_name=<file_type>&encrypt=<true|false>&compress=<true|false>&preprocess=<true|false>&path=<file_path>". 
 Where applicable, multiple input files can be specified by 
 repeating -f for each file. More information about input files and 
 the format can be viewed by running this command with [help 
 --topic cpio-content-types --platform <platform-name>] parameters.
 * -o, --output-folder
 Output folder for any generated file.
 -k, --keys-folder
 Folder that contains encryption and signing keys.
 -s, --sign
 Sign images using key from the supplied key folder
 Default: false

genkeys Generate Encryption/Signing Keys...
 Usage: genkeys [options]
 Options:
 * -k, --keys-folder
 Folder to generate keys in.
 -e, --encrypt
 Algorithm to use for encryption. e.g. aes-cbc-128, aes-cbc-256
 -s, --sign
 Algorithm to use for signing. e.g. rsa-2048-sha1, rsa-2048-sha256, 
 rsa-4096-sha256


kalyani@kalyani:~/meif_3_install/tools/mht$ 
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588337764;s:7:"updated";i:1590580602;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-228";i:2;s:3:"mel";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:288;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2411";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:83:"Change persistent partition directory to "/persistent" and fix issues related to it";s:11:"description";s:333:"Persistent partition path has changed to "/persistent" as per latest changes in OMNI.
Files added during building system are not accessible as "/dev/mapper/mel.userdata" is mounted on "/persistent" directory during startup.
Persistent partition is also mounted with options as "noexec" due to which "met_trace.sh" is not executable";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586341411;s:7:"updated";i:1586505067;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:289;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2410";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"MENDIX: Steps Need to update in Mendix WebApp Document";s:11:"description";s:534:"*Issue:*
-------
 Mentioning " root certificate" file name to DviceDashboard constants variable step is missing from Mendix WebApp document.

Steps to add
{code}
8.	In the Mendix Modeler, under Project Explorer expand the module “DeviceDashboard” and then open the “Constants” folder. Double-click “RootCertificate” and set its default value to rootcertificate file name with extension (what copied to resource directory)
{code}

Attached current Mendix WebApp docuement  [^MEIF-1924 Mendix WebApp Document.docx] ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586264384;s:7:"updated";i:1590032286;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:290;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2409";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:59:"use weak assingment ??= in meta-meif/conf/local.conf.append";s:11:"description";s:377:"meta-meif/conf/local.conf.append defines available configuration variables and this is included in build.conf.local.conf.

The way the variable assignment is done prevent user to define variable value in an additional layer.

Recommendation is to use weak assignment ??= rather than, =. As such, any assignment type like = or ?= will overrides values defined in local.conf.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586261496;s:7:"updated";i:1586419727;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:291;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2408";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"Inconsistent indentation in MEIF source code";s:11:"description";s:535:"Arslan: there is an inconsistency in the indentation of our MEIF source code. I did a search for tabs in .c files and there were a lot of them. When I opened a file from the list, it had a mixture of 4 spaces and tabs. The grey boxes are 4 spaces and oranges are tabs. I have checked 5 files out of 51 from the search, all of them have this inconsistency

!Screenshot from 2020-04-02 12-25-02.png!

Fakhir: 
Yes, that should be fixed. You can open a ticket for this. We only allow tabs in third party code which already uses it.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586417431;s:7:"updated";i:1586528284;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:292;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2407";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:78:"BUILD Failed with AWS Cloud option , unable to find path for aws security keys";s:11:"description";s:4552:"*Issue:*
-------
ERROR: meif-1.0-r0 do_fetch: Fetcher failure: Unable to find file file://aws-rootca.pem anywhere.

*Steps to reproduce:*
---------------------
1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200401_0400/omni-linux-x64-2.0.0.0.bin
Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200324-032921/outputs/meif-linux-x64-1.4.0.bin

2)Copy the "meif" main folder folder to <mel-omni-installation-path>/mel-omni-os/2/

3)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/mel-omni-os/2/ folder .

4)Copy the "mel-apt" folder from <meif-installation-path>/support/isar/mel-apt/ to the <mel-omni-installation-path>/mel-omni-os/2/ folder and merge with the existing folder.


5)./melomni-devshell.sh -c -d <path-for-new-workspace> -l meif -m industrial-pc

6) Set below parameters in local.conf file
BB_NO_NETWORK = "1"
MEIF_CLOUD = "aws"
MEIF_AWS_IOT_HOST_MQTT_ADDR
MEIF_AWS_IOT_CLIENT_MY_THING_NAME
MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID
MEIF_AWS_IOT_CERT_DIR_HOST

MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"
MEIF_INSTALLATION_PATH = "/mel-omni-os/meif"

7)./melomni-devshell.sh -b -d <path-for-new-workspace>

Expected result:
=============
Build should start

Actual result:
============
Build is getting failed with the following error :
{code}
WARNING: No bb files matched BBFILE_PATTERN_mel-reference-bsps '^/mel-omni-os/mel-reference-bsps/'
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |##########################################################################################################################################################################| Time: 0:00:02
NOTE: No setscene tasks
NOTE: Executing Tasks
WARNING: meif-1.0-r0 do_fetch: Failed to fetch URL file://aws-rootca.pem, attempting MIRRORS if available
ERROR: meif-1.0-r0 do_fetch: Fetcher failure: Unable to find file file://aws-rootca.pem anywhere. The paths that were searched were:
    /home/ravi/security_keys/aws
    /mel-omni-os/industrial-meif/recipes-core/meif/meif-1.0-r0/industrial-pc
    /mel-omni-os/industrial-meif/recipes-core/meif/meif-1.0/industrial-pc
    /mel-omni-os/industrial-meif/recipes-core/meif/meif/industrial-pc
    /mel-omni-os/industrial-meif/recipes-core/meif/files/industrial-pc
    /mel-omni-os/industrial-meif/recipes-core/meif/industrial-pc
    /mel-omni-os/industrial-meif/recipes-core/meif/meif-1.0-r0/amd64
    /mel-omni-os/industrial-meif/recipes-core/meif/meif-1.0/amd64
    /mel-omni-os/industrial-meif/recipes-core/meif/meif/amd64
    /mel-omni-os/industrial-meif/recipes-core/meif/files/amd64
    /mel-omni-os/industrial-meif/recipes-core/meif/amd64
    /mel-omni-os/industrial-meif/recipes-core/meif/meif-1.0-r0/
    /mel-omni-os/industrial-meif/recipes-core/meif/meif-1.0/
    /mel-omni-os/industrial-meif/recipes-core/meif/meif/
    /mel-omni-os/industrial-meif/recipes-core/meif/files/
    /mel-omni-os/industrial-meif/recipes-core/meif/
    /home/mel/project/build/downloads
ERROR: meif-1.0-r0 do_fetch: Error executing a python function in exec_python_func() autogenerated:

The stack trace of python calls that resulted in this exception/failure was:
File: 'exec_python_func() autogenerated', lineno: 2, function: <module>
     0001:
 *** 0002:do_fetch(d)
     0003:
File: '/mel-omni-os/isar/meta/classes/base.bbclass', lineno: 174, function: do_fetch
     0170:    try:
     0171:        fetcher = bb.fetch2.Fetch(src_uri, d)
     0172:        fetcher.download()
     0173:    except bb.fetch2.BBFetchException as e:
 *** 0174:        raise bb.build.FuncFailed(e)
     0175:}
     0176:
     0177:addtask fetch before do_build
     0178:
Exception: AttributeError: module 'bb.build' has no attribute 'FuncFailed'

ERROR: Logfile of failure stored in: /home/mel/project/build/tmp/work/mel-omni-amd64/meif/1.0-r0/temp/log.do_fetch.906
ERROR: Task (/mel-omni-os/industrial-meif/recipes-core/meif/meif.bb:do_fetch) failed with exit code '1'
NOTE: Tasks Summary: Attempted 102 tasks of which 0 didn't need to be rerun and 1 failed.

Summary: 1 task failed:
  /mel-omni-os/industrial-meif/recipes-core/meif/meif.bb:do_fetch
Summary: There were 5 WARNING messages shown.
Summary: There were 2 ERROR messages shown, returning a non-zero exit code.
ravi@debian:~/mgc/omni_meif_0204/mel-omni-os/2$ 
{code}

Attached execution log  [^aws_build_log.txt] ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:10800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585844454;s:7:"updated";i:1590032290;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:293;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2406";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"Automating the AWS cloud setup using Docker containers";s:11:"description";s:1838:"The purpose of this task is to reduce the size of the MEIF getting started guide and to simplify it by automating things for the user using scripts. Instead of guiding the user on how to setup the AWS cloud and creating devices in it, we should provide a script which spawns a Docker container and performs cloud-side configuration using the AWS CLI utilities. AWS provides the following utility for this purpose:

[https://docs.aws.amazon.com/cli/latest/reference/iot/]

You can proceed as follows for this task:

1- Study and install the AWS CLI utility on your host PC and experiment with performing all the steps which you perform from the AWS portal using this CLI tool, such as creating a device, associating it with a certificate and an allow-all policy, generating/downloading the device certificates.

2- Automate the AWS CLI installation/invocation using a Docker container. You can use the following Dockerfile as a reference, which installs the AWS CLI utility:

[https://github.com/mesosphere/aws-cli/blob/master/Dockerfile]

The Dockerfile should take all configurable options as arguments and when it is done performing all the steps required for running the MEIF AWS sample, it should also allow the user to extract the artifacts such as device certificates from the Docker container back to the host PC:

3- Write a Bash script which asks the user to input all the required arguments and spawns the Docker container, extracts certificates from it and tells the user where to place the generated certificates to use the newly created device with MEIF.

Eventually, we would also want to automate the last step of placing the certificates/secrets on the embedded device itself. Which might be done using run-time configuration and SSH'ing to the device, or slightly more complex would be a build-time setup.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:16:"is duplicated by";a:1:{i:0;s:9:"MEIF-2416";}}}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586252043;s:7:"updated";i:1586510340;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:294;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:3:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2405";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:46:"IPC 127E is not available as a platform in MHT";s:11:"description";s:575:"Steps to reproduce:
---------------------
1)Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200324-032921/outputs/meif-linux-x64-1.4.0.bin

2)Go to the following path <meif-installation-path>/tools/mht

3)Launch the meif host tool:
$ ./meif-host-tools

4)Go to package tab and then select CPIO .

5)Select the platform tab and then verify your machine name .

Expected result:
=============
IPC 127E should be present in platform section of MHT.

Actual result:
============
IPC 127E is not present in platform section of MHT.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:32400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585925865;s:7:"updated";i:1589792281;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-228";i:2;s:3:"mel";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:295;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2404";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"Automating the Azure cloud setup using Docker containers";s:11:"description";s:1221:"The task is to reduce the size of our getting started guide and to simplify it by automating things for the user using scripts. Instead of guiding the user on how to setup the Azure cloud, we should provide a script which spawns a docker container and performs cloud-side configuration using CLI utilities of these clouds. Like azure provides a "pcs" and "az" utility for the CLI. Most of the manual user configuration can be automated using these utilities.

 
For example, once we generate an Azure device and obtain its shared secret key, how can we get the key to the target rootfs in an automated manner. Maybe our script would run before the Omni build, so we might place our secret in a custom volume and then have the Omni build pick up our secret from the custom docker volume. Or maybe our script might run after the Omni build and would update the rootfs and re-trigger building of Omni rootfs images/service-stick.
 
And would mount the platform's rootfs as a volume, if it is contained in a volume, and modify it by placing the secret in the required location.
 
 
We would want it all to be transparent - -the user just runs the script and both cloud and device sides are setup and ready to go.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:16:"is duplicated by";a:1:{i:0;s:9:"MEIF-2416";}}}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:108000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586412702;s:7:"updated";i:1586529844;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:296;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2403";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:81:""bitbake development-image" and "bitbake core-image" does not generate WIC images";s:11:"description";s:778:"*Steps Followed*

I have followed the instructions mentioned at [Build a MEL Omni Image with Support for MEIF|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-BuildaMELOmniImagewithSupportforMEIF] in MEIF 1.4.0 GSG available at Confluence.

The commands "bitbake development-image" and "bitbake core-image" executed successfully. 

*Results*

Following is the output of the two commands. There is no WIC image generated.

!image-2020-03-31-10-48-29-662.png|thumbnail!

If WIC image is no more supported, then the instructions should be updated at [Create the OS Image|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-CreatetheOSImage] (v151).";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:10:"relates to";a:1:{i:0;s:8:"CB-12578";}}s:2:"in";a:1:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-2401";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:1800;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1585845427;s:7:"updated";i:1589282781;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:8:"samr-338";i:2;s:5:"tools";i:3;s:10:"blocked_qa";i:4;s:13:"nightly-build";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:297;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:3:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2402";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:71:"Service stick image is not getting built with latest MEL Omni installer";s:11:"description";s:5243:"*Steps Followed*

I have followed the instructions mentioned at [Build a MEL Omni Image with Support for MEIF|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-BuildaMELOmniImagewithSupportforMEIF] in MEIF 1.4.0 GSG available at Confluence for building MEL Omni with MEIF support for plain Azure cloud.

This is the [^local.conf] file.

The commands {color:#00875a}bitbake development-image{color} and {color:#00875a}bitbake core-image{color} executed successfully.

*Results*

{color:#00875a}bitbake service-stick-image{color} command failed with following error:
{code:java}
sfarooq@debian:~/sfarooq/omni_2.0.0/builds/200327_0400/meif_build_azure$ bitbake service-stick-image
 Loading cache: 100% |########################################################################################################| Time: 0:00:00
 Loaded 111 entries from dependency cache.
 WARNING: No bb files matched BBFILE_PATTERN_mel-reference-bsps '^/home/sfarooq/sfarooq/omni_2.0.0/builds/200327_0400/embedded/mel-omni-os/2/mel-reference-bsps/'
 NOTE: Resolving any missing task queue dependencies
 WARNING: You are using default certificates for Azure IoT Edge gateway, which means each time MEIF is built, new certificates are generated.
 It is recommended to provide your own certificates so that Azure IoT Edge gateway and the downstream device(azure agent) use the same certificates.
 Initialising tasks: 100% |###################################################################################################| Time: 0:00:01
 NOTE: No setscene tasks
 NOTE: Executing Tasks
 ERROR: service-stick-image-1.0-r5 do_rootfs_install: Error executing a python function in exec_python_func() autogenerated:The stack trace of python calls that resulted in this exception/failure was:
 File: 'exec_python_func() autogenerated', lineno: 2, function: <module>
 0001:
 *** 0002:do_rootfs_install(d)
 0003:
 File: '/home/sfarooq/sfarooq/omni_2.0.0/builds/200327_0400/embedded/mel-omni-os/2/isar/meta/classes/rootfs.bbclass', lineno: 169, function: do_rootfs_install
 0165: shared=True)
 0166:
 0167: bb.build.exec_func(cmd, d)
 0168:
 *** 0169: if (d.getVarFlag(cmd, 'isar-apt-lock') or "") == "release-after":
 0170: bb.utils.unlockfile(lock)
 0171: progress_reporter.finish()
 0172:}
 0173:addtask rootfs_install before do_rootfs_postprocess after do_unpack
 File: '/home/sfarooq/sfarooq/omni_2.0.0/builds/200327_0400/embedded/mel-omni-os/2/isar/bitbake/lib/bb/build.py', lineno: 249, function: exec_func
 0245: with bb.utils.fileslocked(lockfiles):
 0246: if ispython:
 0247: exec_func_python(func, d, runfile, cwd=adir)
 0248: else:
 *** 0249: exec_func_shell(func, d, runfile, cwd=adir)
 0250:
 0251: try:
 0252: curcwd = os.getcwd()
 0253: except:
 File: '/home/sfarooq/sfarooq/omni_2.0.0/builds/200327_0400/embedded/mel-omni-os/2/isar/bitbake/lib/bb/build.py', lineno: 450, function: exec_func_shell
 0446: with open(fifopath, 'r+b', buffering=0) as fifo:
 0447: try:
 0448: bb.debug(2, "Executing shell function %s" % func)
 0449: with open(os.devnull, 'r+') as stdin, logfile:
 *** 0450: bb.process.run(cmd, shell=False, stdin=stdin, log=logfile, extrafiles=[(fifo,readfifo)])
 0451: finally:
 0452: os.unlink(fifopath)
 0453:
 0454: bb.debug(2, "Shell function %s finished" % func)
 File: '/home/sfarooq/sfarooq/omni_2.0.0/builds/200327_0400/embedded/mel-omni-os/2/isar/bitbake/lib/bb/process.py', lineno: 182, function: run
 0178: if not stderr is None:
 0179: stderr = stderr.decode("utf-8")
 0180:
 0181: if pipe.returncode != 0:
 *** 0182: raise ExecutionError(cmd, pipe.returncode, stdout, stderr)
 0183: return stdout, stderr
 Exception: bb.process.ExecutionError: Execution of '/home/sfarooq/sfarooq/omni_2.0.0/builds/200327_0400/meif_build_azure/tmp/work/mel-omni-amd64/service-stick-image-industrial-pc-wic-img/1.0-r5/temp/run.rootfs_install_pkgs_download.6488' failed with exit code 100:
 Reading package lists...
 Building dependency tree...
 Reading state information...
 Package vim-tiny is not available, but is referred to by another package.
 This may mean that the package is missing, has been obsoleted, or
 is only available from another sourceE: Package 'vim-tiny' has no installation candidate
 WARNING: exit code 100 from a shell command.ERROR: Logfile of failure stored in: /home/sfarooq/sfarooq/omni_2.0.0/builds/200327_0400/meif_build_azure/tmp/work/mel-omni-amd64/service-stick-image-industrial-pc-wic-img/1.0-r5/temp/log.do_rootfs_install.6488
 ERROR: Task (/home/sfarooq/sfarooq/omni_2.0.0/builds/200327_0400/embedded/mel-omni-os/2/mel-core/recipes-core/images/service-stick-image.bb:do_rootfs_install) failed with exit code '1'
 NOTE: Tasks Summary: Attempted 554 tasks of which 529 didn't need to be rerun and 1 failed.Summary: 1 task failed:
 /home/sfarooq/sfarooq/omni_2.0.0/builds/200327_0400/embedded/mel-omni-os/2/mel-core/recipes-core/images/service-stick-image.bb:do_rootfs_install
 Summary: There were 2 WARNING messages shown.
 Summary: There was 1 ERROR message shown, returning a non-zero exit code.
sfarooq@debian:~/sfarooq/omni_2.0.0/builds/200327_0400/meif_build_azure$ {code}";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"duplicates";a:1:{i:0;s:8:"MELO-303";}}}s:20:"timeoriginalestimate";i:600;s:9:"timespent";i:0;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1585631720;s:7:"updated";i:1589282740;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:6:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:8:"samr-338";i:2;s:5:"tools";i:3;s:10:"blocked_qa";i:4;s:13:"nightly-build";i:5;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:298;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2401";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:76:"Getting started need to update with OMNI Docker build procedure for MEIF-1.4";s:11:"description";s:496:"Getting started need to update for image build in Docker for MEIF-1.4.


We referred the Omni steps from https://confluence.alm.mentorg.com:8090/display/QA/MEL+OMNI+2.0+Working+with+melomni-devshell.sh and used below installers,but unable to build image in docker for MEIF 1.4.
OMNI Installer: ftp://inpftp.ina.mentorg.com/pub/omni/200327_0400/omni-linux-x64-2.0.0.0.bin
MEIF 1.4 TC: ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200324-032921/outputs/meif-linux-x64-1.4.0.bin



";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-2403";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585754454;s:7:"updated";i:1590032294;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:299;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2287";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2400";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:60:"QA: Tools: Test cycle 1 of shared MEIF Host Tool - Ubuntu 20";s:11:"description";s:146:"Only host side sanity testing of GUI and CLI tool will be covered on Ubuntu 20 (Just make sure that the tool can be launched without any issues).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:3600;s:9:"timespent";i:3600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588665592;s:7:"updated";i:1588665619;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:300;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2399";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:25:"ADE build getting failed ";s:11:"description";s:5103:"Steps to reproduce:
---------------------
1) Install Omni: : ftp://inpftp.ina.mentorg.com/pub/omni/200324_0400/omni-linux-x64-2.0.0.0.bin
Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200324-032921/outputs/meif-linux-x64-1.4.0.bin

2)Create project directory.
$ mkdir myproject

3)Go to project directory.
$ cd myproject

4)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/omni/ folder.
Copy the "meif" folder from <meif-installation-path>/support/isar/mel-apt/meif to the <mel-omni-installation-path>/omni/mel-apt/ folder.

5) Run the setup-environment script to create a build configuration:
$ source <mel-omni-installation-path>/omni/mel-core/setup-environment -b meif_build -l meif industrial-pc

5) Set below parameters in local.conf file
BB_NO_NETWORK = "1"
MEIF_CLOUD = "aws"
MEIF_AWS_IOT_HOST_MQTT_ADDR
MEIF_AWS_IOT_CLIENT_MY_THING_NAME
MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID
MEIF_AWS_IOT_CERT_DIR_HOST

MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif_bin/meif"

6) bitbake development-image -c populate_ade 

Expected result:
=============
Build should get completed without any Warning or Errors

Actual result:
============
Build is getting failed with the following error :
{code}
ravi@debian:~/omni_meif_2503/build_aws$ bitbake development-image -c populate_ade
Loading cache: 100% |###############################################################################################################################################################################| Time: 0:00:00
Loaded 112 entries from dependency cache.
WARNING: No bb files matched BBFILE_PATTERN_mel-reference-bsps '^/home/ravi/mgc/embedded/omni_meif/mel-omni-os/2/mel-reference-bsps/'
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |##########################################################################################################################################################################| Time: 0:00:01
NOTE: No setscene tasks
NOTE: Executing Tasks
ERROR: sdkchroot-0.1-r0 do_rootfs_install: Error executing a python function in exec_python_func() autogenerated:

The stack trace of python calls that resulted in this exception/failure was:
File: 'exec_python_func() autogenerated', lineno: 2, function: <module>
0001:
*** 0002:do_rootfs_install(d)
0003:
File: '/home/ravi/mgc/embedded/omni_meif/mel-omni-os/2/isar/meta/classes/rootfs.bbclass', lineno: 169, function: do_rootfs_install
0165: shared=True)
0166:
0167: bb.build.exec_func(cmd, d)
0168:
*** 0169: if (d.getVarFlag(cmd, 'isar-apt-lock') or "") == "release-after":
0170: bb.utils.unlockfile(lock)
0171: progress_reporter.finish()
0172:}
0173:addtask rootfs_install before do_rootfs_postprocess after do_unpack
File: '/home/ravi/mgc/embedded/omni_meif/mel-omni-os/2/isar/bitbake/lib/bb/build.py', lineno: 249, function: exec_func
0245: with bb.utils.fileslocked(lockfiles):
0246: if ispython:
0247: exec_func_python(func, d, runfile, cwd=adir)
0248: else:
*** 0249: exec_func_shell(func, d, runfile, cwd=adir)
0250:
0251: try:
0252: curcwd = os.getcwd()
0253: except:
File: '/home/ravi/mgc/embedded/omni_meif/mel-omni-os/2/isar/bitbake/lib/bb/build.py', lineno: 450, function: exec_func_shell
0446: with open(fifopath, 'r+b', buffering=0) as fifo:
0447: try:
0448: bb.debug(2, "Executing shell function %s" % func)
0449: with open(os.devnull, 'r+') as stdin, logfile:
*** 0450: bb.process.run(cmd, shell=False, stdin=stdin, log=logfile, extrafiles=[(fifo,readfifo)])
0451: finally:
0452: os.unlink(fifopath)
0453:
0454: bb.debug(2, "Shell function %s finished" % func)
File: '/home/ravi/mgc/embedded/omni_meif/mel-omni-os/2/isar/bitbake/lib/bb/process.py', lineno: 182, function: run
0178: if not stderr is None:
0179: stderr = stderr.decode("utf-8")
0180:
0181: if pipe.returncode != 0:
*** 0182: raise ExecutionError(cmd, pipe.returncode, stdout, stderr)
0183: return stdout, stderr
Exception: bb.process.ExecutionError: Execution of '/home/ravi/omni_meif_2503/build_aws/tmp/work/mel-omni-amd64/sdkchroot/0.1-r0/temp/run.rootfs_install_pkgs_download.31582' failed with exit code 100:
Reading package lists...
Building dependency tree...
Reading state information...
Package lintian is not available, but is referred to by another package.
This may mean that the package is missing, has been obsoleted, or
is only available from another source

E: Unable to locate package dpkg-sig
E: Package 'lintian' has no installation candidate
WARNING: exit code 100 from a shell command.


ERROR: Logfile of failure stored in: /home/ravi/omni_meif_2503/build_aws/tmp/work/mel-omni-amd64/sdkchroot/0.1-r0/temp/log.do_rootfs_install.31582
ERROR: Task (/home/ravi/mgc/embedded/omni_meif/mel-omni-os/2/isar/meta/recipes-devtools/sdkchroot/sdkchroot.bb:do_rootfs_install) failed with exit code '1'
Waiting for 1 running tasks to finish:
{code}";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:8:"MELO-304";}}}s:20:"timeoriginalestimate";i:300;s:9:"timespent";i:600;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1585576498;s:7:"updated";i:1590032299;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:301;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2398";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:71:"MEIF 1.4.0 getting started guide needs updates for MEL building section";s:11:"description";s:735:"Refer to [MEIF-1.4 - Getting Started Guide|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide] v145.

The steps 3 and 4 of section [Build a MEL Omni Image with Support for MEIF|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-BuildaMELOmniImagewithSupportforMEIF] needs to be updated as follows:
 * Copy the "industrial-meif" layer from *<meif-installation-path>/meif/support/isar/industrial-meif* to the *<mel-omni-installation-path>/mel-omni-os/2/* folder.

 * Copy the "meif" folder from *<meif-installation-path>/support/isar/mel-apt/meif* to the *<mel-omni-installation-path>/mel-omni-os/2/mel-apt/* folder.

CC: [~asaleem]";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:300;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585639101;s:7:"updated";i:1594555972;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:13:"documentation";i:1;s:16:"meif-1.4-qa-bugs";i:2;s:3:"mel";i:3;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:302;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2227";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2392";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:40:"Install <toolchain-prefix>.xml with ADE ";s:11:"description";s:1843:"Under CB-9856 we have improved demo project creation support, for toolchain associations we need to install {{<toolchain-prefix>.xml}} with ADE. The file should be packaged as a p2 IU with constant version for a release. The IU id should be toolchain specific.

Details: 
 Install {{<toolchain-prefix>.xml}} with ADE at {{mel/samples/<toolchain-prefix>.xml}}
 Here's the content of <toolchain-prefix>.xml for {{x86_64-linux-gnu}} toolchain.
{code:java}
<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
	<extension point="org.eclipse.cdt.core.templateAssociations">
		<template id="com.mentor.embedded.meif.templates.AwsTemplate">
			<toolChain id="com.codesourcery.x86_64_linux_gnu.0.0.cdt.managedbuild.toolchain.gnu.exe.debug"/>
		</template>
	</extension>

		<extension point="org.eclipse.cdt.core.templateAssociations">
		<template id="com.mentor.embedded.meif.templates.AzureTemplate">
			<toolChain id="com.codesourcery.x86_64_linux_gnu.0.0.cdt.managedbuild.toolchain.gnu.exe.debug"/>
		</template>
	</extension>

	<extension point="org.eclipse.cdt.core.templateAssociations">
		<template id="com.mentor.embedded.meif.templates.MindconnectTemplate">
			<toolChain id="com.codesourcery.x86_64_linux_gnu.0.0.cdt.managedbuild.toolchain.gnu.exe.debug"/>
		</template>
	</extension>
</plugin>
{code}
I have attached the sample file [^toolchain-prefix.xml] which will be renamed to toolchain id like {{x86_64-linux-gnu}} during installation. We need to update its content as well, which will include replacing of {{%TOOLCHAIN-PREFIX%}} with the toolchain id.

Kindly see point 3 of this comment for detail look at directory structure: https://jira.alm.mentorg.com/browse/CB-9856?focusedCommentId=699319&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-699319";s:10:"issuelinks";a:1:{s:2:"in";a:3:{s:13:"is blocked by";a:1:{i:0;s:8:"MELO-287";}s:15:"is triggered by";a:1:{i:0;s:7:"CB-9856";}s:10:"relates to";a:1:{i:0;s:8:"CB-12505";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:253800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586154283;s:7:"updated";i:1586154296;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:303;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2391";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:78:"Splash screen does not appear on windows 10 while uninstalling MEIF installer ";s:11:"description";s:456:"Uninstalling the MEIF installer using silent/console method does not show splash screen.

*Steps to reproduce:* 
 1- Install MEIF using silent/console installer method
 2- Uninstall the installer using silent/console installer method 
 <installer_path>uninstall\uninstall.exe -install.silent
<installer_path>uninstall\uninstall.exe -install.console
 3- The installer gets uninstalled but does not show splash screen when the uninstallation proceeds.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:3600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585238325;s:7:"updated";i:1589383908;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:5:"tools";i:2;s:7:"triaged";i:3;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:304;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2390";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:65:"Update the Docker registry behavior when building iotedge modules";s:11:"description";s:523:"Currently the dockerfiles of meif iot edge modules import meiflib from meifcontainerregistry.azurecr.io which is not a publicly accessible repository. The user has to change this with their own azure repository in the dockerfiles. This needs be documented. It should also be checked whether an azure container registry is necessary for use with iotedge or the user can use any container registry and documentation should be done accordingly.

Also explore use of the local Docker registry instead of using a hosted one.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585120760;s:7:"updated";i:1585771067;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:305;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:7:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:4;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:5;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@144f35d3[id=1987,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 10,startDate=2020-07-06T11:16:51.185+01:00,endDate=2020-07-23T20:16:00.000+01:00,completeDate=2020-07-27T18:07:42.686+01:00,sequence=1987,goal=]";i:6;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2389";s:6:"status";s:11:"In Progress";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:44:"License restrictions for the iotedge runtime";s:11:"description";s:1944:"The following message was received from the Siemens Clearing Platform team:
{quote}Fakhir,

FYI, the Clearing Team sent me the following information about a “Do not use” obligation in iotedge.

[https://scp.siemens.com/#/productdetail/14395]

-Frank

*From:* Braun, Gerald [mailto:gerald.braun@siemens.com] 
 *Sent:* Monday, March 16, 2020 8:05 AM
 *To:* Scholz, Frank <frank_scholz@mentor.com>
 *Subject:* iotedge release 1.0.9 in Mentor Embedded IoT Framework (MEIF) 1.4.0 - Do not use files
 *Importance:* High

Hi Frank,

 We’ve just released the clearing for the above mentioned component and I wanted to inform you regarding its subfolder [‘/edgelet/contrib’|https://github.com/Azure/iotedge/tree/release/1.0.9/edgelet/contrib] which we declared to ‘Do not use’.

 This decision is based on the assumption that the file ‘LICENSE’ (including a non-OSS style EULA) located here [ ‘/edgelet/contrib/docs/LICENSE’|https://github.com/Azure/iotedge/blob/release/1.0.9/edgelet/contrib/docs/LICENSE] is assigned to the use of the compiled binary version of the component (‘MICROSOFT AZURE IOT EDGE RUNTIME COMPONENTS’) and not to the source code. We often seen this for other components coming from Microsoft that source code was provided under an OSS license while compiled version was still governed by commercial licenses.

 If we need to completely clarify this issue it might be a possibility to ask the project on GitHub (following the respective process), why this license was added to the subfolder while the repository is otherwise licensed under MIT.

 Thanks and best regards,

Gerald
{quote}
 

We have posted a query to the iotedge maintainers here:

[https://github.com/Azure/iotedge/pull/125#issuecomment-600558732]

There is a possibility that we may need to build the iotedge component ourselves, from the source code instead of using the .deb files from Microsoft.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-2231";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:33300;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595921244;s:7:"duedate";i:1597017600;s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:4:"risk";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:306;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2388";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:66:"Firmware Update status is not correct and aligned with the process";s:11:"description";s:362:"The firmwareupdate module does not show correct states of the system incase of downloading, rollback or success. Also as the sample app is downloading the image so it should tell the download percentage. This should be same for all samples.
 
Please take a look at the confluence page. 
[https://confluence.alm.mentorg.com/display/PS/Firmware+Update]

 ";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"relates to";a:2:{i:0;s:9:"MEIF-2363";i:1;s:8:"MELO-264";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:144000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586345798;s:7:"updated";i:1586779028;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"new feature";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:307;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:3:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2387";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:113:"We need to add test execution steps for meiftelemetrymodule and meifdevicecommandmodule of Azure IoT Edge Module.";s:11:"description";s:35:"Documentation updates suggest by QA";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585892699;s:7:"updated";i:1591011750;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:308;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2386";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:159:"In "Build Azure IoT Edge Module" while installing docker -ce, steps need to be changed according to debian host, currently steps are according to ubuntu setup.";s:11:"description";s:33:"Document changes suggested by QA.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584900438;s:7:"updated";i:1585147203;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:309;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2385";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:141:"we need to move the scripts/files mentioned in 'Packagin Updates' section of MEIF Getting Started guide to the industrial-meif/example folder";s:11:"description";s:181:"curretly the scripts and files are mentioned within the getting started guide. we need to move the scripts/file to industrial-meif/example folder and reference these from the guide.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:10800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584533582;s:7:"updated";i:1584626671;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:310;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:2:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:1;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2384";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"add documentation for 'meif' user and group ";s:11:"description";s:278:"curretly we do not have any documentation which explains how our agents/service use the meif user and group. e.g the meif.ini file is writebale only by meif user and group. others can read it only. we need to document for every file. e.g certificates, meif.ini, met_trace.sh etc";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584698964;s:7:"updated";i:1585147215;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:311;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:1;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2383";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:58:"Function tracing does not work with auto-started aws-agent";s:11:"description";s:27551:"*Building of MEL Omni*
 * Followed steps mentioned at https://jira.alm.mentorg.com/browse/MEIF-2282?focusedCommentId=691076&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-691076 to build MEL Omni with MEIF support for AWS backend.
 * AWS build time options were updated as per [https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-BuildTimeConfigurations.] 
 * On booting the development image on target using the service stick image, aws-agent ran fine and the thing shadow was updated on AWS cloud side. Booting instructions were followed from [https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-CreateaBootDiskImage.]
 * The shadow document showed {{"test.lttng.userspace": "true"}} and {{"test.lttng.kernel": "true"}}.
 * Ran a profiling session with {color:#00875a}Linux Application Profiling{color} session template.

*Results*

{color:#00875a}CPU Utilization{color} agent was populated but {color:#00875a}Function Calls{color} and F{color:#00875a}unction Calls Statistics{color} agents were not populated. It is because the agent did not start with {color:#00875a}{{liblttng-ust-cyg-profile.so.0}}{color} pre-load library.

Following is the traceme.log of profile run:
{code:java}
Mar 13, 2020 3:29:25 PM: traceiot.sh Info: Running script "/usr/bin/traceiot.sh".
Mar 13, 2020 3:29:25 PM: traceiot.sh Info: Deploying trace script to "met_trace.sh".
Mar 13, 2020 3:29:25 PM: traceiot.sh Info: Setting execute permission for deployed trace script.
Mar 13, 2020 3:29:25 PM: traceiot.sh Info: Using trace script from "/run/media/persistent/met_trace.sh".
Mar 13, 2020 3:29:25 PM: traceiot.sh Info: Invoking trace script diagnostics: /run/media/persistent/met_trace.sh --print-diagnostics
Mar 13, 2020 3:29:25 PM: met_trace.sh 1.2.0
Mar 13, 2020 3:29:25 PM: 
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: BEGIN
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: noarch.mettools.tracescript.version 1.2.0
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: noarch.mettools.tracescript.path /run/media/persistent/met_trace.sh
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: noarch.mettools.tracescript.md5 910993a61ffafe9d5a6350585035ca60
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: noarch.mettools.tracescript.feature.userspace.context_support true
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: noarch.lttng.version.number 2.10.6
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: noarch.mettools.tracescript.soinfo_xml true
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.lttng-sessiond.version <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.lttng-sessiond.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.lttng-consumerd.version <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.lttng-consumerd.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.lttng.version <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.lttng.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.babeltrace.version <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.babeltrace.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.mettools.forktrace.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.mettools.lcktrace.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.mettools.lcktrigger.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.mettools.memtrace.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.ust.dl.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.ust.cyg-profile.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.ust.cyg-profile-fast.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.ust.fork.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.ust.libc-wrapper.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf32.lttng.ust.pthread-wrapper.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.lttng-sessiond.version 2.10.6
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.lttng-sessiond.path /usr/bin/lttng-sessiond
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.lttng-consumerd.version 2.10.6
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.lttng-consumerd.path /usr/lib/x86_64-linux-gnu/lttng/libexec/lttng-consumerd
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.lttng.version (LTTng Trace Control) 2.10.6 - KeKriek
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.lttng.path /usr/bin/lttng
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.babeltrace.version BabelTrace Trace Viewer and Converter 1.5.6
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.babeltrace.path /usr/bin/babeltrace
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.mettools.forktrace.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.mettools.lcktrace.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.mettools.lcktrigger.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.mettools.memtrace.path <NOT AVAILABLE>
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.ust.dl.path /usr/lib/x86_64-linux-gnu/liblttng-ust-dl.so.0
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.ust.cyg-profile.path /usr/lib/x86_64-linux-gnu/liblttng-ust-cyg-profile.so.0
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.ust.cyg-profile-fast.path /usr/lib/x86_64-linux-gnu/liblttng-ust-cyg-profile-fast.so.0
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.ust.fork.path /usr/lib/x86_64-linux-gnu/liblttng-ust-fork.so.0
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.ust.libc-wrapper.path /usr/lib/x86_64-linux-gnu/liblttng-ust-libc-wrapper.so.0
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: elf64.lttng.ust.pthread-wrapper.path /usr/lib/x86_64-linux-gnu/liblttng-ust-pthread-wrapper.so.0
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: test.lttng.userspace true
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: test.lttng.userspace.buffers_pid true
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: test.lttng.context.ip true
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: test.lttng.event_exclusion true
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: test.lttng.kernel true
Mar 13, 2020 3:29:25 PM: met_trace.sh Diagnostic: END
Mar 13, 2020 3:29:25 PM: 
Mar 13, 2020 3:29:25 PM: traceiot.sh Info: Invoking trace script: /run/media/persistent/met_trace.sh --from-mesa -X "irq_handler_entry irq_handler_exit irq_softirq_entry irq_softirq_exit irq_softirq_raise sched_kthread_stop sched_kthread_stop_ret sched_migrate_task sched_pi_setprio sched_process_exec sched_process_exit sched_process_fork sched_process_free sched_process_wait sched_stat_iowait sched_stat_runtime sched_stat_sleep sched_stat_wait sched_switch sched_wait_task sched_wakeup sched_wakeup_new" -A 'met_base:fork' -A 'vtid#lttng_ust_cyg_profile:func_entry lttng_ust_cyg_profile:func_exit'  -o '/tmp/2020-03-13T10_29_22.295Z' -- '/bin/sleep' 15
Mar 13, 2020 3:29:25 PM: trap: SIGINT: bad trap
Mar 13, 2020 3:29:25 PM: __MESA_TRACE_START__ /tmp/2020-03-13T10_29_22.295Z
Mar 13, 2020 3:29:25 PM: Session met-2020-03-13_15-29-26 created.
Mar 13, 2020 3:29:25 PM: Traces will be written in /tmp/2020-03-13T10_29_22.295Z
Mar 13, 2020 3:29:25 PM: UST channel custom enabled for session met-2020-03-13_15-29-26
Mar 13, 2020 3:29:25 PM: UST channel custom_vtid enabled for session met-2020-03-13_15-29-26
Mar 13, 2020 3:29:25 PM: UST context vtid added to channel custom_vtid
Mar 13, 2020 3:29:25 PM: UST channel __ust_baddr_ enabled for session met-2020-03-13_15-29-26
Mar 13, 2020 3:29:25 PM: UST channel ust_preload_vtid enabled for session met-2020-03-13_15-29-26
Mar 13, 2020 3:29:25 PM: UST context vtid added to channel ust_preload_vtid
Mar 13, 2020 3:29:25 PM: UST channel met_base enabled for session met-2020-03-13_15-29-26
Mar 13, 2020 3:29:25 PM: UST event met_func:enter created in channel met_base
Mar 13, 2020 3:29:25 PM: UST event met_func:exit created in channel met_base
Mar 13, 2020 3:29:25 PM: UST event met_call:enter created in channel met_base
Mar 13, 2020 3:29:25 PM: UST event met_call:inside created in channel met_base
Mar 13, 2020 3:29:25 PM: UST event met_call:exit created in channel met_base
Mar 13, 2020 3:29:25 PM: UST event lttng_ust_cyg_profile:func_entry created in channel ust_preload_vtid
Mar 13, 2020 3:29:25 PM: UST event lttng_ust_cyg_profile:func_exit created in channel ust_preload_vtid
Mar 13, 2020 3:29:25 PM: UST event ust_baddr:pop created in channel __ust_baddr_
Mar 13, 2020 3:29:25 PM: UST event ust_baddr:push created in channel __ust_baddr_
Mar 13, 2020 3:29:25 PM: UST event ust_baddr_statedump:soinfo created in channel __ust_baddr_
Mar 13, 2020 3:29:25 PM: UST event lttng_ust_dl:dlclose created in channel __ust_baddr_
Mar 13, 2020 3:29:25 PM: UST event lttng_ust_dl:dlopen created in channel __ust_baddr_
Mar 13, 2020 3:29:25 PM: UST event lttng_ust_statedump:soinfo created in channel __ust_baddr_
Mar 13, 2020 3:29:25 PM: UST event lttng_ust_statedump:bin_info created in channel __ust_baddr_
Mar 13, 2020 3:29:25 PM: UST event lttng_ust_statedump:build_id created in channel __ust_baddr_
Mar 13, 2020 3:29:25 PM: UST event lttng_ust_statedump:debug_link created in channel __ust_baddr_
Mar 13, 2020 3:29:25 PM: UST event lttng_ust_dl:build_id created in channel __ust_baddr_
Mar 13, 2020 3:29:25 PM: UST event met_base:fork created in channel custom
Mar 13, 2020 3:29:25 PM: Kernel event irq_handler_entry created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event irq_handler_exit created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event irq_softirq_entry created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event irq_softirq_exit created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event irq_softirq_raise created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_kthread_stop created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_kthread_stop_ret created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_migrate_task created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_pi_setprio created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_process_exec created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_process_exit created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_process_fork created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_process_free created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_process_wait created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_stat_iowait created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_stat_runtime created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_stat_sleep created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_stat_wait created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_switch created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_wait_task created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_wakeup created in channel channel0
Mar 13, 2020 3:29:25 PM: Kernel event sched_wakeup_new created in channel channel0
Mar 13, 2020 3:29:25 PM: Tracing started for session met-2020-03-13_15-29-26
Mar 13, 2020 3:29:25 PM: __MESA_TRACE_RECORD_START__ /tmp/2020-03-13T10_29_22.295Z
Mar 13, 2020 3:29:25 PM: __MESA_TRACE_EXE_START__ 11686
Mar 13, 2020 3:29:25 PM: Executable "/bin/sleep" is starting with process id 11686
Mar 13, 2020 3:29:25 PM: Executable "/bin/sleep" returned with exit code 0
Mar 13, 2020 3:29:25 PM: __MESA_TRACE_EXE_RETVAL__ 0
Mar 13, 2020 3:29:25 PM: __MESA_TRACE_EXE_STOP__ 11686
Mar 13, 2020 3:29:25 PM: Waiting for data availability.
Mar 13, 2020 3:29:25 PM: Tracing stopped for session met-2020-03-13_15-29-26
Mar 13, 2020 3:29:25 PM: __MESA_TRACE_RECORD_STOP__ /tmp/2020-03-13T10_29_22.295Z
Mar 13, 2020 3:29:25 PM: Session met-2020-03-13_15-29-26 destroyed
Mar 13, 2020 3:29:25 PM: Preparing Shared Object Info ... Done.
Mar 13, 2020 3:29:25 PM: __MESA_TRACE_STOP__ /tmp/2020-03-13T10_29_22.295Z
Mar 13, 2020 3:29:25 PM: 
Mar 13, 2020 3:29:25 PM: Traced execution for "/bin/sleep" completed (see results "/tmp/2020-03-13T10_29_22.295Z").
Mar 13, 2020 3:29:25 PM: 
Mar 13, 2020 3:29:25 PM: traceiot.sh Info: Generating tar archive from trace data directory "/tmp/2020-03-13T10_29_22.295Z"
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/kernel/
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/kernel/channel0_0
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/kernel/channel0_3
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/kernel/index/
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/kernel/index/channel0_1.idx
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/kernel/index/channel0_3.idx
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/kernel/index/channel0_2.idx
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/kernel/index/channel0_0.idx
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/kernel/metadata
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/kernel/channel0_2
Mar 13, 2020 3:29:25 PM: 2020-03-13T10_29_22.295Z/kernel/channel0_1
{code}
If I manually start the agent with sudo and the pre-load library, it throws error.

!image-2020-03-13-15-10-20-328.png|thumbnail!

Now if I omit sudo, following issue can be seen. But function tracing works.

!image-2020-03-13-15-27-08-285.png|thumbnail!

Following is the log of profile run:
{code:java}
Mar 13, 2020 3:32:49 PM: traceiot.sh Info: Running script "/usr/bin/traceiot.sh".
Mar 13, 2020 3:32:49 PM: traceiot.sh Info: Deploying trace script to "met_trace.sh".
Mar 13, 2020 3:32:49 PM: /usr/bin/traceiot.sh: 30: /usr/bin/traceiot.sh: cannot create met_trace.sh: Permission denied
Mar 13, 2020 3:32:49 PM: traceiot.sh Info: Setting execute permission for deployed trace script.
Mar 13, 2020 3:32:49 PM: chmod: changing permissions of 'met_trace.sh': Operation not permitted
Mar 13, 2020 3:32:49 PM: traceiot.sh Info: Using trace script from "/run/media/persistent/met_trace.sh".
Mar 13, 2020 3:32:49 PM: traceiot.sh Info: Invoking trace script diagnostics: /run/media/persistent/met_trace.sh --print-diagnostics
Mar 13, 2020 3:32:49 PM: met_trace.sh 1.2.0
Mar 13, 2020 3:32:49 PM: 
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: BEGIN
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: noarch.mettools.tracescript.version 1.2.0
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: noarch.mettools.tracescript.path /run/media/persistent/met_trace.sh
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: noarch.mettools.tracescript.md5 910993a61ffafe9d5a6350585035ca60
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: noarch.mettools.tracescript.feature.userspace.context_support true
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: noarch.lttng.version.number 2.10.6
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: noarch.mettools.tracescript.soinfo_xml true
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.lttng-sessiond.version <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.lttng-sessiond.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.lttng-consumerd.version <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.lttng-consumerd.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.lttng.version <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.lttng.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.babeltrace.version <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.babeltrace.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.mettools.forktrace.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.mettools.lcktrace.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.mettools.lcktrigger.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.mettools.memtrace.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.ust.dl.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.ust.cyg-profile.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.ust.cyg-profile-fast.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.ust.fork.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.ust.libc-wrapper.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf32.lttng.ust.pthread-wrapper.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.lttng-sessiond.version 2.10.6
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.lttng-sessiond.path /usr/bin/lttng-sessiond
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.lttng-consumerd.version 2.10.6
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.lttng-consumerd.path /usr/lib/x86_64-linux-gnu/lttng/libexec/lttng-consumerd
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.lttng.version (LTTng Trace Control) 2.10.6 - KeKriek
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.lttng.path /usr/bin/lttng
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.babeltrace.version BabelTrace Trace Viewer and Converter 1.5.6
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.babeltrace.path /usr/bin/babeltrace
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.mettools.forktrace.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.mettools.lcktrace.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.mettools.lcktrigger.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.mettools.memtrace.path <NOT AVAILABLE>
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.ust.dl.path /usr/lib/x86_64-linux-gnu/liblttng-ust-dl.so.0
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.ust.cyg-profile.path /usr/lib/x86_64-linux-gnu/liblttng-ust-cyg-profile.so.0
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.ust.cyg-profile-fast.path /usr/lib/x86_64-linux-gnu/liblttng-ust-cyg-profile-fast.so.0
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.ust.fork.path /usr/lib/x86_64-linux-gnu/liblttng-ust-fork.so.0
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.ust.libc-wrapper.path /usr/lib/x86_64-linux-gnu/liblttng-ust-libc-wrapper.so.0
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: elf64.lttng.ust.pthread-wrapper.path /usr/lib/x86_64-linux-gnu/liblttng-ust-pthread-wrapper.so.0
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: test.lttng.userspace true
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: test.lttng.userspace.buffers_pid true
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: test.lttng.context.ip true
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: test.lttng.event_exclusion true
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: test.lttng.kernel true
Mar 13, 2020 3:32:49 PM: met_trace.sh Diagnostic: END
Mar 13, 2020 3:32:49 PM: 
Mar 13, 2020 3:32:49 PM: traceiot.sh Info: Invoking trace script: /run/media/persistent/met_trace.sh --from-mesa -X "irq_handler_entry irq_handler_exit irq_softirq_entry irq_softirq_exit irq_softirq_raise sched_kthread_stop sched_kthread_stop_ret sched_migrate_task sched_pi_setprio sched_process_exec sched_process_exit sched_process_fork sched_process_free sched_process_wait sched_stat_iowait sched_stat_runtime sched_stat_sleep sched_stat_wait sched_switch sched_wait_task sched_wakeup sched_wakeup_new" -A 'met_base:fork' -A 'vtid#lttng_ust_cyg_profile:func_entry lttng_ust_cyg_profile:func_exit'  -o '/tmp/2020-03-13T10_32_45.999Z' -- '/bin/sleep' 15
Mar 13, 2020 3:32:49 PM: trap: SIGINT: bad trap
Mar 13, 2020 3:32:49 PM: __MESA_TRACE_START__ /tmp/2020-03-13T10_32_45.999Z
Mar 13, 2020 3:32:49 PM: Session met-2020-03-13_15-32-50 created.
Mar 13, 2020 3:32:49 PM: Traces will be written in /tmp/2020-03-13T10_32_45.999Z
Mar 13, 2020 3:32:49 PM: UST channel custom enabled for session met-2020-03-13_15-32-50
Mar 13, 2020 3:32:49 PM: UST channel custom_vtid enabled for session met-2020-03-13_15-32-50
Mar 13, 2020 3:32:49 PM: UST context vtid added to channel custom_vtid
Mar 13, 2020 3:32:49 PM: UST channel __ust_baddr_ enabled for session met-2020-03-13_15-32-50
Mar 13, 2020 3:32:49 PM: UST channel ust_preload_vtid enabled for session met-2020-03-13_15-32-50
Mar 13, 2020 3:32:49 PM: UST context vtid added to channel ust_preload_vtid
Mar 13, 2020 3:32:49 PM: UST channel met_base enabled for session met-2020-03-13_15-32-50
Mar 13, 2020 3:32:49 PM: UST event met_func:enter created in channel met_base
Mar 13, 2020 3:32:49 PM: UST event met_func:exit created in channel met_base
Mar 13, 2020 3:32:49 PM: UST event met_call:enter created in channel met_base
Mar 13, 2020 3:32:49 PM: UST event met_call:inside created in channel met_base
Mar 13, 2020 3:32:49 PM: UST event met_call:exit created in channel met_base
Mar 13, 2020 3:32:49 PM: UST event lttng_ust_cyg_profile:func_entry created in channel ust_preload_vtid
Mar 13, 2020 3:32:49 PM: UST event lttng_ust_cyg_profile:func_exit created in channel ust_preload_vtid
Mar 13, 2020 3:32:49 PM: UST event ust_baddr:pop created in channel __ust_baddr_
Mar 13, 2020 3:32:49 PM: UST event ust_baddr:push created in channel __ust_baddr_
Mar 13, 2020 3:32:49 PM: UST event ust_baddr_statedump:soinfo created in channel __ust_baddr_
Mar 13, 2020 3:32:49 PM: UST event lttng_ust_dl:dlclose created in channel __ust_baddr_
Mar 13, 2020 3:32:49 PM: UST event lttng_ust_dl:dlopen created in channel __ust_baddr_
Mar 13, 2020 3:32:49 PM: UST event lttng_ust_statedump:soinfo created in channel __ust_baddr_
Mar 13, 2020 3:32:49 PM: UST event lttng_ust_statedump:bin_info created in channel __ust_baddr_
Mar 13, 2020 3:32:49 PM: UST event lttng_ust_statedump:build_id created in channel __ust_baddr_
Mar 13, 2020 3:32:49 PM: UST event lttng_ust_statedump:debug_link created in channel __ust_baddr_
Mar 13, 2020 3:32:49 PM: UST event lttng_ust_dl:build_id created in channel __ust_baddr_
Mar 13, 2020 3:32:49 PM: UST event met_base:fork created in channel custom
Mar 13, 2020 3:32:49 PM: Kernel event irq_handler_entry created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event irq_handler_exit created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event irq_softirq_entry created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event irq_softirq_exit created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event irq_softirq_raise created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_kthread_stop created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_kthread_stop_ret created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_migrate_task created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_pi_setprio created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_process_exec created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_process_exit created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_process_fork created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_process_free created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_process_wait created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_stat_iowait created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_stat_runtime created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_stat_sleep created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_stat_wait created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_switch created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_wait_task created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_wakeup created in channel channel0
Mar 13, 2020 3:32:49 PM: Kernel event sched_wakeup_new created in channel channel0
Mar 13, 2020 3:32:49 PM: Tracing started for session met-2020-03-13_15-32-50
Mar 13, 2020 3:32:49 PM: __MESA_TRACE_RECORD_START__ /tmp/2020-03-13T10_32_45.999Z
Mar 13, 2020 3:32:49 PM: __MESA_TRACE_EXE_START__ 12601
Mar 13, 2020 3:32:49 PM: Executable "/bin/sleep" is starting with process id 12601
Mar 13, 2020 3:32:49 PM: Executable "/bin/sleep" returned with exit code 0
Mar 13, 2020 3:32:49 PM: __MESA_TRACE_EXE_RETVAL__ 0
Mar 13, 2020 3:32:49 PM: __MESA_TRACE_EXE_STOP__ 12601
Mar 13, 2020 3:32:49 PM: Waiting for data availability.
Mar 13, 2020 3:32:49 PM: Tracing stopped for session met-2020-03-13_15-32-50
Mar 13, 2020 3:32:49 PM: __MESA_TRACE_RECORD_STOP__ /tmp/2020-03-13T10_32_45.999Z
Mar 13, 2020 3:32:49 PM: Session met-2020-03-13_15-32-50 destroyed
Mar 13, 2020 3:32:49 PM: Preparing Shared Object Info ... Done.
Mar 13, 2020 3:32:49 PM: __MESA_TRACE_STOP__ /tmp/2020-03-13T10_32_45.999Z
Mar 13, 2020 3:32:49 PM: 
Mar 13, 2020 3:32:49 PM: Traced execution for "/bin/sleep" completed (see results "/tmp/2020-03-13T10_32_45.999Z").
Mar 13, 2020 3:32:49 PM: 
Mar 13, 2020 3:32:49 PM: traceiot.sh Info: Generating tar archive from trace data directory "/tmp/2020-03-13T10_32_45.999Z"
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/kernel/
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/kernel/channel0_0
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/kernel/channel0_3
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/kernel/index/
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/kernel/index/channel0_1.idx
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/kernel/index/channel0_3.idx
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/kernel/index/channel0_2.idx
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/kernel/index/channel0_0.idx
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/kernel/metadata
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/kernel/channel0_2
Mar 13, 2020 3:32:49 PM: 2020-03-13T10_32_45.999Z/kernel/channel0_1
{code}
The log shows following issues:

{color:#de350b}Mar 13, 2020 3:32:49 PM: /usr/bin/traceiot.sh: 30: /usr/bin/traceiot.sh: cannot create met_trace.sh: Permission denied{color}
 {color:#de350b}Mar 13, 2020 3:32:49 PM: chmod: changing permissions of 'met_trace.sh': Operation not permitted{color}

{color:#de350b}Mar 13, 2020 3:32:49 PM: trap: SIGINT: bad trap{color}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584539032;s:7:"updated";i:1589282578;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:8:"samr-338";i:2;s:5:"tools";i:3;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:312;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2382";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:205:"In the MEIF1.3's getting started guide, we have "SA IoT Device Tracing Configurations" and "Docker Configurations" in Build Time Configurations section ,I think we should have the same in MEIF 1.4 gs also.";s:11:"description";s:27:"doc updates suggested by QA";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584605949;s:7:"updated";i:1584605959;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:313;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:2:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:1;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2381";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:137:"We need to add Figures also for some complex setups/tests like "Azure IoT Edge Module Development and Debugging Using Visual Studio Code"";s:11:"description";s:38:"document improvements suggested by QA.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585639404;s:7:"updated";i:1585731634;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:314;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2380";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:47:"Target is rebooting after an application update";s:11:"description";s:633:"Target is automatically rebooting even after an application update and not relying upon user/meif-agent to reboot. 

Based on the PR [https://github.com/MentorEmbedded/standard-edition/pull/127], Omni  team is removing "/sbin/reboot" from swupdate-helper which will stop system to reboot after firmware update. But this PR still needs to be approved and there might be changes in it.

Our "meif-swupdate.service" is using the default "/etc/mel-os/swupdate/swupdate.cfg" in which script "swupdate-helper"  is run as a "postupdatecmd", it can be changed to stop auto-reboot

 

https://jira.alm.mentorg.com/browse/MELO-264";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584103512;s:7:"updated";i:1584530336;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:315;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2378";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:39:"fix permission of various files in meif";s:11:"description";s:337:"Fakhir: when the cert files are being installed in /etc/ssl/certs/, they have the +x permission which isn't required. And the private key should likely not be readable by everyone so its permission should likely be 640
Fakhir: The autostart files meif-agent-autostart.service, meif-swupdate.service also have the incorrect +x permission";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584640668;s:7:"updated";i:1584724025;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:316;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2377";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"Update document as per feedback received from QA.";s:11:"description";s:209:"the comments in the end of document need to be addressed([https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide)]

 

also test application updates and fix any script/doc issue.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:39600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584354995;s:7:"updated";i:1584355012;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:317;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2376";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"If docker is enabled then do not add moby packages";s:11:"description";s:384:"In MEL Omni if docker support is included (see user ref manual to see how it is included, IMAGE_INSTALL or maybe IMAGE_PREINSTALL variable is used) then we need to ensure that moby packages are not installed.

 

If azure iot edge is being built with docker enabled then a warning message shall be displayed informing user the dokcer is used instead of moby  for azure iot edge.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:32400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583999790;s:7:"updated";i:1584541983;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:318;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2375";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:68:"Segmentation Fault when updating firmware using device twin in Azure";s:11:"description";s:176:"Segmentation Fault occurs if firmware update is initiated using device twin. This fault appears if first firmware update failed to apply and firmware update is initiated again.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583833647;s:7:"updated";i:1583999848;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:319;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2374";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"Build Failed with cloud mindconnect for Omni-2.0";s:11:"description";s:231:"Build is failing with cloud mindconnect showing "error: duplicate case value".

libcurl version is updated for Omni-2.0 to 7.64 while it was 7.52 for Omni-1.0.1.

This is causing build failure as mindconnect sdk is not updated.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583494761;s:7:"updated";i:1583754413;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:320;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2373";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:119:"cannot use dot character in key for device twin in Azure. SA IoT on Azure does not work due to invalid key format used.";s:11:"description";s:551:"Following is an example of the device twin json that Tracing wants to store as device twin
{code:java}
			"test.lttng.userspace.buffers_pid": "true",{code}

The azure documentation regarding device twin says
{code:java}
Keys: All keys in JSON objects are UTF-8 encoded, 
case-sensitive, and up-to 1 KB in length. Allowed characters exclude 
UNICODE control characters (segments C0 and C1), and ., $, and SP. {code}
Reference:[https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins#tags-and-properties-format]

 

 ";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2358";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:48600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583745259;s:7:"updated";i:1583827370;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:321;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2372";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:64:"rename AWS variables in local.conf.append to be self explanatory";s:11:"description";s:531:"{color:#1d1c1d}MEIF_AWS_IOT_SECURITY_PEM_HOST_DIR{color} should be renamed to  {color:#1d1c1d}MEIF_AWS_IOT_CERT_DIR_HOST{color}

 

{color:#1d1c1d} MEIF_AWS_IOT_CREDENTIAL_LOCATION should be renamed to MEIF_AWS_IOT_CERT_DIR_TGT{color}

 

{color:#1d1c1d}also add appropriate comments for these variables. e.g adding a comment that certs will be expected in this dir on the host and will be copied to the specified dir on the target{color}

 

{color:#1d1c1d}also update the getting started guide accordingly.{color}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583817214;s:7:"updated";i:1583827665;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:322;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2370";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"BUILD Failed with collectd enabled in local.conf file";s:11:"description";s:5667:"h2. Issue:
----------------------
Build failed due to collectd patch file not found.


h2. Steps to reproduce:
 ---------------------
 1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
 2) $ repo sync
 3) Install meif : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200303-222210/outputs/]
 4)copy the industrial-meif to the project folder where omni repo is synced.
 5)Run the setup-environment script to create a build configuration:
 $ . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
 6) Set below parameters in local.conf file
 MEIF_INSTALLATION_PATH = "/home/ravi/mgc/omni/meif"
 7)Comment below line in local.conf :
 MEIF_CLOUD = "aws"
MEIF_AWS_IOT_HOST_MQTT_ADDR = "ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com"
MEIF_AWS_IOT_CLIENT_MY_THING_NAME = "ravi_iot"
MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID = "ravi_iot"

MEIF_AWS_IOT_SECURITY_ROOT_CA_FILENAME = "aws-rootca.pem"
MEIF_AWS_IOT_SECURITY_CERTIFICATE_FILENAME = "aws-devcrt.pem"
MEIF_AWS_IOT_SECURITY_PRIVATE_KEY_FILENAME = "aws-prvkey.pem"
MEIF_AWS_IOT_SECURITY_PEM_HOST_DIR = "/home/ravi/security_keys/aws"
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif_bin/meif"

MEIF_ENABLE_COLLECTD = "y"

IMAGE_FEATURES += "swupdate"


MEIF_SOURCE = "on"
 MEIF_DOCKER_NATIVE = "off"
 MEIF_DOCKER_AZURE_EDGE = "off"

8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:
{code:java}
DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.121.136:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 
{code}
10)export INDUSTRIAL_SOURCES=upstream
 11) Run the below command to build the image :
 $ ../industrial-ci/scripts/build-all.sh

Expected Result
 =============
 Build should start without any error/warnings

 Actual result:
 ============
 Build is getting failed due to collectd patch not found.It is looking for file "Add-collectd-configuration-in-mel-setup-2.10.patch" but available file is having different version "Add-collectd-configuration-in-mel-setup-2.9.patch"
{code}

NOTE: No setscene tasks
NOTE: Executing Tasks
WARNING: mel-setup-2.10-r0 do_fetch: Failed to fetch URL file://Add-collectd-configuration-in-mel-setup-2.10.patch;apply=no, attempting MIRRORS if available
ERROR: mel-setup-2.10-r0 do_fetch: Fetcher failure: Unable to find file file://Add-collectd-configuration-in-mel-setup-2.10.patch;apply=no anywhere. The paths that were searched were:
    /home/ravi/omni_2_27feb/industrial-meif/recipes-core/setup/files
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/mel-setup-2.10-r0/industrial-pc
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/mel-setup-2.10/industrial-pc
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/mel-setup/industrial-pc
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/files/industrial-pc
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/industrial-pc
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/mel-setup-2.10-r0/amd64
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/mel-setup-2.10/amd64
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/mel-setup/amd64
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/files/amd64
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/amd64
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/mel-setup-2.10-r0/
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/mel-setup-2.10/
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/mel-setup/
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/files/
    /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/
    /home/ravi/omni_2_27feb/build-aws/downloads
ERROR: mel-setup-2.10-r0 do_fetch: Error executing a python function in exec_python_func() autogenerated:

The stack trace of python calls that resulted in this exception/failure was:
File: 'exec_python_func() autogenerated', lineno: 2, function: <module>
     0001:
 *** 0002:do_fetch(d)
     0003:
File: '/home/ravi/omni_2_27feb/isar/meta/classes/base.bbclass', lineno: 174, function: do_fetch
     0170:    try:
     0171:        fetcher = bb.fetch2.Fetch(src_uri, d)
     0172:        fetcher.download()
     0173:    except bb.fetch2.BBFetchException as e:
 *** 0174:        raise bb.build.FuncFailed(e)
     0175:}
     0176:
     0177:addtask fetch before do_build
     0178:
Exception: AttributeError: module 'bb.build' has no attribute 'FuncFailed'

ERROR: Logfile of failure stored in: /home/ravi/omni_2_27feb/build-aws/tmp/work/mel-omni-amd64/mel-setup/2.10-r0/temp/log.do_fetch.17315
ERROR: Task (/home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/mel-setup.bb:do_fetch) failed with exit code '1'
NOTE: Tasks Summary: Attempted 144 tasks of which 53 didn't need to be rerun and 1 failed.

Summary: 1 task failed:
  /home/ravi/omni_2_27feb/industrial-core/recipes-core/setup/mel-setup.bb:do_fetch
Summary: There were 2 WARNING messages shown.
Summary: There were 2 ERROR messages shown, returning a non-zero exit code.
ravi@debian:~/omni_2_27feb/build-aws$
{code}

Actual file present
{code}
ravi@debian:~/omni_2_27feb/build-aws$ ls ../industrial-meif/recipes-core/setup/files/
Add-collectd-configuration-in-mel-setup-1.3.6.patch  Add-collectd-configuration-in-mel-setup-2.9.patch  debconf
ravi@debian:~/omni_2_27feb/build-aws$
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583763785;s:7:"updated";i:1590032305;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:323;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@721e9539[id=1841,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 7,startDate=2020-05-03T23:31:29.451+01:00,endDate=2020-05-24T21:48:00.000+01:00,completeDate=2020-05-25T16:52:39.634+01:00,sequence=1841,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+07]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2369";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:74:"Different behavior of GUI and console with MEIF installer "Change" option ";s:11:"description";s:990:"Using the "Change" option shows different behavior with GUI and Console. 

*Behavior with GUI:*

1- Run the MEIF installer 
2- Select the change option 
3- Uncheck MEIF-core to remove 
4- Check the installation directory - MEIF-core removed successfully. 
5- Run the MEIF installer again 
6- Select the change option 
7- Uncheck MEIF-host tools to remove 
8- The installer will throw warning "There is nothing to install or update" and the next and install button gets disabled. 

*Behavior with Console:*

1- Run the MEIF installer 
2- Select the change option 
3- Uncheck MEIF-core to remove 
4- Check the installation directory - MEIF-core removed successfully. 
5- Run the MEIF installer again 
6- Select the change option 
7- Uncheck MEIF-host tools to remove 
8- The installation will proceed without throwing any error or warning and shows MEIF installation is complete
9- Check the Check the installation directory - MEIF-host tools will be available there.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588959111;s:7:"updated";i:1589367102;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";i:3;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:324;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:5:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:1;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:4;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2368";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:64:"Software requirements section missing web browser and pdf reader";s:11:"description";s:420:"In relation to MEIF-2354, please update the following section with the following content within the MEIF install guide:
 *{color:#0747a6}Before You Begin Installation{color}*
 <...>
{quote}{color:#172b4d}Ensure you have configured your Operating System application defaults to:{color}
 {color:#172b4d} (1) Open web URLs with a web browser and{color}
 {color:#172b4d} (2) Open PDFs with a PDF reader.{color}
{quote}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592004054;s:7:"updated";i:1592609582;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:325;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1923";s:6:"sprint";a:1:{i:0;s:248:"com.atlassian.greenhopper.service.sprint.Sprint@25ba78e7[id=1751,rapidViewId=263,state=CLOSED,name=Mendix - 2020 Sprint 4,startDate=2020-03-03T07:56:52.826Z,endDate=2020-03-22T07:54:00.000Z,completeDate=2020-03-24T06:48:40.584Z,sequence=1742,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2367";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:21:"Update Mendix Web App";s:11:"description";s:136:"The web app should use Mendix latest version 8.7.

It should use the layout that we used in EWC Demo.

 Based on DeviceDashboardV2.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584355794;s:7:"updated";i:1584355820;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:326;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2366";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:93:"meif apt repo needs to be updated to use debian release packages for moby-cli and moby-engine";s:11:"description";s:554:"[https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+External+Package+References] mentions that moby-cli and moby-engine uses packages from ubuntu release. This needs to fixed. we should be using the packages from the debian release. [https://packages.microsoft.com/debian/]

in the mel-apt repo of MEIF the stretch and buster packages needs to be updated to use the correct release.

 

update: update the page [https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+External+Package+References] according to the updates that are made.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583415185;s:7:"updated";i:1583415196;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:327;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2365";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:85:"TARGET is not getting rebooted after successful command from Azure portal/AWS  Portal";s:11:"description";s:4844:"h2. Issue:
----------------------
Target is not getting rebooted after successful command from azure portal.

h2. Steps to reproduce:
 ---------------------
 1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
 2) $ repo sync
 3) Install meif : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200226-222208/outputs/]
 4)copy the industrial-meif to the project folder where omni repo is synced.
 5)Run the setup-environment script to create a build configuration:
 $ . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
 6) Set below parameters in local.conf file
 MEIF_INSTALLATION_PATH = "/home/ravi/mgc/omni/meif"
 7)Comment below line in local.conf :
 MEIF_CLOUD = "azure"
 MEIF_AZURE_DEMO_DEVICE_ID
 MEIF_AZURE_DEMO_HOSTNAME
 MEIF_AZURE_DEMO_DEVICE_KEY

MEIF_SOURCE = "on"
 MEIF_DOCKER_NATIVE = "off"
 MEIF_DOCKER_AZURE_EDGE = "off"

8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:
{code:java}
DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.121.136:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 
{code}
10)export INDUSTRIAL_SOURCES=upstream
 11) Run the below command to build the image :
 $ ../industrial-ci/scripts/build-all.sh
12) Target booted with image
13) execute reboot command from azure portal

Expected Result
 =============
Logs can be seen using journalctl command, and target should get rebooted
 
Actual result:
 ============
using journalctl command, can see msg like "Rebooting in 5 sec", but target is not getting rebooted.
{code}
Feb 28 09:58:33 localhost.localdomain azure-agent[659]: sudo: parse error in /etc/sudoers.d/meif near line 1
Feb 28 09:58:33 localhost.localdomain azure-agent[659]: sudo: no valid sudoers sources found, quitting
Feb 28 09:58:33 localhost.localdomain sudo[1838]:     meif : parse error in /etc/sudoers.d/meif near line 1 ; TTY=unknown ; PWD=/run/media/persistent ; USER=root ;
Feb 28 09:58:33 localhost.localdomain azure-agent[659]: sudo: unable to initialize policy plugin
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: 0000 psig,
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Sending sensor value Humidity = 44.000000 %,
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Confirmation callback received for message 724 with result IOTHUB_CLIENT_CONFIRMATION_OK
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Confirmation callback received for message 725 with result IOTHUB_CLIENT_CONFIRMATION_OK
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Confirmation callback received for message 726 with result IOTHUB_CLIENT_CONFIRMATION_OK
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Sending sensor value Temperature = 58.000000 F,
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Sending sensor value Pressure = 63.000000 psig,
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Sending sensor value Humidity = 49.000000 %,
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Direct method name:    Reboot
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Direct method payload: {}
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: [1B blob data]
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: MEIF reboot
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Confirmation callback received for message 727 with result IOTHUB_CLIENT_CONFIRMATION_OK
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Confirmation callback received for message 728 with result IOTHUB_CLIENT_CONFIRMATION_OK
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Confirmation callback received for message 729 with result IOTHUB_CLIENT_CONFIRMATION_OK
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Sending sensor value Temperature = 64.000000 F,
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Sending sensor value Pressure = 67.000000 psig,
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Sending sensor value Humidity = 51.000000 %,
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: [1B blob data]
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Rebooting system in 5 seconds.
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Confirmation callback received for message 730 with result IOTHUB_CLIENT_CONFIRMATION_OK
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Confirmation callback received for message 731 with result IOTHUB_CLIENT_CONFIRMATION_OK
Feb 28 09:59:08 localhost.localdomain azure-agent[659]: Confirmation callback received for message 732 with result IOTHUB_CLIENT_CONFIRMATION_OK
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583144847;s:7:"updated";i:1590032320;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:328;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2364";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:37:"sudo command failed with syntax error";s:11:"description";s:1890:"h2. Issue:
----------------------
Any command with sudo gets failed

h2. Steps to reproduce:
 ---------------------
 1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
 2) $ repo sync
 3) Install meif : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200226-222208/outputs/]
 4)copy the industrial-meif to the project folder where omni repo is synced.
 5)Run the setup-environment script to create a build configuration:
 $ . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
 6) Set below parameters in local.conf file
 MEIF_INSTALLATION_PATH = "/home/ravi/mgc/omni/meif"
 7)Comment below line in local.conf :
 MEIF_CLOUD = "azure"
 MEIF_AZURE_DEMO_DEVICE_ID
 MEIF_AZURE_DEMO_HOSTNAME
 MEIF_AZURE_DEMO_DEVICE_KEY

MEIF_SOURCE = "on"
 MEIF_DOCKER_NATIVE = "off"
 MEIF_DOCKER_AZURE_EDGE = "off"

8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:
{code:java}
DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.121.136:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 
{code}
10)export INDUSTRIAL_SOURCES=upstream
 11) Run the below command to build the image :
 $ ../industrial-ci/scripts/build-all.sh
12) Target booted with image
13) execute commands with sudo

Expected Result
 =============
Commands should get show output

 Actual result:
 ============
 Commands get failed with syntax error
{code}
tester@localhost:~$ sudo journalctl -xf
>>> /etc/sudoers.d/meif: syntax error near line 1 <<<
sudo: parse error in /etc/sudoers.d/meif near line 1
sudo: no valid sudoers sources found, quitting
sudo: unable to initialize policy plugin
tester@localhost:~$
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583142105;s:7:"updated";i:1590032329;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:329;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2363";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:67:"No progress on firmware update using Device Twin for Azure IOT Edge";s:11:"description";s:2500:"h2. Issue:
----------------------
After following the steps for Firmware update using device twin method for Azure Iot Edge, No swupdate process get started in target

h2. Steps to reproduce:
 ---------------------
 1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
 2) $ repo sync
 3) Install meif : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200226-222208/outputs/]
 4)copy the industrial-meif to the project folder where omni repo is synced.
 5)Run the setup-environment script to create a build configuration:
 $ . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
 6) Set below parameters in local.conf file
 MEIF_INSTALLATION_PATH = "/home/ravi/mgc/omni/meif"
 7)Comment below line in local.conf :
 MEIF_CLOUD = "azure"
 MEIF_AZURE_DEMO_DEVICE_ID
 MEIF_AZURE_DEMO_HOSTNAME
 MEIF_AZURE_DEMO_DEVICE_KEY

MEIF_SOURCE = "on"
 MEIF_DOCKER_NATIVE = "off"
 MEIF_DOCKER_AZURE_EDGE = "off"

8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:
{code:java}
DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.121.136:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 
{code}
10)export INDUSTRIAL_SOURCES=upstream
11) Run the below command to build the image :
 $ ../industrial-ci/scripts/build-all.sh
12)Target booted up with image
13)Build and Push meiffirmwareupdatemodule
14)Add meiffirmwareupdatemodule
15)using iotedge can verify module is reflected in target and in running state.
16) Sign in to https://portal.azure.com
17) Select your IoT Hub.
18) Under Automatic Device Management, click IoT Edge.
19) Click on your device from the list of devices displayed.
20) Click on the firmware update module under Modules.
21) Click on Module Identity Twin. The module twin of your device will be displayed.
22) Then, you need to enter the firmware update URL under desired properties in the following way:
{code}
"desired": {
        "FirmwareUpdateURL": "http://134.86.62.56:9000/development-image-mel-omni-industrial-pc.swu",
      },
{code}
23)Click on Save to update the device twin.

Expected Result
 =============
 Firmware update should start in target . Can see status using journalctl -xf command

 Actual result:
 ============
No swupdate progress in target";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-2388";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:14400;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1583821483;s:7:"updated";i:1590032333;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:330;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@2363bb02[id=1838,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 4,startDate=2020-03-01T01:37:12.078Z,endDate=2020-03-22T11:54:00.000Z,completeDate=2020-03-22T14:40:24.468Z,sequence=1838,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+04]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2360";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:73:"MEIF Installer: CopyRights date should be the current(Year) release date.";s:11:"description";s:225:"The *CopyRights* date must have changed to the current release year date but MEIF installer showing *2017* as CopyRights.
This should be changed to *2020* on *Splash screen* and *Copyrights and Notice page* in the installer.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582932617;s:7:"updated";i:1589527744;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:331;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2359";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:51:"meif1.4 on omni1.0.1 is failing because of collectd";s:11:"description";s:482:"we need to make collectd configurable for MEIF.

 if ENABLE_COLLED= "n" then we need to exclude the mel-setup.bbappend file. that can be done using the variable BBMASK.

secondly we need to apply the patch according to the omni version used. this can be done by doing something as 
{code:java}
LTTNG_URI ?= "http://lttng.org/files/lttng-modules/lttng-modules-${LTTNG}.tar.bz2;name=lttng"SRC_URI += "${@bb.utils.contains("BSP_FEATURES", "lttng", "${LTTNG_URI}", "", d)}" {code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582811320;s:7:"updated";i:1582896869;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:332;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2358";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:41:"Engineering testing of SA Tracing feature";s:11:"description";s:844:"Carry out engineering testing of the SA tracing feature over the cloud. It would be preferable to test using both AWS and Azure.

update: Add meif user to the tracing group as is reported in SA-4847.

-update-: -'meif' user needs to be able to create a file.-

update: set LTTNG_HOME to /tmp . by default it gets mapped to $HOME which in case of 'meif' user is not writeable. meif-agent-autostart.service needs following change
{code:java}
Environment=LTTNG_HOME=/tmp {code}
update: debug and fix segmentation fault in aws sample https://jira.alm.mentorg.com/browse/SA-4847?focusedCommentId=697030&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-697030

 

please also fill the [https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+Engineering+Test+Plan] page according to the tests that are run.";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:6:"Blocks";a:1:{i:0;s:7:"SA-4847";}}s:2:"in";a:3:{s:13:"is blocked by";a:1:{i:0;s:9:"MEIF-2373";}s:5:"fixes";a:1:{i:0;s:7:"SA-4847";}s:10:"relates to";a:1:{i:0;s:7:"SA-4847";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:46800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583745631;s:7:"updated";i:1583745641;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:333;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2227";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2356";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:51:"verify/test docker compose stack example on MEF-1.4";s:11:"description";s:616:"MEIF1.3 had a docker compose stack example.
we want to run the same docker compose stack example on MEIF1.4. Docker compose stack example is just an application update where the data file is a .tar file and the installation script install the .tar file.

the files can be found from MEIF1.3 installation . there is folder named 'data-update' which contains  the installation script(install-compose-stack.sh) as well as the data file(compose-stack_example.tar in this case).

also update the meif1.4 getting started documentation . the only todo left in the documentation is for the docker compose stack example";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:46800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584086867;s:7:"updated";i:1584529088;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:334;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2355";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:60:"Reduce the size of include folder created when meif is built";s:11:"description";s:271:"The current size of the include folder is ~62MB

!Screenshot from 2020-02-25 17-27-40.png!

This can needs to be reduced. If the deps folders are removed, the size reduces to ~4MB. Modify the cmake file to exclude deps folders and check if build is successful or not.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:14:"is analyzed by";a:1:{i:0;s:9:"MEIF-2278";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:50400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584507880;s:7:"updated";i:1584507905;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:335;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2354";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:97:"MEIF Installer: The resources hyperlinks at the end of the installer are not working on Debian 10";s:11:"description";s:280:"I am testing the MEIF installer on Debian 10. The Installation is fine but the hyperlinks in the installation pages are not working on Debian 10.
 # EULA link on the Software Agreements page.
 # Resources links on the Result page.

 

Related documentation issue: MEIF-2368";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:7200;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1583336591;s:7:"updated";i:1589365461;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:6:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:7:"triaged";i:5;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:336;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@15f5a237[id=1867,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 4,startDate=2020-03-02T10:36:02.902Z,endDate=2020-03-21T10:34:00.000Z,completeDate=2020-03-20T13:24:31.728Z,sequence=1867,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2353";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"QA: Tools: Test cycle 1 of installer testing on RHEL";s:11:"description";s:319:"* *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Installer, Licensing, and Packaging
 [https://testlink.alm.mentorg.com/lnl.php?apikey=fc5dd45df7f6745ec9fefb6404b0cf6bd7358c6b440478e3f0c655f2fe3d0784&tproject_id=458205&tplan_id=740209&type=results_matrix]
 * *Platform*:
 ** RHEL 8 - 64bit (64)";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:56400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584618258;s:7:"updated";i:1588156352;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:337;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:7:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:1;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:4;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";i:5;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@4472c0ae[id=1986,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 9,startDate=2020-06-15T03:59:38.031+01:00,endDate=2020-07-03T19:59:00.000+01:00,completeDate=2020-07-06T11:15:51.458+01:00,sequence=1986,goal=]";i:6;s:243:"com.atlassian.greenhopper.service.sprint.Sprint@28243c01[id=2080,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 - 2020 Sprint 11,startDate=2020-07-27T18:08:30.134+01:00,endDate=2020-08-14T05:08:00.000+01:00,completeDate=<null>,sequence=2013,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2351";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:50:"Commit MEIF 1.4.0 release registration information";s:11:"description";s:203:"Before MEIF 1.4.0 RC can be built, release registration information must be obtained and committed into cb_releng in order to stage and release product via pipelines. Without this, RCs must not be built.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594051067;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:338;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2350";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"BUILD getting Failed during core image build stage";s:11:"description";s:66469:"Steps to reproduce:
 ---------------------
 1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
 2) $ repo sync
 3) Install meif : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200222-222207/]
 4)copy the industrial-meif to the project folder where omni repo is synced.
 5)Run the setup-environment script to create a build configuration:
 $ . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
 6) Set below parameters in local.conf file
 MEIF_INSTALLATION_PATH = "/home/ravi/mgc/omni/meif"
 7)Comment below line in local.conf :
 MEIF_CLOUD = "aws"
MEIF_AWS_IOT_HOST_MQTT_ADDR = "ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com"
MEIF_AWS_IOT_CLIENT_MY_THING_NAME = "ravi_iot"
MEIF_AWS_IOT_CLIENT_MQTT_CLIENT_ID = "ravi_iot"

MEIF_AWS_IOT_SECURITY_ROOT_CA_FILENAME = "aws-rootca.pem"
MEIF_AWS_IOT_SECURITY_CERTIFICATE_FILENAME = "aws-devcrt.pem"
MEIF_AWS_IOT_SECURITY_PRIVATE_KEY_FILENAME = "aws-prvkey.pem"
MEIF_AWS_IOT_SECURITY_PEM_HOST_DIR = "/home/ravi/security_keys/aws"


MEIF_SOURCE = "on"
 MEIF_DOCKER_NATIVE = "off"
 MEIF_DOCKER_AZURE_EDGE = "off"

MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif_bin/meif"
8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:
{code:java}
DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.62.56:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 
{code}
10) removed mel-setup.bbappend file from industril-meif
10)export INDUSTRIAL_SOURCES=upstream
 11) Run the below command to build the image :
 $ ../industrial-ci/scripts/build-all.sh

Expected Result
 =============
 Build should get completed without any warnings/errors.


 Actual result:
 ============
 Build is getting failed with below errors
{code}
ravi@debian:~/omni_2/build-aws-1$ export INDUSTRIAL_SOURCES=upstream
ravi@debian:~/omni_2/build-aws-1$ ../industrial-ci/scripts/build-all.sh
# using shared 'downloads' folder: ../downloads
# checking build settings...

# --------------------------------------------------------------------------------------------------------
# Build info
# --------------------------------------------------------------------------------------------------------
# build directory     : /home/ravi/omni_2/build-aws-1
# build id            : 202002241214
# output directory    : /home/ravi/omni_2/build-aws-1/tmp/deploy/images/industrial-pc

# --------------------------------------------------------------------------------------------------------
# Build target
# --------------------------------------------------------------------------------------------------------
# edition             : standard
# BSP machine         : industrial-pc (default kernel: 4.19)
# BSP features        : lttng alsa xmpp coap mqtt splash amqp tools-profile flatpak tools-debug qt5 selinux kubernetes swupdate perf docker

# --------------------------------------------------------------------------------------------------------
# Build goals
# --------------------------------------------------------------------------------------------------------
# custom packages     : custom-packages
# base images         : development-image core-image
# service stick image : service-stick-image
# ADE images          : development-ade(L)

# --------------------------------------------------------------------------------------------------------
# MEL Build inputs
# --------------------------------------------------------------------------------------------------------
# apt sources     : upstream
# apt feeds       : base standard
# apt directory   : none
# OSS READMEs     : none

# updating package database...
# installing auxiliary packages...
# cleaning up...
# setup completed!

# building custom-packages
Loading cache: 100% |#########################################################################################################################| Time: 0:00:00
Loaded 112 entries from dependency cache.
WARNING: No bb files matched BBFILE_PATTERN_mel-reference-bsps '^/home/ravi/omni_2/mel-reference-bsps/'
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |####################################################################################################################| Time: 0:00:00
NOTE: No setscene tasks
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 216 tasks of which 0 didn't need to be rerun and all succeeded.

Summary: There was 1 WARNING message shown.
# building development-image
# development-image features: lttng hardening network-manager firewall splash tools-profile ssh-server lvm-support tools-debug selinux monitor usrmerge antivirus perf apt auditing pwquality
Loading cache: 100% |#########################################################################################################################| Time: 0:00:00
Loaded 112 entries from dependency cache.
WARNING: No bb files matched BBFILE_PATTERN_mel-reference-bsps '^/home/ravi/omni_2/mel-reference-bsps/'
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |####################################################################################################################| Time: 0:00:05
NOTE: No setscene tasks
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 612 tasks of which 216 didn't need to be rerun and all succeeded.

Summary: There was 1 WARNING message shown.
# building core-image
# core-image features: hardening network-manager firewall splash ssh-server lvm-support monitor usrmerge antivirus apt auditing pwquality
Loading cache: 100% |#########################################################################################################################| Time: 0:00:00
Loaded 112 entries from dependency cache.
WARNING: No bb files matched BBFILE_PATTERN_mel-reference-bsps '^/home/ravi/omni_2/mel-reference-bsps/'
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |####################################################################################################################| Time: 0:00:01
NOTE: No setscene tasks
NOTE: Executing Tasks
ERROR: core-image-1.0-r11 do_rootfs_install: Error executing a python function in exec_python_func() autogenerated:

The stack trace of python calls that resulted in this exception/failure was:
File: 'exec_python_func() autogenerated', lineno: 2, function: <module>
     0001:
 *** 0002:do_rootfs_install(d)
     0003:
File: '/home/ravi/omni_2/isar/meta/classes/rootfs.bbclass', lineno: 169, function: do_rootfs_install
     0165:                                     shared=True)
     0166:
     0167:        bb.build.exec_func(cmd, d)
     0168:
 *** 0169:        if (d.getVarFlag(cmd, 'isar-apt-lock') or "") == "release-after":
     0170:            bb.utils.unlockfile(lock)
     0171:    progress_reporter.finish()
     0172:}
     0173:addtask rootfs_install before do_rootfs_postprocess after do_unpack
File: '/home/ravi/omni_2/isar/bitbake/lib/bb/build.py', lineno: 249, function: exec_func
     0245:    with bb.utils.fileslocked(lockfiles):
     0246:        if ispython:
     0247:            exec_func_python(func, d, runfile, cwd=adir)
     0248:        else:
 *** 0249:            exec_func_shell(func, d, runfile, cwd=adir)
     0250:
     0251:    try:
     0252:        curcwd = os.getcwd()
     0253:    except:
File: '/home/ravi/omni_2/isar/bitbake/lib/bb/build.py', lineno: 450, function: exec_func_shell
     0446:    with open(fifopath, 'r+b', buffering=0) as fifo:
     0447:        try:
     0448:            bb.debug(2, "Executing shell function %s" % func)
     0449:            with open(os.devnull, 'r+') as stdin, logfile:
 *** 0450:                bb.process.run(cmd, shell=False, stdin=stdin, log=logfile, extrafiles=[(fifo,readfifo)])
     0451:        finally:
     0452:            os.unlink(fifopath)
     0453:
     0454:    bb.debug(2, "Shell function %s finished" % func)
File: '/home/ravi/omni_2/isar/bitbake/lib/bb/process.py', lineno: 182, function: run
     0178:        if not stderr is None:
     0179:            stderr = stderr.decode("utf-8")
     0180:
     0181:    if pipe.returncode != 0:
 *** 0182:        raise ExecutionError(cmd, pipe.returncode, stdout, stderr)
     0183:    return stdout, stderr
Exception: bb.process.ExecutionError: Execution of '/home/ravi/omni_2/build-aws-1/tmp/work/mel-omni-amd64/core-image-industrial-pc-wic-img/1.0-r11/temp/run.rootfs_install_pkgs_install.30625' failed with exit code 100:
Reading package lists...
Building dependency tree...
Starting pkgProblemResolver with broken count: 0
Starting 2 pkgProblemResolver with broken count: 0
Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
e2fsprogs is already the newest version (1.44.5-1+deb10u3).
The following additional packages will be installed:
  clamav-base clamav-freshclam console-setup-linux cpio dbus dmeventd file
  fontconfig fontconfig-config fonts-dejavu-core gdbmtool initramfs-tools
  initramfs-tools-core iucode-tool kbd keyboard-configuration klibc-utils kmod
  libaio1 libauparse0 libbluetooth3 libbsd0 libcairo2 libcap2-bin libclamav9
  libcrack2 libcurl3-gnutls libcurl4 libdatrie1 libdbus-1-3
  libdevmapper-event1.02.1 libdns-export1104 libdrm-common libdrm2 libedit2
  libelf1 libexpat1 libfile-find-rule-perl libfontconfig1 libfreetype6
  libfribidi0 libgdbm-compat4 libgdbm6 libglib2.0-0 libgraphite2-3
  libgssapi-krb5-2 libharfbuzz0b libicu63 libip6tc0 libiptc0 libisc-export1100
  libjansson4 libk5crypto3 libkeyutils1 libklibc libkrb5-3 libkrb5support0
  liblocale-gettext-perl libltdl7 liblvm2cmd2.03 libmagic-mgc libmagic1
  libmbedcrypto3 libmbedtls12 libmbedx509-0 libmm-glib0 libmnl0 libmpdec2
  libmspack0 libncurses6 libndp0 libnetfilter-conntrack3 libnewt0.52
  libnfnetlink0 libnftnl11 libnghttp2-14 libnl-3-200 libnl-genl-3-200
  libnl-route-3-200 libnm0 libnumber-compare-perl libopts25 libpam-systemd
  libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0 libpcre2-8-0
  libpcsclite1 libperl5.28 libpixman-1-0 libplymouth4 libpng16-16
  libpolkit-agent-1-0 libpolkit-backend-1-0 libpolkit-gobject-1-0 libpopt0
  libprocps7 libpsl5 libpwquality-common libpwquality1 libpython3-stdlib
  libpython3.7-minimal libpython3.7-stdlib libreadline5 librtmp1 libslang2
  libssh2-1 libteamdctl0 libtext-glob-perl libtfm1 libthai-data libthai0
  libwrap0 libx11-6 libx11-data libxau6 libxcb-render0 libxcb-shm0 libxcb1
  libxdmcp6 libxext6 libxml2 libxrender1 libxtables12 linux-base logrotate
  mime-support netbase openssh-client openssh-sftp-server perl
  perl-modules-5.28 plymouth plymouth-label policykit-1 procps python3
  python3-minimal python3.7 python3.7-minimal sensible-utils ucf udev ufw
  wpasupplicant xkb-data
Suggested packages:
  audispd-plugins ifupdown clamav-docs apparmor daemon libarchive1
  default-dbus-session-bus | dbus-session-bus gdbm-l10n bash-completion
  iproute2-doc resolvconf avahi-autoipd isc-dhcp-client-ddns libclamunrar9
  krb5-doc krb5-user pcscd libteam-utils ntp-doc keychain libpam-ssh
  monkeysphere ssh-askpass molly-guard rssh perl-doc libterm-readline-gnu-perl
  | libterm-readline-perl-perl make libb-debug-perl liblocale-codes-perl
  desktop-base python3-doc python3-tk python3-venv python3.7-venv
  python3.7-doc binutils binfmt-support rsyslog wpagui
  libengine-pkcs11-openssl
Recommended packages:
  clamdscan wamerican | wordlist busybox | busybox-static pigz libatm1
  nftables isc-dhcp-common libpam-cap libglib2.0-data shared-mime-info
  xdg-user-dirs krb5-locales modemmanager libgpm2 publicsuffix bsd-mailx
  | mailx thin-provisioning-tools bzip2 xz-utils ppp dnsmasq-base crda sntp
  xauth ncurses-term psmisc
The following NEW packages will be installed:
  alpine-pico auditd bridge-utils clamav clamav-base clamav-daemon
  clamav-freshclam console-setup console-setup-linux cpio cracklib-runtime
  dbus dmeventd dmidecode efibootguard efibootguard-boot file firmware-realtek
  fontconfig fontconfig-config fonts-dejavu-core gdbmtool industrial-pc init
  initramfs-tools initramfs-tools-core initrd-fsck-ext4 initrd-lvm
  intel-microcode iproute2 iptables isc-dhcp-client iucode-tool kbd
  keyboard-configuration klibc-utils kmod libaio1 libauparse0 libbluetooth3
  libbsd0 libcairo2 libcap2-bin libclamav9 libcrack2 libcurl3-gnutls libcurl4
  libdatrie1 libdbus-1-3 libdevmapper-event1.02.1 libdns-export1104
  libdrm-common libdrm2 libedit2 libelf1 libexpat1 libfile-find-rule-perl
  libfontconfig1 libfreetype6 libfribidi0 libgdbm-compat4 libgdbm6
  libglib2.0-0 libgraphite2-3 libgssapi-krb5-2 libharfbuzz0b libicu63
  libip6tc0 libiptc0 libisc-export1100 libjansson4 libk5crypto3 libkeyutils1
  libklibc libkrb5-3 libkrb5support0 liblocale-gettext-perl libltdl7
  liblvm2cmd2.03 libmagic-mgc libmagic1 libmbedcrypto3 libmbedtls12
  libmbedx509-0 libmm-glib0 libmnl0 libmpdec2 libmspack0 libncurses6 libndp0
  libnetfilter-conntrack3 libnewt0.52 libnfnetlink0 libnftnl11 libnghttp2-14
  libnl-3-200 libnl-genl-3-200 libnl-route-3-200 libnm0 libnumber-compare-perl
  libopts25 libpam-pwquality libpam-systemd libpango-1.0-0 libpangocairo-1.0-0
  libpangoft2-1.0-0 libpcre2-8-0 libpcsclite1 libperl5.28 libpixman-1-0
  libplymouth4 libpng16-16 libpolkit-agent-1-0 libpolkit-backend-1-0
  libpolkit-gobject-1-0 libpopt0 libprocps7 libpsl5 libpwquality-common
  libpwquality1 libpython3-stdlib libpython3.7-minimal libpython3.7-stdlib
  libreadline5 librtmp1 libslang2 libssh2-1 libteamdctl0 libtext-glob-perl
  libtfm1 libthai-data libthai0 libwrap0 libx11-6 libx11-data libxau6
  libxcb-render0 libxcb-shm0 libxcb1 libxdmcp6 libxext6 libxml2 libxrender1
  libxtables12 linux-base linux-image-4.19 logrotate lvm2 meif mel-auditd
  mel-boot mel-firewall mel-monitor mel-mounts mel-plymouth-notifications
  mel-systemd-config mel-udev mel-umask mime-support netbase network-manager
  ntp omni-plymouth-theme openssh-client openssh-server openssh-sftp-server
  perl perl-modules-5.28 plymouth plymouth-label plymouth-themes policykit-1
  procps python3 python3-minimal python3.7 python3.7-minimal sensible-utils
  sshd-regen-keys standard-edition ucf udev ufw usrmerge vlock wpasupplicant
  xkb-data
0 upgraded, 187 newly installed, 0 to remove and 1 not upgraded.
Need to get 0 B/107 MB of archives.
After this operation, 559 MB of additional disk space will be used.
Get:1 file:/isar-apt isar/main amd64 keyboard-configuration all 1.193+mel1 [215 kB]
Get:2 file:/isar-apt isar/main amd64 console-setup-linux all 1.193+mel1 [1494 kB]
Get:3 file:/isar-apt isar/main amd64 console-setup all 1.193+mel1 [98.5 kB]
Get:4 file:/isar-apt isar/main amd64 efibootguard amd64 0.6+mel1 [16.9 kB]
Get:5 file:/isar-apt isar/main amd64 efibootguard-boot amd64 0.6+mel1 [23.9 kB]
Get:6 file:/isar-apt isar/main amd64 industrial-pc amd64 0.1 [1252 B]
Get:7 file:/isar-apt isar/main amd64 initrd-fsck-ext4 amd64 0.2 [1380 B]
Get:8 file:/isar-apt isar/main amd64 initrd-lvm amd64 0.1 [1268 B]
Get:9 file:/isar-apt isar/main amd64 linux-image-4.19 amd64 4.19.98+r0 [46.5 MB]
Get:10 file:/isar-apt isar/main amd64 meif amd64 1.0 [908 kB]
Get:11 file:/isar-apt isar/main amd64 mel-auditd amd64 0.5 [3604 B]
Get:12 file:/isar-apt isar/main amd64 mel-boot amd64 0.3 [1696 B]
Get:13 file:/isar-apt isar/main amd64 mel-firewall amd64 0.4 [1888 B]
Get:14 file:/isar-apt isar/main amd64 mel-monitor amd64 0.4 [3056 B]
Get:15 file:/isar-apt isar/main amd64 mel-mounts amd64 1.0 [1408 B]
Get:16 file:/isar-apt isar/main amd64 mel-plymouth-notifications amd64 0.3 [1524 B]
Get:17 file:/isar-apt isar/main amd64 mel-systemd-config amd64 0.4 [2252 B]
Get:18 file:/isar-apt isar/main amd64 mel-udev amd64 0.2 [3436 B]
Get:19 file:/isar-apt isar/main amd64 mel-umask amd64 1.3 [1396 B]
Get:20 file:/isar-apt isar/main amd64 omni-plymouth-theme all 1.1 [181 kB]
Get:21 file:/isar-apt isar/main amd64 sshd-regen-keys amd64 0.2 [1772 B]
Get:22 file:/isar-apt isar/main amd64 standard-edition amd64 0.2 [1580 B]
debconf: delaying package configuration, since apt-utils is not installed
Selecting previously unselected package init.
(Reading database ... 8608 files and directories currently installed.)
Preparing to unpack .../00-init_1.56+nmu1_amd64.deb ...
Unpacking init (1.56+nmu1) ...
Selecting previously unselected package perl-modules-5.28.
Preparing to unpack .../01-perl-modules-5.28_5.28.1-6_all.deb ...
Unpacking perl-modules-5.28 (5.28.1-6) ...
Selecting previously unselected package libgdbm6:amd64.
Preparing to unpack .../02-libgdbm6_1.18.1-4_amd64.deb ...
Unpacking libgdbm6:amd64 (1.18.1-4) ...
Selecting previously unselected package libgdbm-compat4:amd64.
Preparing to unpack .../03-libgdbm-compat4_1.18.1-4_amd64.deb ...
Unpacking libgdbm-compat4:amd64 (1.18.1-4) ...
Selecting previously unselected package libperl5.28:amd64.
Preparing to unpack .../04-libperl5.28_5.28.1-6_amd64.deb ...
Unpacking libperl5.28:amd64 (5.28.1-6) ...
Selecting previously unselected package perl.
Preparing to unpack .../05-perl_5.28.1-6_amd64.deb ...
Unpacking perl (5.28.1-6) ...
Selecting previously unselected package kbd.
Preparing to unpack .../06-kbd_2.0.4-4_amd64.deb ...
Unpacking kbd (2.0.4-4) ...
Selecting previously unselected package liblocale-gettext-perl.
Preparing to unpack .../07-liblocale-gettext-perl_1.07-3+b4_amd64.deb ...
Unpacking liblocale-gettext-perl (1.07-3+b4) ...
Selecting previously unselected package keyboard-configuration.
Preparing to unpack .../08-keyboard-configuration_1.193+mel1_all.deb ...
Unpacking keyboard-configuration (1.193+mel1) ...
Selecting previously unselected package console-setup-linux.
Preparing to unpack .../09-console-setup-linux_1.193+mel1_all.deb ...
Unpacking console-setup-linux (1.193+mel1) ...
Selecting previously unselected package xkb-data.
Preparing to unpack .../10-xkb-data_2.26-2_all.deb ...
Unpacking xkb-data (2.26-2) ...
Selecting previously unselected package console-setup.
Preparing to unpack .../11-console-setup_1.193+mel1_all.deb ...
Unpacking console-setup (1.193+mel1) ...
Selecting previously unselected package libbluetooth3:amd64.
Preparing to unpack .../12-libbluetooth3_5.50-1_amd64.deb ...
Unpacking libbluetooth3:amd64 (5.50-1) ...
Selecting previously unselected package libkeyutils1:amd64.
Preparing to unpack .../13-libkeyutils1_1.6-6_amd64.deb ...
Unpacking libkeyutils1:amd64 (1.6-6) ...
Selecting previously unselected package libkrb5support0:amd64.
Preparing to unpack .../14-libkrb5support0_1.17-3_amd64.deb ...
Unpacking libkrb5support0:amd64 (1.17-3) ...
Selecting previously unselected package libk5crypto3:amd64.
Preparing to unpack .../15-libk5crypto3_1.17-3_amd64.deb ...
Unpacking libk5crypto3:amd64 (1.17-3) ...
Selecting previously unselected package libkrb5-3:amd64.
Preparing to unpack .../16-libkrb5-3_1.17-3_amd64.deb ...
Unpacking libkrb5-3:amd64 (1.17-3) ...
Selecting previously unselected package libgssapi-krb5-2:amd64.
Preparing to unpack .../17-libgssapi-krb5-2_1.17-3_amd64.deb ...
Unpacking libgssapi-krb5-2:amd64 (1.17-3) ...
Selecting previously unselected package libnghttp2-14:amd64.
Preparing to unpack .../18-libnghttp2-14_1.36.0-2+deb10u1_amd64.deb ...
Unpacking libnghttp2-14:amd64 (1.36.0-2+deb10u1) ...
Selecting previously unselected package libpsl5:amd64.
Preparing to unpack .../19-libpsl5_0.20.2-2_amd64.deb ...
Unpacking libpsl5:amd64 (0.20.2-2) ...
Selecting previously unselected package librtmp1:amd64.
Preparing to unpack .../20-librtmp1_2.4+20151223.gitfa8646d.1-2_amd64.deb ...
Unpacking librtmp1:amd64 (2.4+20151223.gitfa8646d.1-2) ...
Selecting previously unselected package libssh2-1:amd64.
Preparing to unpack .../21-libssh2-1_1.8.0-2.1_amd64.deb ...
Unpacking libssh2-1:amd64 (1.8.0-2.1) ...
Selecting previously unselected package libcurl3-gnutls:amd64.
Preparing to unpack .../22-libcurl3-gnutls_7.64.0-4_amd64.deb ...
Unpacking libcurl3-gnutls:amd64 (7.64.0-4) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../23-libglib2.0-0_2.58.3-2+deb10u2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.58.3-2+deb10u2) ...
Selecting previously unselected package libjansson4:amd64.
Preparing to unpack .../24-libjansson4_2.12-1_amd64.deb ...
Unpacking libjansson4:amd64 (2.12-1) ...
Selecting previously unselected package libmm-glib0:amd64.
Preparing to unpack .../25-libmm-glib0_1.10.0-1_amd64.deb ...
Unpacking libmm-glib0:amd64 (1.10.0-1) ...
Selecting previously unselected package libndp0:amd64.
Preparing to unpack .../26-libndp0_1.6-1+b1_amd64.deb ...
Unpacking libndp0:amd64 (1.6-1+b1) ...
Selecting previously unselected package libslang2:amd64.
Preparing to unpack .../27-libslang2_2.3.2-2_amd64.deb ...
Unpacking libslang2:amd64 (2.3.2-2) ...
Selecting previously unselected package libnewt0.52:amd64.
Preparing to unpack .../28-libnewt0.52_0.52.20-8_amd64.deb ...
Unpacking libnewt0.52:amd64 (0.52.20-8) ...
Selecting previously unselected package libnm0:amd64.
Preparing to unpack .../29-libnm0_1.14.6-2+deb10u1_amd64.deb ...
Unpacking libnm0:amd64 (1.14.6-2+deb10u1) ...
Selecting previously unselected package libexpat1:amd64.
Preparing to unpack .../30-libexpat1_2.2.6-2+deb10u1_amd64.deb ...
Unpacking libexpat1:amd64 (2.2.6-2+deb10u1) ...
Selecting previously unselected package libpolkit-gobject-1-0:amd64.
Preparing to unpack .../31-libpolkit-gobject-1-0_0.105-25_amd64.deb ...
Unpacking libpolkit-gobject-1-0:amd64 (0.105-25) ...
Selecting previously unselected package libpolkit-agent-1-0:amd64.
Preparing to unpack .../32-libpolkit-agent-1-0_0.105-25_amd64.deb ...
Unpacking libpolkit-agent-1-0:amd64 (0.105-25) ...
Selecting previously unselected package libdbus-1-3:amd64.
Preparing to unpack .../33-libdbus-1-3_1.12.16-1_amd64.deb ...
Unpacking libdbus-1-3:amd64 (1.12.16-1) ...
Selecting previously unselected package libteamdctl0:amd64.
Preparing to unpack .../34-libteamdctl0_1.28-1_amd64.deb ...
Unpacking libteamdctl0:amd64 (1.28-1) ...
Selecting previously unselected package libnl-3-200:amd64.
Preparing to unpack .../35-libnl-3-200_3.4.0-1_amd64.deb ...
Unpacking libnl-3-200:amd64 (3.4.0-1) ...
Selecting previously unselected package libnl-genl-3-200:amd64.
Preparing to unpack .../36-libnl-genl-3-200_3.4.0-1_amd64.deb ...
Unpacking libnl-genl-3-200:amd64 (3.4.0-1) ...
Selecting previously unselected package libnl-route-3-200:amd64.
Preparing to unpack .../37-libnl-route-3-200_3.4.0-1_amd64.deb ...
Unpacking libnl-route-3-200:amd64 (3.4.0-1) ...
Selecting previously unselected package libpcsclite1:amd64.
Preparing to unpack .../38-libpcsclite1_1.8.24-1_amd64.deb ...
Unpacking libpcsclite1:amd64 (1.8.24-1) ...
Selecting previously unselected package wpasupplicant.
Preparing to unpack .../39-wpasupplicant_2%3a2.7+git20190128+0c1e29f-6+deb10u1_amd64.deb ...
Unpacking wpasupplicant (2:2.7+git20190128+0c1e29f-6+deb10u1) ...
Selecting previously unselected package dbus.
Preparing to unpack .../40-dbus_1.12.16-1_amd64.deb ...
Unpacking dbus (1.12.16-1) ...
Selecting previously unselected package udev.
Preparing to unpack .../41-udev_241-7~deb10u3_amd64.deb ...
Unpacking udev (241-7~deb10u3) ...
Selecting previously unselected package libpam-systemd:amd64.
Preparing to unpack .../42-libpam-systemd_241-7~deb10u3_amd64.deb ...
Unpacking libpam-systemd:amd64 (241-7~deb10u3) ...
Selecting previously unselected package libpolkit-backend-1-0:amd64.
Preparing to unpack .../43-libpolkit-backend-1-0_0.105-25_amd64.deb ...
Unpacking libpolkit-backend-1-0:amd64 (0.105-25) ...
Selecting previously unselected package policykit-1.
Preparing to unpack .../44-policykit-1_0.105-25_amd64.deb ...
Unpacking policykit-1 (0.105-25) ...
Selecting previously unselected package network-manager.
Preparing to unpack .../45-network-manager_1.14.6-2+deb10u1_amd64.deb ...
Unpacking network-manager (1.14.6-2+deb10u1) ...
Selecting previously unselected package libpython3.7-minimal:amd64.
Preparing to unpack .../46-libpython3.7-minimal_3.7.3-2+deb10u1_amd64.deb ...
Unpacking libpython3.7-minimal:amd64 (3.7.3-2+deb10u1) ...
Selecting previously unselected package python3.7-minimal.
Preparing to unpack .../47-python3.7-minimal_3.7.3-2+deb10u1_amd64.deb ...
Unpacking python3.7-minimal (3.7.3-2+deb10u1) ...
Setting up libpython3.7-minimal:amd64 (3.7.3-2+deb10u1) ...
Setting up libexpat1:amd64 (2.2.6-2+deb10u1) ...
Setting up python3.7-minimal (3.7.3-2+deb10u1) ...
Selecting previously unselected package python3-minimal.
(Reading database ... 12494 files and directories currently installed.)
Preparing to unpack .../0-python3-minimal_3.7.3-1_amd64.deb ...
Unpacking python3-minimal (3.7.3-1) ...
Selecting previously unselected package mime-support.
Preparing to unpack .../1-mime-support_3.62_all.deb ...
Unpacking mime-support (3.62) ...
Selecting previously unselected package libmpdec2:amd64.
Preparing to unpack .../2-libmpdec2_2.4.2-2_amd64.deb ...
Unpacking libmpdec2:amd64 (2.4.2-2) ...
Selecting previously unselected package libpython3.7-stdlib:amd64.
Preparing to unpack .../3-libpython3.7-stdlib_3.7.3-2+deb10u1_amd64.deb ...
Unpacking libpython3.7-stdlib:amd64 (3.7.3-2+deb10u1) ...
Selecting previously unselected package python3.7.
Preparing to unpack .../4-python3.7_3.7.3-2+deb10u1_amd64.deb ...
Unpacking python3.7 (3.7.3-2+deb10u1) ...
Selecting previously unselected package libpython3-stdlib:amd64.
Preparing to unpack .../5-libpython3-stdlib_3.7.3-1_amd64.deb ...
Unpacking libpython3-stdlib:amd64 (3.7.3-1) ...
Setting up python3-minimal (3.7.3-1) ...
Selecting previously unselected package python3.
(Reading database ... 12931 files and directories currently installed.)
Preparing to unpack .../000-python3_3.7.3-1_amd64.deb ...
Unpacking python3 (3.7.3-1) ...
Selecting previously unselected package cpio.
Preparing to unpack .../001-cpio_2.12+dfsg-9_amd64.deb ...
Unpacking cpio (2.12+dfsg-9) ...
Selecting previously unselected package dmidecode.
Preparing to unpack .../002-dmidecode_3.2-1_amd64.deb ...
Unpacking dmidecode (3.2-1) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../003-libelf1_0.176-1.1_amd64.deb ...
Unpacking libelf1:amd64 (0.176-1.1) ...
Selecting previously unselected package libmnl0:amd64.
Preparing to unpack .../004-libmnl0_1.0.4-2_amd64.deb ...
Unpacking libmnl0:amd64 (1.0.4-2) ...
Selecting previously unselected package libxtables12:amd64.
Preparing to unpack .../005-libxtables12_1.8.2-4_amd64.deb ...
Unpacking libxtables12:amd64 (1.8.2-4) ...
Selecting previously unselected package libcap2-bin.
Preparing to unpack .../006-libcap2-bin_1%3a2.25-2_amd64.deb ...
Unpacking libcap2-bin (1:2.25-2) ...
Selecting previously unselected package iproute2.
Preparing to unpack .../007-iproute2_4.20.0-2_amd64.deb ...
Unpacking iproute2 (4.20.0-2) ...
Selecting previously unselected package libip6tc0:amd64.
Preparing to unpack .../008-libip6tc0_1.8.2-4_amd64.deb ...
Unpacking libip6tc0:amd64 (1.8.2-4) ...
Selecting previously unselected package libiptc0:amd64.
Preparing to unpack .../009-libiptc0_1.8.2-4_amd64.deb ...
Unpacking libiptc0:amd64 (1.8.2-4) ...
Selecting previously unselected package libnfnetlink0:amd64.
Preparing to unpack .../010-libnfnetlink0_1.0.1-3+b1_amd64.deb ...
Unpacking libnfnetlink0:amd64 (1.0.1-3+b1) ...
Selecting previously unselected package libnetfilter-conntrack3:amd64.
Preparing to unpack .../011-libnetfilter-conntrack3_1.0.7-1_amd64.deb ...
Unpacking libnetfilter-conntrack3:amd64 (1.0.7-1) ...
Selecting previously unselected package libnftnl11:amd64.
Preparing to unpack .../012-libnftnl11_1.1.2-2_amd64.deb ...
Unpacking libnftnl11:amd64 (1.1.2-2) ...
Selecting previously unselected package iptables.
Preparing to unpack .../013-iptables_1.8.2-4_amd64.deb ...
Unpacking iptables (1.8.2-4) ...
Selecting previously unselected package libisc-export1100:amd64.
Preparing to unpack .../014-libisc-export1100_1%3a9.11.5.P4+dfsg-5.1_amd64.deb ...
Unpacking libisc-export1100:amd64 (1:9.11.5.P4+dfsg-5.1) ...
Selecting previously unselected package libdns-export1104.
Preparing to unpack .../015-libdns-export1104_1%3a9.11.5.P4+dfsg-5.1_amd64.deb ...
Unpacking libdns-export1104 (1:9.11.5.P4+dfsg-5.1) ...
Selecting previously unselected package isc-dhcp-client.
Preparing to unpack .../016-isc-dhcp-client_4.4.1-2_amd64.deb ...
Unpacking isc-dhcp-client (4.4.1-2) ...
Selecting previously unselected package kmod.
Preparing to unpack .../017-kmod_26-1_amd64.deb ...
Unpacking kmod (26-1) ...
Selecting previously unselected package libpopt0:amd64.
Preparing to unpack .../018-libpopt0_1.16-12_amd64.deb ...
Unpacking libpopt0:amd64 (1.16-12) ...
Selecting previously unselected package logrotate.
Preparing to unpack .../019-logrotate_3.14.0-4_amd64.deb ...
Unpacking logrotate (3.14.0-4) ...
Selecting previously unselected package netbase.
Preparing to unpack .../020-netbase_5.6_all.deb ...
Unpacking netbase (5.6) ...
Selecting previously unselected package libncurses6:amd64.
Preparing to unpack .../021-libncurses6_6.1+20181013-2+deb10u2_amd64.deb ...
Unpacking libncurses6:amd64 (6.1+20181013-2+deb10u2) ...
Selecting previously unselected package libprocps7:amd64.
Preparing to unpack .../022-libprocps7_2%3a3.3.15-2_amd64.deb ...
Unpacking libprocps7:amd64 (2:3.3.15-2) ...
Selecting previously unselected package procps.
Preparing to unpack .../023-procps_2%3a3.3.15-2_amd64.deb ...
Unpacking procps (2:3.3.15-2) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../024-sensible-utils_0.0.12_all.deb ...
Unpacking sensible-utils (0.0.12) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../025-libmagic-mgc_1%3a5.35-4+deb10u1_amd64.deb ...
Unpacking libmagic-mgc (1:5.35-4+deb10u1) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../026-libmagic1_1%3a5.35-4+deb10u1_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.35-4+deb10u1) ...
Selecting previously unselected package file.
Preparing to unpack .../027-file_1%3a5.35-4+deb10u1_amd64.deb ...
Unpacking file (1:5.35-4+deb10u1) ...
Selecting previously unselected package libbsd0:amd64.
Preparing to unpack .../028-libbsd0_0.9.1-2_amd64.deb ...
Unpacking libbsd0:amd64 (0.9.1-2) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../029-libedit2_3.1-20181209-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20181209-1) ...
Selecting previously unselected package openssh-client.
Preparing to unpack .../030-openssh-client_1%3a7.9p1-10+deb10u2_amd64.deb ...
Unpacking openssh-client (1:7.9p1-10+deb10u2) ...
Selecting previously unselected package ucf.
Preparing to unpack .../031-ucf_3.0038+nmu1_all.deb ...
Moving old data out of the way
Unpacking ucf (3.0038+nmu1) ...
Selecting previously unselected package alpine-pico.
Preparing to unpack .../032-alpine-pico_2.21+dfsg1-1.1_amd64.deb ...
Unpacking alpine-pico (2.21+dfsg1-1.1) ...
Selecting previously unselected package libauparse0:amd64.
Preparing to unpack .../033-libauparse0_1%3a2.8.4-3_amd64.deb ...
Unpacking libauparse0:amd64 (1:2.8.4-3) ...
Selecting previously unselected package libwrap0:amd64.
Preparing to unpack .../034-libwrap0_7.6.q-28_amd64.deb ...
Unpacking libwrap0:amd64 (7.6.q-28) ...
Selecting previously unselected package auditd.
Preparing to unpack .../035-auditd_1%3a2.8.4-3_amd64.deb ...
Unpacking auditd (1:2.8.4-3) ...
Selecting previously unselected package bridge-utils.
Preparing to unpack .../036-bridge-utils_1.6-2_amd64.deb ...
Unpacking bridge-utils (1.6-2) ...
Selecting previously unselected package clamav-base.
Preparing to unpack .../037-clamav-base_0.102.2+dfsg-0+deb10u1_all.deb ...
Unpacking clamav-base (0.102.2+dfsg-0+deb10u1) ...
Selecting previously unselected package libcurl4:amd64.
Preparing to unpack .../038-libcurl4_7.64.0-4_amd64.deb ...
Unpacking libcurl4:amd64 (7.64.0-4) ...
Selecting previously unselected package libltdl7:amd64.
Preparing to unpack .../039-libltdl7_2.4.6-9_amd64.deb ...
Unpacking libltdl7:amd64 (2.4.6-9) ...
Selecting previously unselected package libmspack0:amd64.
Preparing to unpack .../040-libmspack0_0.10.1-1_amd64.deb ...
Unpacking libmspack0:amd64 (0.10.1-1) ...
Selecting previously unselected package libpcre2-8-0:amd64.
Preparing to unpack .../041-libpcre2-8-0_10.32-5_amd64.deb ...
Unpacking libpcre2-8-0:amd64 (10.32-5) ...
Selecting previously unselected package libtfm1:amd64.
Preparing to unpack .../042-libtfm1_0.13-4_amd64.deb ...
Unpacking libtfm1:amd64 (0.13-4) ...
Selecting previously unselected package libicu63:amd64.
Preparing to unpack .../043-libicu63_63.1-6_amd64.deb ...
Unpacking libicu63:amd64 (63.1-6) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../044-libxml2_2.9.4+dfsg1-7+b3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.4+dfsg1-7+b3) ...
Selecting previously unselected package libclamav9:amd64.
Preparing to unpack .../045-libclamav9_0.102.2+dfsg-0+deb10u1_amd64.deb ...
Unpacking libclamav9:amd64 (0.102.2+dfsg-0+deb10u1) ...
Selecting previously unselected package clamav-freshclam.
Preparing to unpack .../046-clamav-freshclam_0.102.2+dfsg-0+deb10u1_amd64.deb ...
Unpacking clamav-freshclam (0.102.2+dfsg-0+deb10u1) ...
Selecting previously unselected package clamav.
Preparing to unpack .../047-clamav_0.102.2+dfsg-0+deb10u1_amd64.deb ...
Unpacking clamav (0.102.2+dfsg-0+deb10u1) ...
Selecting previously unselected package clamav-daemon.
Preparing to unpack .../048-clamav-daemon_0.102.2+dfsg-0+deb10u1_amd64.deb ...
Unpacking clamav-daemon (0.102.2+dfsg-0+deb10u1) ...
Selecting previously unselected package libcrack2:amd64.
Preparing to unpack .../049-libcrack2_2.9.6-2_amd64.deb ...
Unpacking libcrack2:amd64 (2.9.6-2) ...
Selecting previously unselected package cracklib-runtime.
Preparing to unpack .../050-cracklib-runtime_2.9.6-2_amd64.deb ...
Unpacking cracklib-runtime (2.9.6-2) ...
Selecting previously unselected package libdevmapper-event1.02.1:amd64.
Preparing to unpack .../051-libdevmapper-event1.02.1_2%3a1.02.155-3_amd64.deb ...
Unpacking libdevmapper-event1.02.1:amd64 (2:1.02.155-3) ...
Selecting previously unselected package libaio1:amd64.
Preparing to unpack .../052-libaio1_0.3.112-3_amd64.deb ...
Unpacking libaio1:amd64 (0.3.112-3) ...
Selecting previously unselected package liblvm2cmd2.03:amd64.
Preparing to unpack .../053-liblvm2cmd2.03_2.03.02-3_amd64.deb ...
Unpacking liblvm2cmd2.03:amd64 (2.03.02-3) ...
Selecting previously unselected package dmeventd.
Preparing to unpack .../054-dmeventd_2%3a1.02.155-3_amd64.deb ...
Unpacking dmeventd (2:1.02.155-3) ...
Selecting previously unselected package efibootguard.
Preparing to unpack .../055-efibootguard_0.6+mel1_amd64.deb ...
Unpacking efibootguard (0.6+mel1) ...
Selecting previously unselected package efibootguard-boot.
Preparing to unpack .../056-efibootguard-boot_0.6+mel1_amd64.deb ...
Unpacking efibootguard-boot (0.6+mel1) ...
Selecting previously unselected package firmware-realtek.
Preparing to unpack .../057-firmware-realtek_20190114-2_all.deb ...
Unpacking firmware-realtek (20190114-2) ...
Selecting previously unselected package libpng16-16:amd64.
Preparing to unpack .../058-libpng16-16_1.6.36-6_amd64.deb ...
Unpacking libpng16-16:amd64 (1.6.36-6) ...
Selecting previously unselected package libfreetype6:amd64.
Preparing to unpack .../059-libfreetype6_2.9.1-3+deb10u1_amd64.deb ...
Unpacking libfreetype6:amd64 (2.9.1-3+deb10u1) ...
Selecting previously unselected package fonts-dejavu-core.
Preparing to unpack .../060-fonts-dejavu-core_2.37-1_all.deb ...
Unpacking fonts-dejavu-core (2.37-1) ...
Selecting previously unselected package fontconfig-config.
Preparing to unpack .../061-fontconfig-config_2.13.1-2_all.deb ...
Unpacking fontconfig-config (2.13.1-2) ...
Selecting previously unselected package libfontconfig1:amd64.
Preparing to unpack .../062-libfontconfig1_2.13.1-2_amd64.deb ...
Unpacking libfontconfig1:amd64 (2.13.1-2) ...
Selecting previously unselected package fontconfig.
Preparing to unpack .../063-fontconfig_2.13.1-2_amd64.deb ...
Unpacking fontconfig (2.13.1-2) ...
Selecting previously unselected package gdbmtool.
Preparing to unpack .../064-gdbmtool_1.18.1-4_amd64.deb ...
Unpacking gdbmtool (1.18.1-4) ...
Selecting previously unselected package industrial-pc.
Preparing to unpack .../065-industrial-pc_0.1_amd64.deb ...
Unpacking industrial-pc (0.1) ...
Selecting previously unselected package libklibc:amd64.
Preparing to unpack .../066-libklibc_2.0.6-1_amd64.deb ...
Unpacking libklibc:amd64 (2.0.6-1) ...
Selecting previously unselected package klibc-utils.
Preparing to unpack .../067-klibc-utils_2.0.6-1_amd64.deb ...
Unpacking klibc-utils (2.0.6-1) ...
Selecting previously unselected package initramfs-tools-core.
Preparing to unpack .../068-initramfs-tools-core_0.133+deb10u1_all.deb ...
Unpacking initramfs-tools-core (0.133+deb10u1) ...
Selecting previously unselected package linux-base.
Preparing to unpack .../069-linux-base_4.6_all.deb ...
Unpacking linux-base (4.6) ...
Selecting previously unselected package initramfs-tools.
Preparing to unpack .../070-initramfs-tools_0.133+deb10u1_all.deb ...
Unpacking initramfs-tools (0.133+deb10u1) ...
Selecting previously unselected package initrd-fsck-ext4.
Preparing to unpack .../071-initrd-fsck-ext4_0.2_amd64.deb ...
Unpacking initrd-fsck-ext4 (0.2) ...
Selecting previously unselected package libreadline5:amd64.
Preparing to unpack .../072-libreadline5_5.2+dfsg-3+b13_amd64.deb ...
Unpacking libreadline5:amd64 (5.2+dfsg-3+b13) ...
Selecting previously unselected package lvm2.
Preparing to unpack .../073-lvm2_2.03.02-3_amd64.deb ...
Unpacking lvm2 (2.03.02-3) ...
Selecting previously unselected package initrd-lvm.
Preparing to unpack .../074-initrd-lvm_0.1_amd64.deb ...
Unpacking initrd-lvm (0.1) ...
Selecting previously unselected package iucode-tool.
Preparing to unpack .../075-iucode-tool_2.3.1-1_amd64.deb ...
Unpacking iucode-tool (2.3.1-1) ...
Selecting previously unselected package intel-microcode.
Preparing to unpack .../076-intel-microcode_3.20191115.2~deb10u1_amd64.deb ...
Unpacking intel-microcode (3.20191115.2~deb10u1) ...
Selecting previously unselected package libpixman-1-0:amd64.
Preparing to unpack .../077-libpixman-1-0_0.36.0-1_amd64.deb ...
Unpacking libpixman-1-0:amd64 (0.36.0-1) ...
Selecting previously unselected package libxau6:amd64.
Preparing to unpack .../078-libxau6_1%3a1.0.8-1+b2_amd64.deb ...
Unpacking libxau6:amd64 (1:1.0.8-1+b2) ...
Selecting previously unselected package libxdmcp6:amd64.
Preparing to unpack .../079-libxdmcp6_1%3a1.1.2-3_amd64.deb ...
Unpacking libxdmcp6:amd64 (1:1.1.2-3) ...
Selecting previously unselected package libxcb1:amd64.
Preparing to unpack .../080-libxcb1_1.13.1-2_amd64.deb ...
Unpacking libxcb1:amd64 (1.13.1-2) ...
Selecting previously unselected package libx11-data.
Preparing to unpack .../081-libx11-data_2%3a1.6.7-1_all.deb ...
Unpacking libx11-data (2:1.6.7-1) ...
Selecting previously unselected package libx11-6:amd64.
Preparing to unpack .../082-libx11-6_2%3a1.6.7-1_amd64.deb ...
Unpacking libx11-6:amd64 (2:1.6.7-1) ...
Selecting previously unselected package libxcb-render0:amd64.
Preparing to unpack .../083-libxcb-render0_1.13.1-2_amd64.deb ...
Unpacking libxcb-render0:amd64 (1.13.1-2) ...
Selecting previously unselected package libxcb-shm0:amd64.
Preparing to unpack .../084-libxcb-shm0_1.13.1-2_amd64.deb ...
Unpacking libxcb-shm0:amd64 (1.13.1-2) ...
Selecting previously unselected package libxext6:amd64.
Preparing to unpack .../085-libxext6_2%3a1.3.3-1+b2_amd64.deb ...
Unpacking libxext6:amd64 (2:1.3.3-1+b2) ...
Selecting previously unselected package libxrender1:amd64.
Preparing to unpack .../086-libxrender1_1%3a0.9.10-1_amd64.deb ...
Unpacking libxrender1:amd64 (1:0.9.10-1) ...
Selecting previously unselected package libcairo2:amd64.
Preparing to unpack .../087-libcairo2_1.16.0-4_amd64.deb ...
Unpacking libcairo2:amd64 (1.16.0-4) ...
Selecting previously unselected package libdatrie1:amd64.
Preparing to unpack .../088-libdatrie1_0.2.12-2_amd64.deb ...
Unpacking libdatrie1:amd64 (0.2.12-2) ...
Selecting previously unselected package libdrm-common.
Preparing to unpack .../089-libdrm-common_2.4.97-1_all.deb ...
Unpacking libdrm-common (2.4.97-1) ...
Selecting previously unselected package libdrm2:amd64.
Preparing to unpack .../090-libdrm2_2.4.97-1_amd64.deb ...
Unpacking libdrm2:amd64 (2.4.97-1) ...
Selecting previously unselected package libnumber-compare-perl.
Preparing to unpack .../091-libnumber-compare-perl_0.03-1_all.deb ...
Unpacking libnumber-compare-perl (0.03-1) ...
Selecting previously unselected package libtext-glob-perl.
Preparing to unpack .../092-libtext-glob-perl_0.10-1_all.deb ...
Unpacking libtext-glob-perl (0.10-1) ...
Selecting previously unselected package libfile-find-rule-perl.
Preparing to unpack .../093-libfile-find-rule-perl_0.34-1_all.deb ...
Unpacking libfile-find-rule-perl (0.34-1) ...
Selecting previously unselected package libfribidi0:amd64.
Preparing to unpack .../094-libfribidi0_1.0.5-3.1+deb10u1_amd64.deb ...
Unpacking libfribidi0:amd64 (1.0.5-3.1+deb10u1) ...
Selecting previously unselected package libgraphite2-3:amd64.
Preparing to unpack .../095-libgraphite2-3_1.3.13-7_amd64.deb ...
Unpacking libgraphite2-3:amd64 (1.3.13-7) ...
Selecting previously unselected package libharfbuzz0b:amd64.
Preparing to unpack .../096-libharfbuzz0b_2.3.1-1_amd64.deb ...
Unpacking libharfbuzz0b:amd64 (2.3.1-1) ...
Selecting previously unselected package libmbedcrypto3:amd64.
Preparing to unpack .../097-libmbedcrypto3_2.16.0-1_amd64.deb ...
Unpacking libmbedcrypto3:amd64 (2.16.0-1) ...
Selecting previously unselected package libmbedx509-0:amd64.
Preparing to unpack .../098-libmbedx509-0_2.16.0-1_amd64.deb ...
Unpacking libmbedx509-0:amd64 (2.16.0-1) ...
Selecting previously unselected package libmbedtls12:amd64.
Preparing to unpack .../099-libmbedtls12_2.16.0-1_amd64.deb ...
Unpacking libmbedtls12:amd64 (2.16.0-1) ...
Selecting previously unselected package libopts25:amd64.
Preparing to unpack .../100-libopts25_1%3a5.18.12-4_amd64.deb ...
Unpacking libopts25:amd64 (1:5.18.12-4) ...
Selecting previously unselected package libpwquality-common.
Preparing to unpack .../101-libpwquality-common_1.4.0-3_all.deb ...
Unpacking libpwquality-common (1.4.0-3) ...
Selecting previously unselected package libpwquality1:amd64.
Preparing to unpack .../102-libpwquality1_1.4.0-3_amd64.deb ...
Unpacking libpwquality1:amd64 (1.4.0-3) ...
Selecting previously unselected package libpam-pwquality:amd64.
Preparing to unpack .../103-libpam-pwquality_1.4.0-3_amd64.deb ...
Unpacking libpam-pwquality:amd64 (1.4.0-3) ...
Selecting previously unselected package libthai-data.
Preparing to unpack .../104-libthai-data_0.1.28-2_all.deb ...
Unpacking libthai-data (0.1.28-2) ...
Selecting previously unselected package libthai0:amd64.
Preparing to unpack .../105-libthai0_0.1.28-2_amd64.deb ...
Unpacking libthai0:amd64 (0.1.28-2) ...
Selecting previously unselected package libpango-1.0-0:amd64.
Preparing to unpack .../106-libpango-1.0-0_1.42.4-7~deb10u1_amd64.deb ...
Unpacking libpango-1.0-0:amd64 (1.42.4-7~deb10u1) ...
Selecting previously unselected package libpangoft2-1.0-0:amd64.
Preparing to unpack .../107-libpangoft2-1.0-0_1.42.4-7~deb10u1_amd64.deb ...
Unpacking libpangoft2-1.0-0:amd64 (1.42.4-7~deb10u1) ...
Selecting previously unselected package libpangocairo-1.0-0:amd64.
Preparing to unpack .../108-libpangocairo-1.0-0_1.42.4-7~deb10u1_amd64.deb ...
Unpacking libpangocairo-1.0-0:amd64 (1.42.4-7~deb10u1) ...
Selecting previously unselected package libplymouth4:amd64.
Preparing to unpack .../109-libplymouth4_0.9.4-1.1_amd64.deb ...
Unpacking libplymouth4:amd64 (0.9.4-1.1) ...
Selecting previously unselected package linux-image-4.19.
Preparing to unpack .../110-linux-image-4.19_4.19.98+r0_amd64.deb ...
Unpacking linux-image-4.19 (4.19.98+r0) ...
Selecting previously unselected package meif.
Preparing to unpack .../111-meif_1.0_amd64.deb ...
Unpacking meif (1.0) ...
Selecting previously unselected package mel-auditd.
Preparing to unpack .../112-mel-auditd_0.5_amd64.deb ...
Unpacking mel-auditd (0.5) ...
Selecting previously unselected package mel-boot.
Preparing to unpack .../113-mel-boot_0.3_amd64.deb ...
Unpacking mel-boot (0.3) ...
Selecting previously unselected package ufw.
Preparing to unpack .../114-ufw_0.36-1_all.deb ...
Unpacking ufw (0.36-1) ...
Selecting previously unselected package mel-firewall.
Preparing to unpack .../115-mel-firewall_0.4_amd64.deb ...
Unpacking mel-firewall (0.4) ...
Selecting previously unselected package mel-monitor.
Preparing to unpack .../116-mel-monitor_0.4_amd64.deb ...
Unpacking mel-monitor (0.4) ...
Selecting previously unselected package mel-mounts.
Preparing to unpack .../117-mel-mounts_1.0_amd64.deb ...
Unpacking mel-mounts (1.0) ...
Selecting previously unselected package plymouth.
Preparing to unpack .../118-plymouth_0.9.4-1.1_amd64.deb ...
Unpacking plymouth (0.9.4-1.1) ...
Selecting previously unselected package mel-plymouth-notifications.
Preparing to unpack .../119-mel-plymouth-notifications_0.3_amd64.deb ...
Unpacking mel-plymouth-notifications (0.3) ...
Selecting previously unselected package mel-systemd-config.
Preparing to unpack .../120-mel-systemd-config_0.4_amd64.deb ...
Unpacking mel-systemd-config (0.4) ...
Selecting previously unselected package mel-udev.
Preparing to unpack .../121-mel-udev_0.2_amd64.deb ...
Unpacking mel-udev (0.2) ...
Selecting previously unselected package mel-umask.
Preparing to unpack .../122-mel-umask_1.3_amd64.deb ...
Unpacking mel-umask (1.3) ...
Selecting previously unselected package ntp.
Preparing to unpack .../123-ntp_1%3a4.2.8p12+dfsg-4_amd64.deb ...
Unpacking ntp (1:4.2.8p12+dfsg-4) ...
Selecting previously unselected package plymouth-label.
Preparing to unpack .../124-plymouth-label_0.9.4-1.1_amd64.deb ...
Unpacking plymouth-label (0.9.4-1.1) ...
Selecting previously unselected package plymouth-themes.
Preparing to unpack .../125-plymouth-themes_0.9.4-1.1_amd64.deb ...
Unpacking plymouth-themes (0.9.4-1.1) ...
Selecting previously unselected package omni-plymouth-theme.
Preparing to unpack .../126-omni-plymouth-theme_1.1_all.deb ...
Unpacking omni-plymouth-theme (1.1) ...
Selecting previously unselected package openssh-sftp-server.
Preparing to unpack .../127-openssh-sftp-server_1%3a7.9p1-10+deb10u2_amd64.deb ...
Unpacking openssh-sftp-server (1:7.9p1-10+deb10u2) ...
Selecting previously unselected package openssh-server.
Preparing to unpack .../128-openssh-server_1%3a7.9p1-10+deb10u2_amd64.deb ...
Unpacking openssh-server (1:7.9p1-10+deb10u2) ...
Selecting previously unselected package sshd-regen-keys.
Preparing to unpack .../129-sshd-regen-keys_0.2_amd64.deb ...
Unpacking sshd-regen-keys (0.2) ...
Selecting previously unselected package standard-edition.
Preparing to unpack .../130-standard-edition_0.2_amd64.deb ...
Unpacking standard-edition (0.2) ...
Selecting previously unselected package usrmerge.
Preparing to unpack .../131-usrmerge_21_all.deb ...
Unpacking usrmerge (21) ...
Selecting previously unselected package vlock.
Preparing to unpack .../132-vlock_2.2.2-8_amd64.deb ...
Unpacking vlock (2.2.2-8) ...
Setting up libpwquality-common (1.4.0-3) ...
Setting up perl-modules-5.28 (5.28.1-6) ...
Setting up cpio (2.12+dfsg-9) ...
update-alternatives: using /bin/mt-gnu to provide /bin/mt (mt) in auto mode
Setting up libgraphite2-3:amd64 (1.3.13-7) ...
Setting up libpixman-1-0:amd64 (0.36.0-1) ...
Setting up libxau6:amd64 (1:1.0.8-1+b2) ...
Setting up libkeyutils1:amd64 (1.6-6) ...
Setting up libip6tc0:amd64 (1.8.2-4) ...
Setting up libpsl5:amd64 (0.20.2-2) ...
Setting up libreadline5:amd64 (5.2+dfsg-3+b13) ...
Setting up linux-base (4.6) ...
Setting up mime-support (3.62) ...
Setting up libdevmapper-event1.02.1:amd64 (2:1.02.155-3) ...
Setting up standard-edition (0.2) ...
Setting up init (1.56+nmu1) ...
Setting up libdatrie1:amd64 (0.2.12-2) ...
Setting up mel-systemd-config (0.4) ...
'/etc/systemd/network/99-default.link' -> '/lib/systemd/network/99-default.link'
Setting up iucode-tool (2.3.1-1) ...
Setting up libmagic-mgc (1:5.35-4+deb10u1) ...
Setting up libglib2.0-0:amd64 (2.58.3-2+deb10u2) ...
No schema files found: doing nothing.
Setting up intel-microcode (3.20191115.2~deb10u1) ...
intel-microcode: initramfs support missing
Setting up libprocps7:amd64 (2:3.3.15-2) ...
Setting up libmspack0:amd64 (0.10.1-1) ...
Setting up libtfm1:amd64 (0.13-4) ...
Setting up libnghttp2-14:amd64 (1.36.0-2+deb10u1) ...
Setting up libmagic1:amd64 (1:5.35-4+deb10u1) ...
Setting up xkb-data (2.26-2) ...
Setting up file (1:5.35-4+deb10u1) ...
Setting up kmod (26-1) ...
Setting up libopts25:amd64 (1:5.18.12-4) ...
Setting up libauparse0:amd64 (1:2.8.4-3) ...
Setting up mel-umask (1.3) ...
Setting up libicu63:amd64 (63.1-6) ...
Setting up libjansson4:amd64 (2.12-1) ...
Setting up libkrb5support0:amd64 (1.17-3) ...
Setting up libcap2-bin (1:2.25-2) ...
Setting up alpine-pico (2.21+dfsg1-1.1) ...
update-alternatives: using /usr/bin/pico.alpine to provide /usr/bin/pico (pico) in auto mode
Setting up libklibc:amd64 (2.0.6-1) ...
Setting up libslang2:amd64 (2.3.2-2) ...
Setting up libwrap0:amd64 (7.6.q-28) ...
Setting up libx11-data (2:1.6.7-1) ...
Setting up librtmp1:amd64 (2.4+20151223.gitfa8646d.1-2) ...
Setting up libiptc0:amd64 (1.8.2-4) ...
Setting up firmware-realtek (20190114-2) ...
Setting up libncurses6:amd64 (6.1+20181013-2+deb10u2) ...
Setting up libdbus-1-3:amd64 (1.12.16-1) ...
Setting up dbus (1.12.16-1) ...
Running in chroot, ignoring request.
invoke-rc.d: policy-rc.d denied execution of start.
Setting up libfribidi0:amd64 (1.0.5-3.1+deb10u1) ...
Setting up efibootguard (0.6+mel1) ...
Setting up libpng16-16:amd64 (1.6.36-6) ...
Setting up vlock (2.2.2-8) ...
Setting up libmnl0:amd64 (1.0.4-2) ...
Setting up udev (241-7~deb10u3) ...
A chroot environment has been detected, udev not started.
Setting up fonts-dejavu-core (2.37-1) ...
Setting up libpcsclite1:amd64 (1.8.24-1) ...
Setting up libpcre2-8-0:amd64 (10.32-5) ...
Setting up libk5crypto3:amd64 (1.17-3) ...
Setting up libxtables12:amd64 (1.8.2-4) ...
Setting up libltdl7:amd64 (2.4.6-9) ...
Setting up bridge-utils (1.6-2) ...
Setting up libnm0:amd64 (1.14.6-2+deb10u1) ...
Setting up libcrack2:amd64 (2.9.6-2) ...
Setting up libisc-export1100:amd64 (1:9.11.5.P4+dfsg-5.1) ...
Setting up libplymouth4:amd64 (0.9.4-1.1) ...
Setting up mel-udev (0.2) ...
Setting up sensible-utils (0.0.12) ...
Setting up industrial-pc (0.1) ...
Setting up libmm-glib0:amd64 (1.10.0-1) ...
Setting up libbluetooth3:amd64 (5.50-1) ...
Setting up libnfnetlink0:amd64 (1.0.1-3+b1) ...
Setting up procps (2:3.3.15-2) ...
update-alternatives: using /usr/bin/w.procps to provide /usr/bin/w (w) in auto mode
Setting up libnl-3-200:amd64 (3.4.0-1) ...
Setting up libpam-systemd:amd64 (241-7~deb10u3) ...
Setting up libmbedcrypto3:amd64 (2.16.0-1) ...
Setting up libthai-data (0.1.28-2) ...
Setting up kbd (2.0.4-4) ...
Setting up libssh2-1:amd64 (1.8.0-2.1) ...
Setting up netbase (5.6) ...
Setting up libkrb5-3:amd64 (1.17-3) ...
Setting up efibootguard-boot (0.6+mel1) ...
Setting up libmpdec2:amd64 (2.4.2-2) ...
Setting up libndp0:amd64 (1.6-1+b1) ...
Setting up dmidecode (3.2-1) ...
Setting up libaio1:amd64 (0.3.112-3) ...
Setting up mel-boot (0.3) ...
Created symlink /etc/systemd/system/multi-user.target.wants/mel-boot.service -> /lib/systemd/system/mel-boot.service.
Setting up klibc-utils (2.0.6-1) ...
No diversion 'diversion of /usr/share/initramfs-tools/hooks/klibc to /usr/share/initramfs-tools/hooks/klibc^i-t by klibc-utils', none removed.
Setting up libbsd0:amd64 (0.9.1-2) ...
Setting up libdrm-common (2.4.97-1) ...
Setting up libelf1:amd64 (0.176-1.1) ...
Setting up libdns-export1104 (1:9.11.5.P4+dfsg-5.1) ...
Setting up libxml2:amd64 (2.9.4+dfsg1-7+b3) ...
Setting up liblocale-gettext-perl (1.07-3+b4) ...
Setting up libpolkit-gobject-1-0:amd64 (0.105-25) ...
Setting up libgdbm6:amd64 (1.18.1-4) ...
Setting up libpopt0:amd64 (1.16-12) ...
Setting up logrotate (3.14.0-4) ...
Created symlink /etc/systemd/system/timers.target.wants/logrotate.timer -> /lib/systemd/system/logrotate.timer.
Setting up libxdmcp6:amd64 (1:1.1.2-3) ...
Setting up libpython3.7-stdlib:amd64 (3.7.3-2+deb10u1) ...
Setting up libxcb1:amd64 (1.13.1-2) ...
Setting up libnewt0.52:amd64 (0.52.20-8) ...
Setting up libxcb-render0:amd64 (1.13.1-2) ...
Setting up libmbedx509-0:amd64 (2.16.0-1) ...
Setting up iproute2 (4.20.0-2) ...
Setting up libedit2:amd64 (3.1-20181209-1) ...
Setting up libmbedtls12:amd64 (2.16.0-1) ...
Setting up libpolkit-backend-1-0:amd64 (0.105-25) ...
Setting up isc-dhcp-client (4.4.1-2) ...
Setting up libnftnl11:amd64 (1.1.2-2) ...
Setting up libxcb-shm0:amd64 (1.13.1-2) ...
Setting up libnl-route-3-200:amd64 (3.4.0-1) ...
Setting up libthai0:amd64 (0.1.28-2) ...
Setting up cracklib-runtime (2.9.6-2) ...
Setting up gdbmtool (1.18.1-4) ...
Setting up libpwquality1:amd64 (1.4.0-3) ...
Setting up libfreetype6:amd64 (2.9.1-3+deb10u1) ...
Setting up libteamdctl0:amd64 (1.28-1) ...
Setting up ntp (1:4.2.8p12+dfsg-4) ...
Created symlink /etc/systemd/system/multi-user.target.wants/ntp.service -> /lib/systemd/system/ntp.service.
Running in chroot, ignoring request.
invoke-rc.d: policy-rc.d denied execution of start.
Setting up libgssapi-krb5-2:amd64 (1.17-3) ...
Setting up libgdbm-compat4:amd64 (1.18.1-4) ...
Setting up ucf (3.0038+nmu1) ...
Setting up libperl5.28:amd64 (5.28.1-6) ...
Setting up libdrm2:amd64 (2.4.97-1) ...
Setting up libnetfilter-conntrack3:amd64 (1.0.7-1) ...
Setting up libnl-genl-3-200:amd64 (3.4.0-1) ...
Setting up libcurl4:amd64 (7.64.0-4) ...
Setting up libpolkit-agent-1-0:amd64 (0.105-25) ...
Setting up libx11-6:amd64 (2:1.6.7-1) ...
Setting up libharfbuzz0b:amd64 (2.3.1-1) ...
Setting up keyboard-configuration (1.193+mel1) ...
Setting up initramfs-tools-core (0.133+deb10u1) ...
Setting up policykit-1 (0.105-25) ...
Setting up libpython3-stdlib:amd64 (3.7.3-1) ...
Setting up clamav-base (0.102.2+dfsg-0+deb10u1) ...
id: 'clamav': no such user
Setting up python3.7 (3.7.3-2+deb10u1) ...
Setting up auditd (1:2.8.4-3) ...
Created symlink /etc/systemd/system/multi-user.target.wants/auditd.service -> /lib/systemd/system/auditd.service.
Running in chroot, ignoring request.
invoke-rc.d: policy-rc.d denied execution of start.
Setting up initramfs-tools (0.133+deb10u1) ...
update-initramfs: deferring update (trigger activated)
Setting up libxrender1:amd64 (1:0.9.10-1) ...
Setting up plymouth (0.9.4-1.1) ...
update-initramfs: deferring update (trigger activated)
update-rc.d: warning: start and stop actions are no longer supported; falling back to defaults
update-rc.d: warning: start and stop actions are no longer supported; falling back to defaults
Setting up iptables (1.8.2-4) ...
update-alternatives: using /usr/sbin/iptables-legacy to provide /usr/sbin/iptables (iptables) in auto mode
update-alternatives: using /usr/sbin/ip6tables-legacy to provide /usr/sbin/ip6tables (ip6tables) in auto mode
update-alternatives: using /usr/sbin/iptables-nft to provide /usr/sbin/iptables (iptables) in auto mode
update-alternatives: using /usr/sbin/ip6tables-nft to provide /usr/sbin/ip6tables (ip6tables) in auto mode
update-alternatives: using /usr/sbin/arptables-nft to provide /usr/sbin/arptables (arptables) in auto mode
update-alternatives: using /usr/sbin/ebtables-nft to provide /usr/sbin/ebtables (ebtables) in auto mode
Setting up fontconfig-config (2.13.1-2) ...
Setting up mel-auditd (0.5) ...
Setting up openssh-client (1:7.9p1-10+deb10u2) ...
Setting up linux-image-4.19 (4.19.98+r0) ...
I: /vmlinuz.old is now a symlink to boot/vmlinuz-4.19.98
I: /initrd.img.old is now a symlink to boot/initrd.img-4.19.98
I: /vmlinuz is now a symlink to boot/vmlinuz-4.19.98
I: /initrd.img is now a symlink to boot/initrd.img-4.19.98
/etc/kernel/postinst.d/initramfs-tools:
update-initramfs: Generating /boot/initrd.img-4.19.98
  WARNING: Device /dev/sda not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda1 not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda5 not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda6 not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda1 not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda5 not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda6 not initialized in udev database even after waiting 10000000 microseconds.
Setting up libpam-pwquality:amd64 (1.4.0-3) ...
Setting up libxext6:amd64 (2:1.3.3-1+b2) ...
Setting up libcurl3-gnutls:amd64 (7.64.0-4) ...
Setting up python3 (3.7.3-1) ...
Setting up mel-monitor (0.4) ...
Setting up libclamav9:amd64 (0.102.2+dfsg-0+deb10u1) ...
Setting up meif (1.0) ...
Warning: The home dir /var/local/meif you specified already exists.
Adding system user `meif' (UID 107) ...
Adding new user `meif' (UID 107) with group `nogroup' ...
The home directory `/var/local/meif' already exists.  Not copying from `/etc/skel'.
adduser: Warning: The home directory `/var/local/meif' does not belong to the user you are currently creating.
Adding group `meif' (GID 113) ...
Done.
Adding user `meif' to group `meif' ...
Adding user meif to group meif
Done.
Configuration file /lib/systemd/system/run-media-persistent.mount is marked executable. Please remove executable permission bits. Proceeding anyway.
Created symlink /etc/systemd/system/local-fs.target.requires/run-media-persistent.mount -> /lib/systemd/system/run-media-persistent.mount.
/var/lib/dpkg/info/meif.postinst: 45: /var/lib/dpkg/info/meif.postinst: sudo: not found
/var/lib/dpkg/info/meif.postinst: 49: /var/lib/dpkg/info/meif.postinst: sudo: not found
dpkg: error processing package meif (--configure):
 installed meif package post-installation script subprocess returned error exit status 127
Setting up wpasupplicant (2:2.7+git20190128+0c1e29f-6+deb10u1) ...
Created symlink /etc/systemd/system/dbus-fi.w1.wpa_supplicant1.service -> /lib/systemd/system/wpa_supplicant.service.
Created symlink /etc/systemd/system/multi-user.target.wants/wpa_supplicant.service -> /lib/systemd/system/wpa_supplicant.service.
Setting up perl (5.28.1-6) ...
Setting up clamav-freshclam (0.102.2+dfsg-0+deb10u1) ...
Created symlink /etc/systemd/system/multi-user.target.wants/clamav-freshclam.service -> /lib/systemd/system/clamav-freshclam.service.
Running in chroot, ignoring request.
invoke-rc.d: policy-rc.d denied execution of start.
Setting up initrd-fsck-ext4 (0.2) ...
update-initramfs: deferring update (trigger activated)
Setting up mel-plymouth-notifications (0.3) ...
Setting up console-setup-linux (1.193+mel1) ...
Created symlink /etc/systemd/system/sysinit.target.wants/keyboard-setup.service -> /lib/systemd/system/keyboard-setup.service.
Created symlink /etc/systemd/system/multi-user.target.wants/console-setup.service -> /lib/systemd/system/console-setup.service.
Setting up libfontconfig1:amd64 (2.13.1-2) ...
Setting up clamav-daemon (0.102.2+dfsg-0+deb10u1) ...
Running in chroot, ignoring request.
invoke-rc.d: policy-rc.d denied execution of start.
Created symlink /etc/systemd/system/multi-user.target.wants/clamav-daemon.service -> /lib/systemd/system/clamav-daemon.service.
Setting up openssh-sftp-server (1:7.9p1-10+deb10u2) ...
Setting up fontconfig (2.13.1-2) ...
Regenerating fonts cache... done.
Setting up console-setup (1.193+mel1) ...
Setting up openssh-server (1:7.9p1-10+deb10u2) ...

Creating config file /etc/ssh/sshd_config with new version
Creating SSH2 RSA key; this may take some time ...
2048 SHA256:4y8gVGxJjzBKwXizR+gL/dE34ecLCrAaG8KdORrtwP0 root@debian (RSA)
Creating SSH2 ECDSA key; this may take some time ...
256 SHA256:wY4zPnPIJHot4BJEZatQjkFiwqghjkA8Ga7LEihysGA root@debian (ECDSA)
Creating SSH2 ED25519 key; this may take some time ...
256 SHA256:AlSlgEJvVHVqt3eAhcdSfYBrXQeu/ag9JMRj8xVGPFQ root@debian (ED25519)
Created symlink /etc/systemd/system/sshd.service -> /lib/systemd/system/ssh.service.
Created symlink /etc/systemd/system/multi-user.target.wants/ssh.service -> /lib/systemd/system/ssh.service.
Running in chroot, ignoring request.
invoke-rc.d: policy-rc.d denied execution of start.
Setting up libtext-glob-perl (0.10-1) ...
Setting up libpango-1.0-0:amd64 (1.42.4-7~deb10u1) ...
Setting up ufw (0.36-1) ...

Creating config file /etc/ufw/before.rules with new version

Creating config file /etc/ufw/before6.rules with new version

Creating config file /etc/ufw/after.rules with new version

Creating config file /etc/ufw/after6.rules with new version
Created symlink /etc/systemd/system/multi-user.target.wants/ufw.service -> /lib/systemd/system/ufw.service.
Setting up network-manager (1.14.6-2+deb10u1) ...
Running in chroot, ignoring request.
invoke-rc.d: policy-rc.d denied execution of start.
Created symlink /etc/systemd/system/dbus-org.freedesktop.nm-dispatcher.service -> /lib/systemd/system/NetworkManager-dispatcher.service.
Created symlink /etc/systemd/system/network-online.target.wants/NetworkManager-wait-online.service -> /lib/systemd/system/NetworkManager-wait-online.service.
Created symlink /etc/systemd/system/multi-user.target.wants/NetworkManager.service -> /lib/systemd/system/NetworkManager.service.
Setting up libcairo2:amd64 (1.16.0-4) ...
Setting up libnumber-compare-perl (0.03-1) ...
Setting up clamav (0.102.2+dfsg-0+deb10u1) ...
Setting up mel-firewall (0.4) ...
Created symlink /etc/systemd/system/multi-user.target.wants/mel-firewall.service -> /lib/systemd/system/mel-firewall.service.
Setting up libfile-find-rule-perl (0.34-1) ...
Setting up usrmerge (21) ...
Setting up libpangoft2-1.0-0:amd64 (1.42.4-7~deb10u1) ...
Setting up sshd-regen-keys (0.2) ...
Created symlink /etc/systemd/system/sysinit.target.wants/sshd-regen-keys.service -> /lib/systemd/system/sshd-regen-keys.service.
Setting up libpangocairo-1.0-0:amd64 (1.42.4-7~deb10u1) ...
Setting up plymouth-label (0.9.4-1.1) ...
Setting up plymouth-themes (0.9.4-1.1) ...
update-initramfs: deferring update (trigger activated)
Setting up omni-plymouth-theme (1.1) ...
Setting up liblvm2cmd2.03:amd64 (2.03.02-3) ...
Setting up dmeventd (2:1.02.155-3) ...
Created symlink /etc/systemd/system/sockets.target.wants/dm-event.socket -> /lib/systemd/system/dm-event.socket.
Setting up lvm2 (2.03.02-3) ...
Running in chroot, ignoring request.
invoke-rc.d: policy-rc.d denied execution of start.
update-initramfs: deferring update (trigger activated)
Running in chroot, ignoring request.
invoke-rc.d: policy-rc.d denied execution of start.
Created symlink /etc/systemd/system/sysinit.target.wants/blk-availability.service -> /lib/systemd/system/blk-availability.service.
Created symlink /etc/systemd/system/sysinit.target.wants/lvm2-monitor.service -> /lib/systemd/system/lvm2-monitor.service.
Created symlink /etc/systemd/system/sysinit.target.wants/lvm2-lvmpolld.socket -> /lib/systemd/system/lvm2-lvmpolld.socket.
Setting up initrd-lvm (0.1) ...
update-initramfs: deferring update (trigger activated)
Setting up mel-mounts (1.0) ...
Created symlink /etc/systemd/system/multi-user.target.requires/mel.userdata.mount -> /lib/systemd/system/mel.userdata.mount.
Processing triggers for libc-bin (2.28-10) ...
Processing triggers for systemd (241-7~deb10u3) ...
Processing triggers for initramfs-tools (0.133+deb10u1) ...
update-initramfs: Generating /boot/initrd.img-4.19.98
  WARNING: Device /dev/sda not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda1 not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda5 not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda6 not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda1 not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda5 not initialized in udev database even after waiting 10000000 microseconds.
  WARNING: Device /dev/sda6 not initialized in udev database even after waiting 10000000 microseconds.
Processing triggers for dbus (1.12.16-1) ...
Errors were encountered while processing:
 meif
E: Sub-process /usr/bin/dpkg returned an error code (1)
WARNING: exit code 100 from a shell command.


ERROR: Logfile of failure stored in: /home/ravi/omni_2/build-aws-1/tmp/work/mel-omni-amd64/core-image-industrial-pc-wic-img/1.0-r11/temp/log.do_rootfs_install.30625
ERROR: Task (/home/ravi/omni_2/industrial-core/recipes-core/images/core-image.bb:do_rootfs_install) failed with exit code '1'
NOTE: Tasks Summary: Attempted 528 tasks of which 512 didn't need to be rerun and 1 failed.

Summary: 1 task failed:
  /home/ravi/omni_2/industrial-core/recipes-core/images/core-image.bb:do_rootfs_install
Summary: There was 1 WARNING message shown.
Summary: There was 1 ERROR message shown, returning a non-zero exit code.
ravi@debian:~/omni_2/build-aws-1$

{code}

Attached execution log  [^core-image-build-failed.txt] 

NOTE: Build is getting failed in ubuntu 18.04 also";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:9:"MEIF-2352";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582715616;s:7:"updated";i:1590032339;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:339;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@59de698d[id=1837,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 3,startDate=2020-02-09T16:37:53.840Z,endDate=2020-03-01T02:43:00.000Z,completeDate=2020-03-01T01:36:45.408Z,sequence=1791,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+03]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2349";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:59:"MEIF Installer does not handle invalid input in Silent mode";s:11:"description";s:684:"MEIF installer does not handle invalid input in *Silent Mode*. The following command that I have used during installation

<installer.exe> -install.silent -install.location="<installation_path>"

*1-* If I change -install.location to install.location, the installer installs the package on the default location. In this case, the installer should give a proper warning or add a warning in the log file.

*2-* If I change -install.silent to install.silent, the installer starts in the GUI mode. 

 

[QAFTP|ftp://qaftp.pkl.mentorg.com/pub/files/MEIF/1.4.0/200220-222208/] Location of the installer build.

 

*Note: _*__Readystart installer has the same behavior._";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582731236;s:7:"updated";i:1589528483;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:340;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@15f5a237[id=1867,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 4,startDate=2020-03-02T10:36:02.902Z,endDate=2020-03-21T10:34:00.000Z,completeDate=2020-03-20T13:24:31.728Z,sequence=1867,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2348";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:95:"QA: Tools: Execute multi-product installer and licensing test cases on Debian 10 and Windows 10";s:11:"description";s:412:"Perform multi-product testing from the following test plan.
 * *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Installer, Licensing, and Packaging
[https://testlink.alm.mentorg.com/lnl.php?apikey=fc5dd45df7f6745ec9fefb6404b0cf6bd7358c6b440478e3f0c655f2fe3d0784&tproject_id=458205&tplan_id=740209&type=results_matrix]
 * *Platform*:
 ** Debian 10 - 64bit (21)
 ** Windows 10 - 64bit (21)";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:111600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584543939;s:7:"updated";i:1588156402;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:341;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2347";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:57:"QA: Tools: Test cycle 1 of installer testing on Ubuntu 20";s:11:"description";s:321:"* *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Installer, Licensing, and Packaging
[https://testlink.alm.mentorg.com/lnl.php?apikey=fc5dd45df7f6745ec9fefb6404b0cf6bd7358c6b440478e3f0c655f2fe3d0784&tproject_id=458205&tplan_id=740209&type=results_matrix]
 * *Platform*:
 ** Ubuntu 20 - 64bit (78)";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:61200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589908286;s:7:"updated";i:1589974031;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:342;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2346";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:46:"Multiple WARNING messages while building image";s:11:"description";s:15674:"h2. Issue:
----------------------
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 3

h2. Steps to reproduce:
 ---------------------
 1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
 2) $ repo sync
 3) Install meif : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200219-222206/outputs/]
 4)copy the industrial-meif to the project folder where omni repo is synced.
 5)Run the setup-environment script to create a build configuration:
 $ . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
 6) Set below parameters in local.conf file
 MEIF_INSTALLATION_PATH = "/home/ravi/mgc/omni/meif"
 7)Comment below line in local.conf :
 MEIF_CLOUD = "azure"
 MEIF_AZURE_DEMO_DEVICE_ID
 MEIF_AZURE_DEMO_HOSTNAME
 MEIF_AZURE_DEMO_DEVICE_KEY

MEIF_SOURCE = "on"
 MEIF_DOCKER_NATIVE = "off"
 MEIF_DOCKER_AZURE_EDGE = "off"

8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:
{code:java}
DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.62.146:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 
{code}
10)export INDUSTRIAL_SOURCES=upstream
 11) Run the below command to build the image :
 $ ../industrial-ci/scripts/build-all.sh

Expected Result
 =============
 Build should start without any error/warnings

 Actual result:
 ============
 Getting multiple warning messages while building image
{code}
ravi@debian:~/omni_2/build-iot-edge$ ../industrial-ci/scripts/build-all.sh
# using shared 'downloads' folder: ../downloads
# checking build settings...

# --------------------------------------------------------------------------------------------------------
# Build info
# --------------------------------------------------------------------------------------------------------
# build directory     : /home/ravi/omni_2/build-iot-edge
# build id            : 202002201445
# output directory    : /home/ravi/omni_2/build-iot-edge/tmp/deploy/images/industrial-pc

# --------------------------------------------------------------------------------------------------------
# Build target
# --------------------------------------------------------------------------------------------------------
# edition             : standard
# BSP machine         : industrial-pc (default kernel: 4.19)
# BSP features        : lttng alsa xmpp coap mqtt splash amqp tools-profile flatpak tools-debug qt5 selinux kubernetes swupdate perf docker

# --------------------------------------------------------------------------------------------------------
# Build goals
# --------------------------------------------------------------------------------------------------------
# custom packages     : custom-packages
# base images         : development-image core-image
# service stick image : service-stick-image
# ADE images          : development-ade(L)

# --------------------------------------------------------------------------------------------------------
# MEL Build inputs
# --------------------------------------------------------------------------------------------------------
# apt sources     : upstream
# apt feeds       : base standard
# apt directory   : none
# OSS READMEs     : none

# updating package database...
# installing auxiliary packages...
# cleaning up...
# setup completed!

# building custom-packages
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 3
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 4
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 5
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 6
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 7
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 8
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 9
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 10
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 11
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 13
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 14
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 16
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 17
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 19
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 20
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 22
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 23
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 24
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 25
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 27
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 28
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 29
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 30
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 32
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 33
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 34
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 35
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 37
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 39
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 40
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 42
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 43
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 45
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 46
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 48
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 49
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 51
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 52
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 54
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 55
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 56
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 57
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 59
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 60
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 61
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 62
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 63
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 64
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 65
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 66
Loading cache: 100% |#########################################################################################################################| Time: 0:00:00
Loaded 112 entries from dependency cache.
WARNING: No bb files matched BBFILE_PATTERN_mel-reference-bsps '^/home/ravi/omni_2/mel-reference-bsps/'
NOTE: Resolving any missing task queue dependencies
WARNING:  You are using default certificates for Azure IoT Edge gateway, which means each time MEIF is built, new certificates are generated.
It is recommended to provide your own certificates so that Azure IoT Edge gateway and the downstream device(azure agent) use the same certificates.
Initialising tasks: 100% |####################################################################################################################| Time: 0:00:00
NOTE: No setscene tasks
NOTE: Executing Tasks
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 3
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 4
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 5
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 6
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 7
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 8
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 9
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 10
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 11
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 13
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 14
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 16
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 17
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 19
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 20
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 22
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 23
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 24
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 25
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 27
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 28
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 29
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 30
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 32
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 33
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 34
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 35
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 37
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 39
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 40
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 42
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 43
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 45
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 46
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 48
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 49
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 51
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 52
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 54
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 55
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 56
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 57
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 59
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 60
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 61
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 62
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 63
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 64
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 65
WARNING: python should use 4 spaces indentation, but found tabs in meif-config-validation.bbclass, line 66
Currently  4 running tasks (191 of 216)  87% |################################################################################################              |
0: swupdate-ebg-2019.04-r0 do_install_builddeps - 18m48s (pid 4081)
1: tpm2-pk11-1.0-r0 do_install_builddeps - 17m11s (pid 15860)
2: swupdate-2019.04-r0 do_dpkg_build - 51s (pid 5149)
3: ima-evm-utils-1.2.1-r0 do_dpkg_build - 12s (pid 10222)
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582210826;s:7:"updated";i:1590032345;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:343;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2345";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:77:"Windows10: MEIF Silent Installer proceeds with space in the installation path";s:11:"description";s:611:"The installer should give a proper warning if there is a space in the installation path but in silent mode, the Installer does not give any warning and proceed with the installation.

 

Steps to reproduce:

1- Download the MEIF 1.4.0 installer from [QAFTP|ftp://qaftp.pkl.mentorg.com/pub/files/MEIF/1.4.0/sprint_2_200208-222209/]

2- Go to the download directory i.e C:\Users\Downloads

3- Launch the Host console(cmd) in the directory.

4- Launch the <installer>.exe with parameters -install.silent -install.location="<installation path with *space*> " -install.license="<Path to license>".

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1582192920;s:7:"updated";i:1584598737;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";i:3;s:13:"nightly-build";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:344;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2344";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:72:"update the postinst script in meif to return errors in case of failure. ";s:11:"description";s:301:"update the postinst script in meif to return errors in case of failure. 
currently it just echos the error which wont be useful if an error occurrs. in the mel build  system the echoed error will go unoticed and possibly the agent will give failures when run on target and these will be hard to track.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582269489;s:7:"updated";i:1582269489;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:345;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@2363bb02[id=1838,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 4,startDate=2020-03-01T01:37:12.078Z,endDate=2020-03-22T11:54:00.000Z,completeDate=2020-03-22T14:40:24.468Z,sequence=1838,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+04]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2343";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"Review and adjust cb_iot module version for MEIF 1.4.0";s:11:"description";s:260:"After changes for MEIF-2340, cb_iot module is picking up the MEIF product version. Please review and correct as needed.
{code:java}
[INFO]: module.cb_iot.version = 1.4.0.202001311608    (VERSION_MODE.PRODUCT set in module for past releases too.)
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:32400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584369021;s:7:"updated";i:1584369021;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:346;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2342";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:82:"configuration options for COLLECTD/INFLUXDB are not available during initial setup";s:11:"description";s:1515:"Steps to reproduce:
---------------------
1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
2) $ repo sync
3) Install meif : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200217-222206/	
4)copy the industrial-meif to the project folder where omni repo is synced.
5)Run the setup-environment script to create a build configuration:
$ . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
6) Set below parameters in local.conf file
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif_bin/meif"
7)Set cloud configurations in local.conf according to the specified cloud.
8)Edit the below line in local.conf to enable collectd:
MEIF_ENABLE_COLLECTD = "y"
9)run http server in the meif-apt folder
10)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:
{code}
DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.62.146:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 
{code}
10)export INDUSTRIAL_SOURCES=upstream
11) Run the below command to build the image :
$ ../industrial-ci/scripts/build-all.sh
12) Boot the target with generated image.

Expected Result
=============
Configuration options for Collectd/Influxdb should be available during initial setup.

Actual result:
============
Not getting Configuration options for Collectd/Influxdb during initial setup.
";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582611363;s:7:"updated";i:1590032357;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:347;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2341";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:45:"BUILD getting Failed for debian 10 as base OS";s:11:"description";s:5390:"Steps to reproduce:
 ---------------------
 1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
 2) $ repo sync
 3) Install meif : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200210-222207/]
 4)copy the industrial-meif to the project folder where omni repo is synced.
 5)Run the setup-environment script to create a build configuration:
 $ . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
 6) Set below parameters in local.conf file
 MEIF_INSTALLATION_PATH = "/home/ravi/mgc/omni/meif"
 7)Comment below line in local.conf :
 MEIF_CLOUD = "azure"
 MEIF_AZURE_DEMO_DEVICE_ID
 MEIF_AZURE_DEMO_HOSTNAME
 MEIF_AZURE_DEMO_DEVICE_KEY

MEIF_SOURCE = "on"
 MEIF_DOCKER_NATIVE = "off"
 MEIF_DOCKER_AZURE_EDGE = "off"

8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:
{code:java}
DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.62.146:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 
{code}
10)export INDUSTRIAL_SOURCES=upstream
 11) Run the below command to build the image :
 $ ../industrial-ci/scripts/build-all.sh

Expected Result
 =============
 Build should get completed without any warnings/errors.


 Actual result:
 ============
 Build is getting failed with below errors
{code}
ERROR: isar-bootstrap-target-1.0-r0 do_bootstrap: Execution of '/home/ravi/omni_2/build-aws-swupdate/tmp/work/mel-omni-amd64/isar-bootstrap-target/1.0-r0/temp/run.do_bootstrap.12137' failed with exit code 1:
deb [trusted=yes] http://134.86.121.106:8000/ stretch main
deb      file:///base-apt/meif stretch main build debug
W: Target architecture is the same as host architecture; disabling QEMU support
I: Running command: debootstrap --arch amd64 --verbose --variant=minbase --include=locales,systemd-sysv,apt-transport-https,ca-certificates,gnupg,apt-transport-https,ca-certificates --keyring=/home/ravi/omni_2/build-aws-swupdate/tmp/work/mel-omni-amd64/isar-bootstrap-target/1.0-r0/distro-keyring.gpg --components=main,contrib,non-free buster /home/ravi/omni_2/build-aws-swupdate/tmp/work/mel-omni-amd64/isar-bootstrap-target/1.0-r0/rootfs http://ftp.debian.org/debian
I: Target architecture can be executed
I: Retrieving InRelease
I: Retrieving Release
E: Failed getting release file http://ftp.debian.org/debian/dists/buster/Release
WARNING: exit code 1 from a shell command.

ERROR: Logfile of failure stored in: /home/ravi/omni_2/build-aws-swupdate/tmp/work/mel-omni-amd64/isar-bootstrap-target/1.0-r0/temp/log.do_bootstrap.12137
Log data follows:
 | DEBUG: Executing shell function do_bootstrap
 | deb [trusted=yes] http://134.86.121.106:8000/ stretch main
 | deb      file:///base-apt/meif stretch main build debug
 | W: Target architecture is the same as host architecture; disabling QEMU support
 | I: Running command: debootstrap --arch amd64 --verbose --variant=minbase --include=locales,systemd-sysv,apt-transport-https,ca-certificates,gnupg,apt-transport-https,ca-certificates --keyring=/home/ravi/omni_2/build-aws-swupdate/tmp/work/mel-omni-amd64/isar-bootstrap-target/1.0-r0/distro-keyring.gpg --components=main,contrib,non-free buster /home/ravi/omni_2/build-aws-swupdate/tmp/work/mel-omni-amd64/isar-bootstrap-target/1.0-r0/rootfs http://ftp.debian.org/debian
 | I: Target architecture can be executed
 | I: Retrieving InRelease
 | I: Retrieving Release
 | E: Failed getting release file http://ftp.debian.org/debian/dists/buster/Release
 | WARNING: exit code 1 from a shell command.
 | ERROR: Execution of '/home/ravi/omni_2/build-aws-swupdate/tmp/work/mel-omni-amd64/isar-bootstrap-target/1.0-r0/temp/run.do_bootstrap.12137' failed with exit code 1:
 | deb [trusted=yes] http://134.86.121.106:8000/ stretch main
 | deb      file:///base-apt/meif stretch main build debug
 | W: Target architecture is the same as host architecture; disabling QEMU support
 | I: Running command: debootstrap --arch amd64 --verbose --variant=minbase --include=locales,systemd-sysv,apt-transport-https,ca-certificates,gnupg,apt-transport-https,ca-certificates --keyring=/home/ravi/omni_2/build-aws-swupdate/tmp/work/mel-omni-amd64/isar-bootstrap-target/1.0-r0/distro-keyring.gpg --components=main,contrib,non-free buster /home/ravi/omni_2/build-aws-swupdate/tmp/work/mel-omni-amd64/isar-bootstrap-target/1.0-r0/rootfs http://ftp.debian.org/debian
 | I: Target architecture can be executed
 | I: Retrieving InRelease
 | I: Retrieving Release
 | E: Failed getting release file http://ftp.debian.org/debian/dists/buster/Release
 | WARNING: exit code 1 from a shell command.
 |
ERROR: Task (/home/ravi/omni_2/isar/meta/recipes-core/isar-bootstrap/isar-bootstrap-target.bb:do_bootstrap) failed with exit code '1'
NOTE: Tasks Summary: Attempted 55 tasks of which 40 didn't need to be rerun and 1 failed.

Summary: 1 task failed:
  /home/ravi/omni_2/isar/meta/recipes-core/isar-bootstrap/isar-bootstrap-target.bb:do_bootstrap
Summary: There were 101 WARNING messages shown.
Summary: There was 1 ERROR message shown, returning a non-zero exit code.
ravi@debian:~/omni_2/build-aws-swupdate$
{code}

Attached error log  [^debian_10_build_failed.txt] ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:1800;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1582195443;s:7:"updated";i:1590032361;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:348;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2340";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:113:"MEIF installer is unable to install over codebench due to unmatch versions of SA in codebench and MEIF installers";s:11:"description";s:503:"Since the Sourcery Analyzer version in Codebench is 12.0.0 and the Sourcery Analyzer version in MEIF is 11.0.0, the installer shows the attached error (MEIF_inst_2)

Steps to reproduce: 
 1- Install the Codebench (link given at [https://confluence.alm.mentorg.com/display/QA/Testing+Cycle+1+Environment]).

2- Take the MEIF installer from the above link. 
 3- Run the installer , you will see that when selecting all the components under the components tab throws the attached error (MEIF_inst_2)";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582101459;s:7:"updated";i:1589282708;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:8:"samr-338";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:349;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2128";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2339";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:18:"MEIF guide review ";s:11:"description";s:77:"The documentation changes in the MEIF guide will be reviewed under this task.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:5:"Tests";a:1:{i:0;s:9:"MEIF-2224";}}}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:0;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1588245468;s:7:"updated";i:1588245468;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:3:"doc";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:350;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2337";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"BUILD Failed with swupdate enabled in local.conf file";s:11:"description";s:5847:"Steps to reproduce:
---------------------
1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
2) $ repo sync
3) Install meif : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200210-222207/
4)copy the industrial-meif to the project folder where omni repo is synced.
5)Run the setup-environment script to create a build configuration:
$  . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
6) Set below parameters in local.conf file
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif_bin/meif"
7)Comment below line in local.conf :
MEIF_CLOUD = "azure"
MEIF_AZURE_DEMO_DEVICE_ID
MEIF_AZURE_DEMO_HOSTNAME
MEIF_AZURE_DEMO_DEVICE_KEY

MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"

IMAGE_FEATURES += "swupdate"

8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:
{code}
DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.62.146:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 
{code}
10)export INDUSTRIAL_SOURCES=upstream
11) Run the below command to build the image :
$ ../industrial-ci/scripts/build-all.sh

Expected Result
=============
Image shuld get builded successfully without any warnings/errors.
Actual result:
============
Build is getting failed with below errors(with both AWS & AZURE CLOUD options)
{code}
ERROR: development-image-1.0-r11 do_wic_image: Execution of '/home/ravi/omni_2.0/build-hawkbit/tmp/work/mel-omni-amd64/development-image-industrial-pc-wic-img/1.0-r11/temp/run.do_wic_image.18457' failed with exit code 1:
INFO: Creating image(s)...

INFO: Secure Boot enabled, the generated EFI application will be signed
INFO: (using signing keys from /home/ravi/omni_2.0/industrial-core/test-keys)
INFO: cmdline: root=/dev/mel/systema None rootwait console=tty1 nohz=off           security=selinux selinux=1 enforcing=0  splash plymouth.ignore-serial-consoles quiet
INFO: Secure Boot enabled, the generated EFI application will be signed
INFO: (using signing keys from /home/ravi/omni_2.0/industrial-core/test-keys)
INFO: copying boot image to: boota-development-image-mel-omni-industrial-pc.vfat.img
INFO: cmdline: root=/dev/mel/systemb None rootwait console=tty1 nohz=off           security=selinux selinux=1 enforcing=0  splash plymouth.ignore-serial-consoles quiet
INFO: Secure Boot enabled, the generated EFI application will be signed
INFO: (using signing keys from /home/ravi/omni_2.0/industrial-core/test-keys)
INFO: copying boot image to: bootb-development-image-mel-omni-industrial-pc.vfat.img
INFO: volume group is mel
INFO: loopback is /dev/loop4
INFO: logical volume 'systema': size=4096, rootfs=True, fstype=ext4, fsformat=False
INFO: copying root file-system image to: systema-development-image-mel-omni-industrial-pc.ext4.img
INFO: logical volume 'systemb': size=4096, rootfs=False, fstype=ext4, fsformat=False
INFO: logical volume 'userdata': size=256, rootfs=False, fstype=ext4, fsformat=True
INFO: formatting lv userdata with fstype ext4
INFO: de-activating mel
INFO: removing loopback device /dev/loop4
ERROR: _exec_cmd: /sbin/mkfs.ext4 /dev/mapper/mel-userdata returned '1' instead of 0
output: mke2fs 1.44.5 (15-Dec-2018)
The file /dev/mapper/mel-userdata does not exist and no size was specified.

WARNING: exit code 1 from a shell command.

ERROR: Logfile of failure stored in: /home/ravi/omni_2.0/build-hawkbit/tmp/work/mel-omni-amd64/development-image-industrial-pc-wic-img/1.0-r11/temp/log.do_wic_image.18457
Log data follows:
 | INFO: Secure Boot enabled, the generated EFI application will be signed
 | INFO: (using signing keys from /home/ravi/omni_2.0/industrial-core/test-keys)
 | INFO: cmdline: root=/dev/mel/systema None rootwait console=tty1 nohz=off           security=selinux selinux=1 enforcing=0  splash plymouth.ignore-serial-consoles quiet
 | INFO: Secure Boot enabled, the generated EFI application will be signed
 | INFO: (using signing keys from /home/ravi/omni_2.0/industrial-core/test-keys)
 | INFO: copying boot image to: boota-development-image-mel-omni-industrial-pc.vfat.img
 | INFO: cmdline: root=/dev/mel/systemb None rootwait console=tty1 nohz=off           security=selinux selinux=1 enforcing=0  splash plymouth.ignore-serial-consoles quiet
 | INFO: Secure Boot enabled, the generated EFI application will be signed
 | INFO: (using signing keys from /home/ravi/omni_2.0/industrial-core/test-keys)
 | INFO: copying boot image to: bootb-development-image-mel-omni-industrial-pc.vfat.img
 | INFO: volume group is mel
 | INFO: loopback is /dev/loop4
 | INFO: logical volume 'systema': size=4096, rootfs=True, fstype=ext4, fsformat=False
 | INFO: copying root file-system image to: systema-development-image-mel-omni-industrial-pc.ext4.img
 | INFO: logical volume 'systemb': size=4096, rootfs=False, fstype=ext4, fsformat=False
 | INFO: logical volume 'userdata': size=256, rootfs=False, fstype=ext4, fsformat=True
 | INFO: formatting lv userdata with fstype ext4
 | INFO: de-activating mel
 | INFO: removing loopback device /dev/loop4
 | ERROR: _exec_cmd: /sbin/mkfs.ext4 /dev/mapper/mel-userdata returned '1' instead of 0
 | output: mke2fs 1.44.5 (15-Dec-2018)
 | The file /dev/mapper/mel-userdata does not exist and no size was specified.
 | 
 | WARNING: exit code 1 from a shell command.
 | 
ERROR: Task (/home/ravi/omni_2.0/industrial-core/recipes-core/images/development-image.bb:do_wic_image) failed with exit code '1'
NOTE: Tasks Summary: Attempted 686 tasks of which 678 didn't need to be rerun and 1 failed.

{code}

Attached error log  [^swupdate_build_failed_log.txt] ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:16:"Cannot Reproduce";s:14:"resolutiondate";i:1581934160;s:7:"updated";i:1590032365;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:351;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2336";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:82:"AWS,AZURE:Not getting any error while running multiple azure agents and aws agents";s:11:"description";s:4407:"Steps to reproduce:
---------------------
1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
2) $ repo sync
3) Install meif : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200210-222207/
4)copy the industrial-meif to the project folder where omni repo is synced.
5)Run the setup-environment script to create a build configuration:
$ . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
6) Set below parameters in local.conf file
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif_bin/meif"
7)Comment below line in local.conf :
MEIF_CLOUD = "azure"
MEIF_AZURE_DEMO_DEVICE_ID
MEIF_AZURE_DEMO_HOSTNAME
MEIF_AZURE_DEMO_DEVICE_KEY

MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"

8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:

DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

do_bootstrap_prepend() {
echo "deb [trusted=yes] http://134.86.62.146:8000/ stretch main" | tee -a ${APTSRCS}
cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
}

10)export INDUSTRIAL_SOURCES=upstream
11) Run the below command to build the image :
$ ../industrial-ci/scripts/build-all.sh
12) Booted target with builded image.
13) Start the Azure Agent

Expected Result
=============
It should throw error while starting Azure agent manually as azure agent is getting automatically started and already running .

Actual result:
============
Azure agent is already running after booting the target but if we manually start the azure agent we are not getting any error.
*After starting the Azure agent it is automatically getting exited within 30 sec .*
{code}
tester@localhost:~$ ps aux | grep azure
meif       525 12.7  0.2 176192 10436 ?        Ssl  05:54  31:12 /usr/bin/azure-agent
tester    2089  0.0  0.0  13080   988 pts/1    S+   09:58   0:00 grep azure
tester@localhost:~$
{code}
{code}
tester@localhost:~$ azure-agent 
INFO: update_status file not found

**** Initializing **** 

 ******** Device Connection Information ********
deviceId: [meif14_dev1]
iotHubHostname: [iothub-fafve.azure-devices.net]
deviceKey: [mgKoiIf93uLJDp2ET2uSBgLzmf2idqRd7YDSTkytelQ=]
connectionString: [HostName=iothub-fafve.azure-devices.net;DeviceId=meif14_dev1;SharedAccessKey=mgKoiIf93uLJDp2ET2uSBgLzmf2idqRd7YDSTkytelQ=]
/usr/bin/traceiot.sh: 30: /usr/bin/traceiot.sh: cannot create met_trace.sh: Permission denied
chmod: changing permissions of 'met_trace.sh': Operation not permitted
zure_main

Azure IoT SDK C version 1.3.7
This sample simulates a Chiller device connected to the Remote Monitoring solution accelerator

Creating IoTHub handle

Supported methods = Reboot,FirmwareUpdate,StartTelemetry,StopTelemetry,EmergencyValveRelease,IncreasePressure,PingDevice,list
Sending sensor value Temperature = 55.000000 F,
Sending sensor value Pressure = 60.000000 psig,
Sending sensor value Humidity = 35.000000 %,
The device client is connected to iothub

Connection with Azure successful: Restoring Telemetry State
Confirmation callback received for message 1 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 2 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 3 with result IOTHUB_CLIENT_CONFIRMATION_OK
Device Twin reported properties update completed with result: 204
Sending sensor value Temperature = 60.000000 F,
Sending sensor value Pressure = 68.000000 psig,
Sending sensor value Humidity = 39.000000 %,
Confirmation callback received for message 4 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 5 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 6 with result IOTHUB_CLIENT_CONFIRMATION_OK
Sending sensor value Temperature = 63.000000 F,
Sending sensor value Pressure = 67.000000 psig,
Sending sensor value Humidity = 39.000000 %,
Sending sensor value Temperature = 60.000000 F,
Sending sensor value Pressure = 60.000000 psig,
Sending sensor value Humidity = 44.000000 %,
tester@localhost:~$ ps -aux | grep azure
meif       525 12.6  0.2 176192 10028 ?        Ssl  05:54   9:56 /usr/bin/azure-agent
tester    2032  0.0  0.0  13080   944 pts/0    S+   07:12   0:00 grep azure
tester@localhost:~$ 
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:36000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582298449;s:7:"updated";i:1590032452;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:352;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2335";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:83:"AWS,AZURE:Device commands does not work when Azure agent/AWS agent is auto started ";s:11:"description";s:1751:"Steps to reproduce:
---------------------
1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
2) $ repo sync
3) Install meif : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200210-222207/
4)copy the industrial-meif to the project folder where omni repo is synced.
5)Run the setup-environment script to create a build configuration:
$ . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
6) Set below parameters in local.conf file
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif_bin/meif"
7)Comment below line in local.conf :
MEIF_CLOUD = "azure"
MEIF_AZURE_DEMO_DEVICE_ID
MEIF_AZURE_DEMO_HOSTNAME
MEIF_AZURE_DEMO_DEVICE_KEY

MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"

8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:

DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.62.146:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 

10)export INDUSTRIAL_SOURCES=upstream
11) Run the below command to build the image :
$ ../industrial-ci/scripts/build-all.sh
12) Booted target with builded image.
13) Verify the azure agent (it should get auto started after booting)
14)From Azure portal, executed all the device commands .

Expected Result
=============
All device commands should work successfully when azure agent is auto started . 

Actual result:
============
Device commands are not working when azure agent runs automatically.

NOTE: For AWS cloud also, commands are not able to execute from portal.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:0;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1583809069;s:7:"updated";i:1590032456;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:353;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2334";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:69:"segmentation fault occurs in azure agent in file linux_trace_agent.c ";s:11:"description";s:403:"with latest meif user and group created the azure agent crashes if it is not run as meif user/group.

reason is met_trace.sh is initially empty. a non meif user/process cannot change the met_trace.sh file. the code is such that it crashes.

following line is where code crashes in linuxFetchDiagnostics()
{code:java}
    /* Free all the nested values. */
    json_value_free(root_value);
 {code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1581572977;s:7:"updated";i:1581590046;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:354;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2333";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"Stop telemetry data command not working for AZURE";s:11:"description";s:3765:"Steps to reproduce:
---------------------
1) $ repo init -u git@github.com:MentorEmbedded/industrial-manifest -m prod/2.0/all.xml
2) $ repo sync
3) Install meif : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200210-222207/
4)copy the industrial-meif to the project folder where omni repo is synced.
5)Run the setup-environment script to create a build configuration:
$  . ./industrial-core/setup-environment -l meif -b build-omni industrial-pc
6) Set below parameters in local.conf file
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif_bin/meif"
7)Comment below line in local.conf :
MEIF_CLOUD = "azure"
MEIF_AZURE_DEMO_DEVICE_ID
MEIF_AZURE_DEMO_HOSTNAME
MEIF_AZURE_DEMO_DEVICE_KEY

MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"

8)run http server in the meif-apt folder

9)Edit isar-bootstrap-%.bbappend within industrial-meif folder as following:
{code}
DISTRO_APT_KEYS_append := " file://${MEIF_DIR}/conf/apt/meif.gpg "

  do_bootstrap_prepend() { 
echo "deb [trusted=yes] http://134.86.62.146:8000/ stretch main" | tee -a ${APTSRCS} 
 cat ${MEIF_DIR}/${MEIF_APT_SOURCES} | tee -a ${BASEAPTSRCS}
 } 
{code}
10)export INDUSTRIAL_SOURCES=upstream
11) Run the below command to build the image :
$ ../industrial-ci/scripts/build-all.sh
12) Booted target with builded image.
13) Started Azure agent (telemetry data start reflecting on azure portal)
14)From Azure portal, executed job to stop data

Expected Result
=============
Stop telemetry command should work successfully .

Actual result:
============
After running stop telemetry data command we are getting the following result :
{code}
tester@localhost:~$ sudo azure-agent &
[1] 1202
tester@localhost:~$ INFO: update_status file not found

*** Initializing ***

******* Device Connection Information *******
deviceId: [meif14_dev1]
iotHubHostname: [iothub-fafve.azure-devices.net]
deviceKey: [mgKoiIf93uLJDp2ET2uSBgLzmf2idqRd7YDSTkytelQ=]
connectionString: [HostName=iothub-fafve.azure-devices.net;DeviceId=meif14_dev1;SharedAccessKey=mgKoiIf93uLJDp2ET2uSBgLzmf2idqRd7YDSTkytelQ=]
zure_main

Azure IoT SDK C version 1.3.7
This sample simulates a Chiller device connected to the Remote Monitoring solution accelerator

Creating IoTHub handle

Supported methods = Reboot,FirmwareUpdate,StartTelemetry,StopTelemetry,EmergencyValveRelease,IncreasePressure,PingDevice,list
Sending sensor value Temperature = 56.000000 F,
Sending sensor value Pressure = 61.000000 psig,
Sending sensor value Humidity = 39.000000 %,
The device client is connected to iothub

Connection with Azure successful: Restoring Telemetry State
Confirmation callback received for message 1 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 2 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 3 with result IOTHUB_CLIENT_CONFIRMATION_OK
Device Twin reported properties update completed with result: 204
Sending sensor value Temperature = 60.000000 F,
Sending sensor value Pressure = 65.000000 psig,
Sending sensor value Humidity = 42.000000 %,
Confirmation callback received for message 4 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 5 with result IOTHUB_CLIENT_CONFIRMATION_OK
Confirmation callback received for message 6 with result IOTHUB_CLIENT_CONFIRMATION_OK
Sending sensor value Temperature = 63.000000 F,
Sending sensor value Pressure = 68.000000 psig,
Sending sensor value Humidity = 40.000000 %,
Sending sensor value Temperature = 61.000000 F,
Sending sensor value Pressure = 64.000000 psig,
Sending sensor value Humidity = 52.000000 %,

[1]+ Broken pipe sudo azure-agent
tester@localhost:~$
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:3600;s:10:"resolution";s:16:"Cannot Reproduce";s:14:"resolutiondate";i:1581517121;s:7:"updated";i:1581672801;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:16:"meif-1.4-qa-bugs";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:355;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2332";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:63:""reboot" is not working after adding meif as a user and a group";s:11:"description";s:459:"After adding meif as user/group, the reboot functionality is not working from the applications as now the services are running as meif user/group.

Update:

Please update the getting started guide to document that if agent is not run as background service then the current logged in user needs to be part of the meif group  to run the agent. please specifically mention that not adding the logged in user to meif group will result in unexpected behavior.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:46800;s:10:"resolution";s:16:"Cannot Reproduce";s:14:"resolutiondate";i:1582288226;s:7:"updated";i:1582621451;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:356;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2331";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:101:"aws-agent not able to receive any command from cloud and also giving shadow get timeout error message";s:11:"description";s:851:"e.g ping and firmware update commands are not working. cannot even set telemetry to false.
{code:java}
ehsaeed@ehsaeed:~$ sudo /usr/bin/aws-agent

**** Initializing **** 
host: 'a22u7er40mti5n-ats.iot.us-east-1.amazonaws.com'
port: 8883
thing name: 'ultrazed_arslan'
client ID: 'ultrazed_arslan'
cert directory: '/run/media/persistent/'
root CA filename: aws-rootca.pem
device certificate filename: aws-devcrt.pem
device private key filename: aws-prvkey.pem
INFO: update_status file not found

AWS IoT SDK Version 3.0.1-Shadow Init
Shadow Connect
Updating Shadow
[aws_shadow_get_status_cb] Shadow Get Timeout
[aws_shadow_update_status_cb] Update Accepted
 {code}
this error is occurring on ipc127e and ultrazed on Omni1.0.01

possible reason could be issue in aws cloud. however telemetry data is being sent from device to cloud";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1581334916;s:7:"updated";i:1581509547;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:357;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2330";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:65:"add iotedge arm and other architecture debs in the meif apt repo.";s:11:"description";s:459:"since the debs are available , it is better to add them in meif apt repo. currently only the intel architecture debs are added in the meif apt repo for iotedge debs.

Please also create a confluence page which lists the following information for each .deb package used in each MEIF release:
 * The package name, version, description and whether it is a pulled in as a dependency of another required package
 * URL of the original repository of the package";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:48600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1581686522;s:7:"updated";i:1582200221;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:358;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2329";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"aws-agent not showing logs when run as systemd service";s:11:"description";s:272:"aws-agent not showing logs when run as systemd service. following commands are used to check logs
{code:java}
systemctl status meif-agent-autostart {code}
{code:java}
 journalctl -fu meif-agent-autostart{code}

----

azure-agent logs show correctly as per ehtasham";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1581502193;s:7:"updated";i:1581508657;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:359;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2328";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:66:"remove step7 from Build and Run Azure Agent as a downstream device";s:11:"description";s:588:"the step mentions to edit the config.yaml file to append '.azure-device.net' with hostname.

this can be done via the meif-azure-edge-config we have. we already replace the hostname in the script.
{code:java}
            # Set the hostname            success=$(sed -i "s/hostname:.*/hostname: \"$(hostname)\"/g" ${AZURE_IOT_EDGE_CONFIG_FILE}) {code}
just modifying the above line to append the extra text will help removing one step.

 

 

Also test running the downstream device with the iotedge as gateway.

 

update: update the documentation";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582119789;s:7:"updated";i:1582176877;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:360;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2327";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:105:"investigate if DEMO_ENABLE_TRACING and AWS options in local.conf.append are needed or can they be deleted";s:11:"description";s:1219:"following are aws variables in local.conf.append.



# AWS-ONLY OPTIONS

# build with threading support (on/off)
AWS_USE_THREADING = "on"

SDK_INSTALL_append_aws = " meif"

# AWS demo app needs headers in the ADE for compilation
SDK_PREINSTALL_append_aws = " libmbedtls-dev libssl-dev"

# Fill in the host address, host port, client ID and thing name for your
# device. They are required to connect successfully to AWS.

AWS_IOT_HOST_MQTT_ADDR = "magic.iot.geographical_server.amazonaws.com"
AWS_IOT_CLIENT_MY_THING_NAME = "thing_name"
AWS_IOT_CLIENT_MQTT_CLIENT_ID = "normally_same_as_thing_name"

AWS_IOT_SECURITY_ROOT_CA_FILENAME = "aws-rootca.pem"
AWS_IOT_SECURITY_CERTIFICATE_FILENAME = "aws-devcrt.pem"
AWS_IOT_SECURITY_PRIVATE_KEY_FILENAME = "aws-prvkey.pem"

# Set this to a directory where the root ca cert, device cert and private key are located to
# automatically put them on the rootfs.
AWS_IOT_SECURITY_PEM_HOST_DIR = ""

# Should not have to change this
AWS_IOT_HOST_MQTT_PORT = "8883"

# Location of credentials (absolute path)
AWS_IOT_CREDENTIAL_LOCATION = "/etc/ssl/certs"

# Build with threading support (on/off)
AWS_USE_THREADING = "on"

# END: AWS-ONLY OPTIONS";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:18000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582199997;s:7:"updated";i:1582269851;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:361;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2326";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:59:"Building CLOUD set to hawkbit failed without suitable error";s:11:"description";s:19838:"Building CLOUD set to hawkbit failed without suitable error 
 
Steps to reproduce:
 ---------------------
 1) Install Omni: : https://support.sw.siemens.com/
     Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200122-222306/outputs/

2)Create project directory.
    $ mkdir myproject

3)Go to project directory.
    $ cd myproject

4)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/omni/  folder.
   Copy the "meif" folder from <meif-installation-path>/support/isar/mel-apt/meif to the <mel-omni-installation-path>/omni/mel-apt/ folder.

5) Run the setup-environment script to create a build configuration:
$ source  <mel-omni-installation-path>/omni/mel-core/setup-environment -b meif_build -l meif industrial-pc

5) Set below parameters in local.conf file
CLOUD = "hawkbit"
AWS_IOT_HOST_MQTT_ADDR = "ajqvyedkar6hu-ats.iot.us-west-2.amazonaws.com"
AWS_IOT_CLIENT_MY_THING_NAME = "ravi_iot"
AWS_IOT_CLIENT_MQTT_CLIENT_ID = "ravi_iot"

MEIF_SOURCE             = "on"
MEIF_DOCKER_NATIVE      = "off"
MEIF_DOCKER_AZURE_EDGE  = "off"
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif14/meif"

6) bitbake development-image


Expected result:
=============
It should show suitable error (as fixed in MEIF-2266)

Actual result:
============
Only build failure logs are generated.
{code}
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/myproject/build_aws$ cat conf/local.conf | grep CLOUD
CLOUD = "hawkbit"
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/myproject/build_aws$ bitbake development-image
Parsing recipes: 100% |######################################################################################################################################################################| Time: 0:00:00
Parsing of 104 .bb files complete (0 cached, 104 parsed). 104 targets, 0 skipped, 3 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |###################################################################################################################################################################| Time: 0:00:00
NOTE: Executing RunQueue Tasks
ERROR: meif-1.0-r0 do_build: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/meif-1.0-r0/temp/log.do_build.24882)
ERROR: Logfile of failure stored in: /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/meif-1.0-r0/temp/log.do_build.24882
Log data follows:
 | /usr/bin/make -f CMakeFiles/cmTC_a7015.dir/build.make CMakeFiles/cmTC_a7015.dir/build
 | make[3]: Entering directory '/home/builder/meif/home/ravi/jenkins/workspace/MEIF/meif_bin/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
 | Building C object CMakeFiles/cmTC_a7015.dir/feature_tests.c.o
 | /usr/bin/cc   -g -O2 -fdebug-prefix-map=/home/builder/meif/home/ravi/jenkins/workspace/MEIF/meif_bin/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2    -std=c90 -o CMakeFiles/cmTC_a7015.dir/feature_tests.c.o   -c /home/builder/meif/home/ravi/jenkins/workspace/MEIF/meif_bin/meif/obj-x86_64-linux-gnu/CMakeFiles/feature_tests.c
 | Linking C executable cmTC_a7015
 | /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a7015.dir/link.txt --verbose=1
 | /usr/bin/cc -g -O2 -fdebug-prefix-map=/home/builder/meif/home/ravi/jenkins/workspace/MEIF/meif_bin/meif=. -fstack-protector-strong -Wformat -Werror=format-security -Wno-format-security -Wdate-time -D_FORTIFY_SOURCE=2   -Wl,-z,relro  CMakeFiles/cmTC_a7015.dir/feature_tests.c.o  -o cmTC_a7015
 | make[3]: Leaving directory '/home/builder/meif/home/ravi/jenkins/workspace/MEIF/meif_bin/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
 | make[2]: Leaving directory '/home/builder/meif/home/ravi/jenkins/workspace/MEIF/meif_bin/meif/obj-x86_64-linux-gnu/CMakeFiles/CMakeTmp'
 | 
 | 
 |     Feature record: C_FEATURE:1c_function_prototypes
 |     Feature record: C_FEATURE:0c_restrict
 |     Feature record: C_FEATURE:0c_static_assert
 |     Feature record: C_FEATURE:0c_variadic_macros
 | dh_auto_configure: cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_BUILD_TYPE=None -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_INSTALL_LOCALSTATEDIR=/var -DDEMO_ENABLE_TRACING=off -DBUILD_VERBOSE=on -DOS=linux -DAPPS=on -DCLOUD=hawkbit -DLINUX_LIBDIR= -DMEIF_AGENT_USES_SWUPDATE=yes -DMEIF_AGENT_AUTOSTART_SERVICE=/home/builder/meif/meif-agent-autostart.service -DMEIF_DOCKER_DAEMON_SERVICE=/home/builder/meif/dummy.txt returned exit code 1
 | 	cd /home/builder/meif/home/ravi/jenkins/workspace/MEIF/meif_bin/meif
 | debian/rules:21: recipe for target 'override_dh_auto_configure' failed
 | make[1]: *** [override_dh_auto_configure] Error 2
 | make[1]: Leaving directory '/home/builder/meif/home/ravi/jenkins/workspace/MEIF/meif_bin/meif'
 | debian/rules:18: recipe for target 'build' failed
 | make: *** [build] Error 2
 | dpkg-buildpackage: error: debian/rules build gave error exit status 2
 | WARNING: exit code 2 from a shell command.
 | ERROR: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/meif-1.0-r0/temp/log.do_build.24882)
ERROR: Task (/home/ravi/jenkins/workspace/OMNI/omni_bin/omni/industrial-meif/recipes-core/meif/meif.bb:do_build) failed with exit code '1'
ERROR: mel-firewall-0.3-r0 do_build: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-firewall-0.3-r0/temp/log.do_build.29687)
ERROR: Logfile of failure stored in: /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-firewall-0.3-r0/temp/log.do_build.29687
Log data follows:
 | DEBUG: Executing shell function do_build
 | mount: /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/buildchroot-target/rootfs/proc: none already mounted on /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/buildchroot-target/rootfs/proc.
 | WARNING: exit code 32 from a shell command.
 | ERROR: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-firewall-0.3-r0/temp/log.do_build.29687)
ERROR: Task (/home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-security/firewall/mel-firewall.bb:do_build) failed with exit code '1'
ERROR: isar-cfg-localepurge-1.0-r0 do_build: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/isar-cfg-localepurge-1.0-r0/temp/log.do_build.27751)
ERROR: Logfile of failure stored in: /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/isar-cfg-localepurge-1.0-r0/temp/log.do_build.27751
Log data follows:
 |    dh_testdir
 |    dh_update_autotools_config
 |    dh_auto_configure
 |    dh_auto_build
 |    dh_auto_test
 |    create-stamp debian/debhelper-build-stamp
 |  fakeroot debian/rules binary
 | dh binary
 |    create-stamp debian/debhelper-build-stamp
 |    dh_testroot
 |    dh_prep
 |    dh_auto_install
 |    dh_install
 |    dh_installdocs
 |    dh_installchangelogs
 |    dh_perl
 |    dh_link
 |    dh_strip_nondeterminism
 |    dh_compress
 | dh_compress: Cannot resolve /home/builder/isar-cfg-localepurge/isar-cfg-localepurge-1.0/debian/isar-cfg-localepurge: No such file or directory
 | debian/rules:7: recipe for target 'binary' failed
 | make: *** [binary] Error 2
 | dpkg-buildpackage: error: fakeroot debian/rules binary gave error exit status 2
 | WARNING: exit code 2 from a shell command.
 | ERROR: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/isar-cfg-localepurge-1.0-r0/temp/log.do_build.27751)
ERROR: Task (/home/ravi/jenkins/workspace/OMNI/omni_bin/omni/isar/meta/recipes-support/isar-cfg-localepurge/isar-cfg-localepurge.bb:do_build) failed with exit code '1'
ERROR: configure-development-image-0.2-r0 do_build: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/configure-development-image-0.2-r0/temp/log.do_build.28999)
ERROR: Logfile of failure stored in: /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/configure-development-image-0.2-r0/temp/log.do_build.28999
Log data follows:
 | dh build
 |    dh_testdir
 |    dh_update_autotools_config
 |    dh_auto_configure
 |    dh_auto_build
 |    dh_auto_test
 |    create-stamp debian/debhelper-build-stamp
 |  fakeroot debian/rules binary
 | dh binary
 |    create-stamp debian/debhelper-build-stamp
 |    dh_testroot
 |    dh_prep
 |    dh_auto_install
 |    dh_install
 |    dh_installdocs
 |    dh_installchangelogs
 |    dh_perl
 |    dh_link
 |    dh_strip_nondeterminism
 | Can't cd to (unreachable)/configure-development-image-0.2: No such file or directory
 | debian/rules:7: recipe for target 'binary' failed
 | make: *** [binary] Error 2
 | dpkg-buildpackage: error: fakeroot debian/rules binary gave error exit status 2
 | WARNING: exit code 2 from a shell command.
 | ERROR: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/configure-development-image-0.2-r0/temp/log.do_build.28999)
ERROR: Task (/home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-conf/images/configure-development-image.bb:do_build) failed with exit code '1'
ERROR: configure-user-1.0-r0 do_build: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/configure-user-1.0-r0/temp/log.do_build.29026)
ERROR: Logfile of failure stored in: /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/configure-user-1.0-r0/temp/log.do_build.29026
Log data follows:
 |    dh_prep
 |    dh_auto_install
 |    dh_install
 |    dh_installdocs
 |    dh_installchangelogs
 |    dh_perl
 |    dh_link
 |    dh_strip_nondeterminism
 |    dh_compress
 |    debian/rules override_dh_fixperms
 | make[1]: Entering directory '/home/builder/configure-user/configure-user-1.0'
 | dh_fixperms
 | make[1]: Leaving directory '/home/builder/configure-user/configure-user-1.0'
 |    dh_strip
 |    dh_makeshlibs
 |    dh_shlibdeps
 |    dh_installdeb
 |    dh_gencontrol
 | Can't cd to (unreachable)/configure-user-1.0: No such file or directory
 | dh_gencontrol: dpkg-gencontrol -pconfigure-user -ldebian/changelog -Tdebian/configure-user.substvars -Pdebian/configure-user returned exit code 2
 | debian/rules:7: recipe for target 'binary' failed
 | make: *** [binary] Error 2
 | dpkg-buildpackage: error: fakeroot debian/rules binary gave error exit status 2
 | WARNING: exit code 2 from a shell command.
 | ERROR: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/configure-user-1.0-r0/temp/log.do_build.29026)
ERROR: Task (/home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-conf/user/configure-user.bb:do_build) failed with exit code '1'
ERROR: mel-udev-0.2-r0 do_build: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-udev-0.2-r0/temp/log.do_build.29043)
ERROR: Logfile of failure stored in: /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-udev-0.2-r0/temp/log.do_build.29043
Log data follows:
 |    dh_prep
 |    dh_auto_install
 |    dh_install
 |    dh_installdocs
 |    dh_installchangelogs
 |    dh_perl
 |    dh_link
 |    dh_strip_nondeterminism
 |    dh_compress
 |    debian/rules override_dh_fixperms
 | make[1]: Entering directory '/home/builder/mel-udev/mel-udev-0.2'
 | dh_fixperms
 | make[1]: Leaving directory '/home/builder/mel-udev/mel-udev-0.2'
 |    dh_strip
 |    dh_makeshlibs
 |    dh_shlibdeps
 |    dh_installdeb
 |    dh_gencontrol
 | Can't cd to (unreachable)/mel-udev-0.2: No such file or directory
 | dh_gencontrol: dpkg-gencontrol -pmel-udev -ldebian/changelog -Tdebian/mel-udev.substvars -Pdebian/mel-udev returned exit code 2
 | debian/rules:7: recipe for target 'binary' failed
 | make: *** [binary] Error 2
 | dpkg-buildpackage: error: fakeroot debian/rules binary gave error exit status 2
 | WARNING: exit code 2 from a shell command.
 | ERROR: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-udev-0.2-r0/temp/log.do_build.29043)
ERROR: Task (/home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-security/mel-udev/mel-udev.bb:do_build) failed with exit code '1'
ERROR: configure-lttng-0.3-r0 do_build: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/configure-lttng-0.3-r0/temp/log.do_build.29075)
ERROR: Logfile of failure stored in: /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/configure-lttng-0.3-r0/temp/log.do_build.29075
Log data follows:
 |    dh_prep
 |    dh_auto_install
 |    dh_install
 |    dh_installdocs
 |    dh_installchangelogs
 |    dh_perl
 |    dh_link
 |    dh_strip_nondeterminism
 |    dh_compress
 |    debian/rules override_dh_fixperms
 | make[1]: Entering directory '/home/builder/configure-lttng/configure-lttng-0.3'
 | dh_fixperms
 | make[1]: Leaving directory '/home/builder/configure-lttng/configure-lttng-0.3'
 |    dh_strip
 |    dh_makeshlibs
 |    dh_shlibdeps
 |    dh_installdeb
 |    dh_gencontrol
 | Can't cd to (unreachable)/configure-lttng-0.3: No such file or directory
 | dh_gencontrol: dpkg-gencontrol -pconfigure-lttng -ldebian/changelog -Tdebian/configure-lttng.substvars -Pdebian/configure-lttng returned exit code 2
 | debian/rules:7: recipe for target 'binary' failed
 | make: *** [binary] Error 2
 | dpkg-buildpackage: error: fakeroot debian/rules binary gave error exit status 2
 | WARNING: exit code 2 from a shell command.
 | ERROR: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/configure-lttng-0.3-r0/temp/log.do_build.29075)
ERROR: Task (/home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-conf/lttng/configure-lttng.bb:do_build) failed with exit code '1'
ERROR: mel-systemd-config-0.4-r0 do_build: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-systemd-config-0.4-r0/temp/log.do_build.29030)
ERROR: Logfile of failure stored in: /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-systemd-config-0.4-r0/temp/log.do_build.29030
Log data follows:
 |    dh_prep
 |    dh_auto_install
 |    dh_install
 |    dh_installdocs
 |    dh_installchangelogs
 |    dh_perl
 |    dh_link
 |    dh_strip_nondeterminism
 |    dh_compress
 |    debian/rules override_dh_fixperms
 | make[1]: Entering directory '/home/builder/mel-systemd-config/mel-systemd-config-0.4'
 | dh_fixperms
 | make[1]: Leaving directory '/home/builder/mel-systemd-config/mel-systemd-config-0.4'
 |    dh_strip
 |    dh_makeshlibs
 |    dh_shlibdeps
 |    dh_installdeb
 |    dh_gencontrol
 | Can't cd to (unreachable)/mel-systemd-config-0.4: No such file or directory
 | dh_gencontrol: dpkg-gencontrol -pmel-systemd-config -ldebian/changelog -Tdebian/mel-systemd-config.substvars -Pdebian/mel-systemd-config returned exit code 2
 | debian/rules:7: recipe for target 'binary' failed
 | make: *** [binary] Error 2
 | dpkg-buildpackage: error: fakeroot debian/rules binary gave error exit status 2
 | WARNING: exit code 2 from a shell command.
 | ERROR: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-systemd-config-0.4-r0/temp/log.do_build.29030)
ERROR: Task (/home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-core/mel-systemd-config/mel-systemd-config.bb:do_build) failed with exit code '1'
ERROR: mel-core-policy-0.1-r0 do_build: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-core-policy-0.1-r0/temp/log.do_build.29161)
ERROR: Logfile of failure stored in: /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-core-policy-0.1-r0/temp/log.do_build.29161
Log data follows:
 |    dh_auto_test
 |    create-stamp debian/debhelper-build-stamp
 |  fakeroot debian/rules binary
 | dh binary
 |    create-stamp debian/debhelper-build-stamp
 |    dh_testroot
 |    dh_prep
 | 	rm -f debian/mel-core-policy.substvars
 | 	rm -f debian/mel-core-policy.*.debhelper
 | 	rm -rf debian/mel-core-policy/
 |    dh_auto_install
 | 	install -d debian/mel-core-policy
 | 	make -j1 install DESTDIR=\(unreachable\)/mel-core-policy-0.1/\(unreachable\)/mel-core-policy-0.1/debian/mel-core-policy AM_UPDATE_INFO_DIR=no
 | make[1]: Entering directory '(unreachable)/mel-core-policy-0.1'
 | install -d (unreachable)/mel-core-policy-0.1/(unreachable)/mel-core-policy-0.1/debian/mel-core-policy/usr//share/mel-core-policy
 | /bin/sh: 1: Syntax error: "(" unexpected
 | Makefile:20: recipe for target 'install' failed
 | make[1]: *** [install] Error 2
 | make[1]: Leaving directory '(unreachable)/mel-core-policy-0.1'
 | dh_auto_install: make -j1 install DESTDIR=(unreachable)/mel-core-policy-0.1/(unreachable)/mel-core-policy-0.1/debian/mel-core-policy AM_UPDATE_INFO_DIR=no returned exit code 2
 | debian/rules:5: recipe for target 'binary' failed
 | make: *** [binary] Error 2
 | dpkg-buildpackage: error: fakeroot debian/rules binary gave error exit status 2
 | WARNING: exit code 2 from a shell command.
 | ERROR: Function failed: do_build (log file is located at /home/ravi/jenkins/workspace/OMNI/myproject/build_aws/tmp/work/mel-omni-amd64/mel-core-policy-0.1-r0/temp/log.do_build.29161)
ERROR: Task (/home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-security/selinux/mel-core-policy.bb:do_build) failed with exit code '1'
NOTE: Tasks Summary: Attempted 314 tasks of which 0 didn't need to be rerun and 9 failed.

Summary: 9 tasks failed:
  /home/ravi/jenkins/workspace/OMNI/omni_bin/omni/industrial-meif/recipes-core/meif/meif.bb:do_build
  /home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-security/firewall/mel-firewall.bb:do_build
  /home/ravi/jenkins/workspace/OMNI/omni_bin/omni/isar/meta/recipes-support/isar-cfg-localepurge/isar-cfg-localepurge.bb:do_build
  /home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-conf/images/configure-development-image.bb:do_build
  /home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-conf/user/configure-user.bb:do_build
  /home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-security/mel-udev/mel-udev.bb:do_build
  /home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-conf/lttng/configure-lttng.bb:do_build
  /home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-core/mel-systemd-config/mel-systemd-config.bb:do_build
  /home/ravi/jenkins/workspace/OMNI/omni_bin/omni/mel-core/recipes-security/selinux/mel-core-policy.bb:do_build
Summary: There were 9 ERROR messages shown, returning a non-zero exit code.
ravi@ravi-Precision-Tower-3420:~/jenkins/workspace/OMNI/myproject/build_aws$ 
{code}
";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580465649;s:7:"updated";i:1590032464;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";i:3;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:362;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2325";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:57:""bg_printenv" command failed, shows FAT environment error";s:11:"description";s:1782:""bg_printenv" command failed, shows FAT environment error

 
Steps to reproduce:
 ---------------------
 1) Install Omni: : https://support.sw.siemens.com/
     Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200122-222306/outputs/

2)Create project directory.
    $ mkdir myproject

3)Go to project directory.
    $ cd myproject

4)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/omni/  folder.
   Copy the "meif" folder from <meif-installation-path>/support/isar/mel-apt/meif to the <mel-omni-installation-path>/omni/mel-apt/ folder.

5) Run the setup-environment script to create a build configuration:
$ source  <mel-omni-installation-path>/omni/mel-core/setup-environment -b meif_build -l meif industrial-pc

5) Set below parameters in local.conf file
CLOUD = "azure"
AZURE_DEMO_DEVICE_ID = "azure_device_test"
AZURE_DEMO_HOSTNAME = "pbu-dev-iothub-franz.azure-devices.net"
AZURE_DEMO_DEVICE_KEY = "4SC1tohk7YwXq2a2TEkgoegbaolYhoRD2Yn6H5rPm6s="

MEIF_SOURCE             = "on"
MEIF_DOCKER_NATIVE      = "off"
MEIF_DOCKER_AZURE_EDGE  = "off"
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif14/meif"

IMAGE_FEATURES += "swupdate"

6) bitbake development-image
bitbake development-image-swu

7)Target Booted up with development image

8) Executed "bg_printenv" command

Expected result:
=============
It should show booted partition details

Actual result:
============
Getting Fat environment error.
{code}
tester@localhost:~$ bg_printenv
Error initializing FAT environment.
tester@localhost:~$
{code}

NOTE: Tried with multiple cloud images also, and with every image same error while executing "bg_printenv" command.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:300;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1580281156;s:7:"updated";i:1590032469;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:363;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2324";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:75:"Update MEIF documentation with required information regarding Network ports";s:11:"description";s:169:"MEIF documentation should include all required information regarding Network ports necessary to handle smooth connection to all supported Cloud : Azure, AWS, MindSphere.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582895823;s:7:"updated";i:1590645105;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:364;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2322";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:42:"Build getting failed without cloud option ";s:11:"description";s:4536:"Steps to reproduce:
---------------------
1) Install Omni: : https://support.sw.siemens.com/
Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200119-222306/outputs/
2)Create project directory.
$ mkdir myproject

3)Go to project directory.
$ cd myproject

4)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/omni/ folder.
Copy the "meif" folder from <meif-installation-path>/support/isar/mel-apt/meif to the <mel-omni-installation-path>/omni/mel-apt/ folder.

5) Run the setup-environment script to create a build configuration:
$ source <mel-omni-installation-path>/omni/mel-core/setup-environment -b meif_build -l meif industrial-pc

5) Set below parameters in local.conf file
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif14_15jan/meif"

6)Comment below line in local.conf :
#CLOUD = "aws"

6) bitbake development-image

Expected result:
=============
Build should get completed without any Warning or Errors

Actual result:
============
Build is getting failed with the following error :
{code}
kalyani@kalyani-Precision-Tower-3420:~/nocloud/meif_build$ bitbake development-image
Loading cache: 100% |########################################################################################################################################################################| Time: 0:00:00
Loaded 8 entries from dependency cache.
ERROR: ExpansionError during parsing /home/kalyani/20jan_install/omni/industrial-meif/recipes-core/meif/meif.bb                                                                              | ETA:  0:00:00
Traceback (most recent call last):
  File "Var <do_fetch[file-checksums]>", line 1, in <module>
  File "/home/kalyani/20jan_install/omni/isar/bitbake/lib/bb/fetch2/__init__.py", line 1180, in get_checksum_file_list(d=<bb.data_smart.DataSmart object at 0x7fb25bccaba8>):
         """
    >    fetch = Fetch([], d, cache = False, localonly = True)
     
  File "/home/kalyani/20jan_install/omni/isar/bitbake/lib/bb/fetch2/__init__.py", line 1604, in Fetch.__init__(urls=['file:///home/kalyani/20jan_install/meif', 'file://postinst', 'file://run-media-persistent.mount', 'file://meif-swupdate.service', "${@''", 'if', "('${CLOUD}'", '==', "'aws')", 'else', "''}", "${@'file://gateway_certificate/certs/azure-iot-test-only.root.ca.cert.pem'", 'if', "('gateway_certificate/certs/azure-iot-test-only.root.ca.cert.pem'", '!=', "'gateway_certificate/certs/azure-iot-test-only.root.ca.cert.pem')", 'else', "''}", "${@'file://gateway_certificate/private/iot-edge-device-ca-MyEdgeDeviceCA.key.pem'", 'if', "('gateway_certificate/private/iot-edge-device-ca-MyEdgeDeviceCA.key.pem'", '!=', "'gateway_certificate/private/iot-edge-device-ca-MyEdgeDeviceCA.key.pem')", 'else', "''}", "${@'file://gateway_certificate/certs/iot-edge-device-ca-MyEdgeDeviceCA-full-chain.cert.pem'", 'if', "('gateway_certificate/certs/iot-edge-device-ca-MyEdgeDeviceCA-full-chain.cert.pem'", '!=', "'gateway_certificate/certs/iot-edge-device-ca-MyEdgeDeviceCA-full-chain.cert.pem')", 'else', "''}", 'file://meif-agent-autostart.service', 'file://meif-docker-daemon.service', 'file://meif-azure-edge-config.service', 'file://meif-azure-edge-config', 'git://git@github.com/Azure/iotedge.git;protocol=https;rev=fcaceee1bc5e5fb880a866242fc4f0d294fcc3f8'], d=<bb.data_smart.DataSmart object at 0x7fb25bccaba8>, cache=False, localonly=True, connection_cache=None):
                     try:
    >                    self.ud[url] = FetchData(url, d, localonly)
                     except NonLocalMethod:
  File "/home/kalyani/20jan_install/omni/isar/bitbake/lib/bb/fetch2/__init__.py", line 1227, in FetchData.__init__(url="${@''", d=<bb.data_smart.DataSmart object at 0x7fb25bccaba8>, localonly=True):
             self.basepath = None
    >        (self.type, self.host, self.path, self.user, self.pswd, self.parm) = decodeurl(d.expand(url))
             self.date = self.getSRCDate(d)
  File "/home/kalyani/20jan_install/omni/isar/bitbake/lib/bb/fetch2/__init__.py", line 368, in decodeurl(url="${@''"):
         if not m:
    >        raise MalformedUrl(url)
     
bb.data_smart.ExpansionError: Failure expanding variable do_fetch[file-checksums], expression was ${@bb.fetch.get_checksum_file_list(d)} which triggered exception MalformedUrl: The URL: '${@''' is invalid and cannot be interpreted


Summary: There was 1 ERROR message shown, returning a non-zero exit code.
{code}";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580465534;s:7:"updated";i:1590032481;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:365;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2321";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:39:"Build getting failed with BB_NO_NETWORK";s:11:"description";s:8368:"Steps to reproduce:
---------------------
1) Install Omni: : https://support.sw.siemens.com/
Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200119-222306/outputs/
2)Create project directory.
$ mkdir myproject

3)Go to project directory.
$ cd myproject

4)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/omni/ folder.
Copy the "meif" folder from <meif-installation-path>/support/isar/mel-apt/meif to the <mel-omni-installation-path>/omni/mel-apt/ folder.

5) Run the setup-environment script to create a build configuration:
$ source <mel-omni-installation-path>/omni/mel-core/setup-environment -b meif_build -l meif industrial-pc

5) Set below parameters in local.conf file
BB_NO_NETWORK = "1"
CLOUD = "aws"
AWS_IOT_HOST_MQTT_ADDR
AWS_IOT_CLIENT_MY_THING_NAME
AWS_IOT_CLIENT_MQTT_CLIENT_ID
AWS_IOT_SECURITY_PEM_HOST_DIR

MEIF_SOURCE = "on"
MEIF_DOCKER_NATIVE = "off"
MEIF_DOCKER_AZURE_EDGE = "off"
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif14_15jan/meif"

6) bitbake development-image

Expected result:
=============
Build should get completed without any Warning or Errors

Actual result:
============
Build is getting failed with the following error :
{code}
kalyani@kalyani-Precision-Tower-3420:~/nonetwork/meif_build$ bitbake development-image
Loading cache: 100% |########################################################################################################################################################################| Time: 0:00:00
Loaded 104 entries from dependency cache.
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |###################################################################################################################################################################| Time: 0:00:00
NOTE: Executing RunQueue Tasks
ERROR: mel-setup-1.3.6-r0 do_fetch: Function failed: Network access disabled through BB_NO_NETWORK (or set indirectly due to use of BB_FETCH_PREMIRRORONLY) but access requested with command /usr/bin/env wget -t 2 -T 30 --passive-ftp --no-check-certificate -P /home/kalyani/nonetwork/meif_build/downloads 'https://salsa.debian.org/installer-team/localechooser/raw/master/languagelist' (for url https://salsa.debian.org/installer-team/localechooser/raw/master/languagelist;name=langlist)
ERROR: Logfile of failure stored in: /home/kalyani/nonetwork/meif_build/tmp/work/mel-omni-amd64/mel-setup-1.3.6-r0/temp/log.do_fetch.6956
Log data follows:
 | DEBUG: For url ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['cvs', '.*', '/.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: For url ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['svn', '.*', '/.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: For url ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['git', '.*', '/.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: For url ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['gitsm', '.*', '/.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: For url ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['hg', '.*', '/.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: For url ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['bzr', '.*', '/.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: For url ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['p4', '.*', '/.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: For url ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['osc', '.*', '/.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: For url ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['ftp', '.*', '/.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: For url ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['npm', '.*', '/?.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: For url ['https', 'salsa.debian.org', '/installer-team/localechooser/raw/master/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['ftp', '.*', '/.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: For url ['https', 'salsa.debian.org', '/installer-team/localechooser/raw/master/languagelist', '', '', OrderedDict([('name', 'langlist')])] comparing ['npm', '.*', '/?.*', '', '', OrderedDict()] to ['file', '', '/home/kalyani/20jan_install/omni/mel-core/../downloads', '', '', OrderedDict()]
 | DEBUG: Mirror fetch failure for url file:///home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist;name=langlist (original url: https://salsa.debian.org/installer-team/localechooser/raw/master/languagelist;name=langlist)
 | DEBUG: Fetcher failure: Unable to find file file:///home/kalyani/20jan_install/omni/mel-core/../downloads/languagelist;name=langlist anywhere. The paths that were searched were:
 | /home/kalyani/20jan_install/omni/industrial-meif/recipes-core/setup/files
 | /home/kalyani/20jan_install/omni/mel-core/recipes-core/setup/mel-setup-1.3.6-r0
 | /home/kalyani/20jan_install/omni/mel-core/recipes-core/setup/mel-setup-1.3.6
 | /home/kalyani/20jan_install/omni/mel-core/recipes-core/setup/mel-setup
 | /home/kalyani/20jan_install/omni/mel-core/recipes-core/setup/files
 | /home/kalyani/20jan_install/omni/mel-core/recipes-core/setup
 | /home/kalyani/nonetwork/meif_build/downloads
 | DEBUG: Trying Upstream
 | DEBUG: Fetching https://salsa.debian.org/installer-team/localechooser/raw/master/languagelist;name=langlist using command '/usr/bin/env wget -t 2 -T 30 --passive-ftp --no-check-certificate -P /home/kalyani/nonetwork/meif_build/downloads 'https://salsa.debian.org/installer-team/localechooser/raw/master/languagelist''
 | DEBUG: Python function do_fetch finished
 | ERROR: Function failed: Network access disabled through BB_NO_NETWORK (or set indirectly due to use of BB_FETCH_PREMIRRORONLY) but access requested with command /usr/bin/env wget -t 2 -T 30 --passive-ftp --no-check-certificate -P /home/kalyani/nonetwork/meif_build/downloads 'https://salsa.debian.org/installer-team/localechooser/raw/master/languagelist' (for url https://salsa.debian.org/installer-team/localechooser/raw/master/languagelist;name=langlist)
ERROR: Task (/home/kalyani/20jan_install/omni/mel-core/recipes-core/setup/mel-setup.bb:do_fetch) failed with exit code '1'
NOTE: Tasks Summary: Attempted 43 tasks of which 28 didn't need to be rerun and 1 failed.

Summary: 1 task failed:
 /home/kalyani/20jan_install/omni/mel-core/recipes-core/setup/mel-setup.bb:do_fetch
Summary: There was 1 ERROR message shown, returning a non-zero exit code.
{code}";s:10:"issuelinks";a:1:{s:3:"out";a:2:{s:8:"fixed by";a:2:{i:0;s:7:"MELO-67";i:1;s:8:"MELO-267";}s:10:"duplicates";a:1:{i:0;s:9:"MEIF-2316";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585147075;s:7:"updated";i:1590032485;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:366;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2320";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:98:"Update iotedge deb package to latest available on https://github.com/Azure/azure-iotedge/releases ";s:11:"description";s:462:"we currently use iotedge 1.0.7 . we need to use the latest available package which is 1.0.9

iotedge package has direct dependency on HSM package. this package is also available in the given link.

moreoever the meif apt repo will no longer need openssl1.0.0 after this upgrade.

essentially the meif-apt repo has to be updated to include iotedge and hsm 1.0.9 and remove openssl1.0.0.

 

once updated, test that azure iot edge runs fine on hardware.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580296952;s:7:"updated";i:1580457216;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:367;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2319";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:64:"meiflib module takes a lot of time to build due to relative path";s:11:"description";s:567:"While building meiflib module, relative path is set in its command 

{{docker build --rm -f }}{{"./Dockerfile.amd64"}} {{-t meifcontainerregistry.azurecr.io/meiflib:}}{{1.4}}{{.}}{{0}}{{-amd64 ./../../../}}

Only meif folder is required, but using above command all files/folders other than meif are also included in the build context due to which it takes a lot of time.

Fix required in the above command and in the dockerfile.

Also fix name of meiflib in Readme file.

Change the command to build meiflib module also in Getting Started Guide MEIF-1.4";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:3600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579694338;s:7:"updated";i:1581413419;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:368;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2318";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:37:"Verify swupdate  using MEIF+ Omni 2.0";s:11:"description";s:271:"In MEIF-2282 swupdate has not been verified since it is not available and  is under development. MELO-215

THe purpose of this ticket is to verify that swupdate using MEIF+Omni2.0 works fine.

Verify update from azure iote edge module and from any meif sample agent.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"depends on";a:1:{i:0;s:8:"MELO-215";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:75600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580211911;s:7:"updated";i:1580213002;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:369;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:2:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2317";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"Update documentation for configurability updates in MEIF";s:11:"description";s:127:"Update the MEL Omni documentation to reflect all the changes made under MEIFMR-236 for configurability and scalability of MEIF.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:12600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582119016;s:7:"updated";i:1587281793;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:370;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2316";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:36:"MEIF should support no network build";s:11:"description";s:136:"currently azure iot edge certificates are generated by downloading code/scripts from github. this will lead to no network build to fail.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:16:"is duplicated by";a:1:{i:0;s:9:"MEIF-2321";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580457071;s:7:"updated";i:1580713295;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:371;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2315";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:83:"Getting Warning message "(default) keys is insecure " while building swupdate image";s:11:"description";s:2524:"Getting Warning message "(default) keys is insecure " while building swupdate image

 
Steps to reproduce:
 ---------------------
 1) Install Omni: : https://support.sw.siemens.com/
     Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200112-222305/outputs/

2)Create project directory.
    $ mkdir myproject

3)Go to project directory.
    $ cd myproject

4)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/omni/  folder.
   Copy the "meif" folder from <meif-installation-path>/support/isar/mel-apt/meif to the <mel-omni-installation-path>/omni/mel-apt/ folder.

5) Run the setup-environment script to create a build configuration:
$ source  <mel-omni-installation-path>/omni/mel-core/setup-environment -b meif_build -l meif industrial-pc

5) Set below parameters in local.conf file
CLOUD = "azure"
AZURE_DEMO_DEVICE_ID = "azure_device_test"
AZURE_DEMO_HOSTNAME = "pbu-dev-iothub-franz.azure-devices.net"
AZURE_DEMO_DEVICE_KEY = "4SC1tohk7YwXq2a2TEkgoegbaolYhoRD2Yn6H5rPm6s="

MEIF_SOURCE             = "on"
MEIF_DOCKER_NATIVE      = "off"
MEIF_DOCKER_AZURE_EDGE  = "off"
MEIF_INSTALLATION_PATH = "/home/ravi/mgc/meif14_15jan/meif"

IMAGE_FEATURES += "swupdate"

6) bitbake development-image-swu

Expected result:
=============
Build should get completed without any Warning or Errors

Actual result:
============
Getting Warning message
{code}
ravi@ravi-Precision-Tower-3420:~/omnimeif/build_azure-15jan-2$ bitbake development-image-swu
Loading cache: 100% |########################################################################################################################################################################| Time: 0:00:00
Loaded 104 entries from dependency cache.
NOTE: Resolving any missing task queue dependencies
Initialising tasks: 100% |###################################################################################################################################################################| Time: 0:00:00
NOTE: Executing RunQueue Tasks
WARNING: development-image-swu-1.0-r0 do_build: signing/encrypting SWUpdate files with the test (default) keys is insecure!
NOTE: Tasks Summary: Attempted 434 tasks of which 431 didn't need to be rerun and all succeeded.

Summary: There was 1 WARNING message shown.
ravi@ravi-Precision-Tower-3420:~/omnimeif/build_azure-15jan-2$ 
{code}

NOTE: Same Warning message for aws build also.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"duplicates";a:1:{i:0;s:9:"MEIF-2310";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:300;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1579513364;s:7:"updated";i:1590032490;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:372;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:3:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";i:1;s:300:"com.atlassian.greenhopper.service.sprint.Sprint@1ee33c7c[id=1941,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 8,startDate=2020-05-25T08:58:07.341+01:00,endDate=2020-06-12T18:58:00.000+01:00,completeDate=2020-06-15T08:49:00.180+01:00,sequence=1941,goal=Starts : 25th May till 12th June]";i:2;s:299:"com.atlassian.greenhopper.service.sprint.Sprint@6e261774[id=2012,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 9,startDate=2020-06-15T08:50:57.907+01:00,endDate=2020-07-03T17:50:00.000+01:00,completeDate=2020-07-06T06:30:59.942+01:00,sequence=2012,goal=Starts: 15th June Till 3rd July]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2314";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:80:"QA: Tools: Test cycle 1 of testing of MEL ADE based debugging on secondary hosts";s:11:"description";s:382:"* *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - CodeBench Workflow for MEL ADE
 [https://testlink.alm.mentorg.com/lnl.php?apikey=c2e953eb2955deafcb7ed2d0d49739166b54c9e41fe8aabe84c5ce91f8dc6010&tproject_id=458205&tplan_id=751105&type=results_matrix
 * *Platform*:
 ** RHEL 7.7 - 64bit - MindConnect
 ** Ubuntu 18 - 64bit - Azure
 ** Ubuntu 20 - 64bit - AWS";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2294";}}}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:113400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1592223015;s:7:"updated";i:1592223082;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:373;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2313";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:57:"QA: Tools: Test cycle 1 of installer testing on Ubuntu 18";s:11:"description";s:372:"* *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Installer, Licensing, and Packaging
 [https://testlink.alm.mentorg.com/lnl.php?apikey=fc5dd45df7f6745ec9fefb6404b0cf6bd7358c6b440478e3f0c655f2fe3d0784&tproject_id=458205&tplan_id=740209&type=results_matrix]
 * *Platform*:
 ** RHEL 8 - 64bit (78)
 ** Ubuntu 18 - 64bit (78)

               ";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2187";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:50400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582628158;s:7:"updated";i:1582628254;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:374;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2280";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2312";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:51:"QA: Tools: Test cycle 1 SA IoT support on Ubuntu 20";s:11:"description";s:174:"* *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Sourcery Analyzer IoT
 * *Platforms*
 ** AWS - IPC 127E - Ubuntu 20
 ** Azure - IPC 127E - Ubuntu 20";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:6:"clones";a:1:{i:0;s:9:"MEIF-2311";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588779787;s:7:"updated";i:1588780001;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";i:3;s:4:"res4";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:375;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2280";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2311";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:46:"QA: Tools: Test cycle 1 SA IoT support on RHEL";s:11:"description";s:174:"* *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Sourcery Analyzer IoT
 * *Platforms*
 ** AWS - IPC 127E - RHEL (28)
 ** Azure - IPC 127E - RHEL (29)";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2312";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:64800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587729073;s:7:"updated";i:1587729083;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:376;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2310";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:68:"User defined swupdate keys are not getting used while building image";s:11:"description";s:1595:"User defined swupdate keys are not getting used while building image

 
Steps to reproduce:
 ---------------------
 1) Install Omni: : https://support.sw.siemens.com/
     Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200112-222305/outputs/

2)Create project directory.
    $ mkdir myproject

3)Go to project directory.
    $ cd myproject

4)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/omni/  folder.
   Copy the "meif" folder from <meif-installation-path>/support/isar/mel-apt/meif to the <mel-omni-installation-path>/omni/mel-apt/ folder.

5) Run the setup-environment script to create a build configuration:
$ source  <mel-omni-installation-path>/omni/mel-core/setup-environment -b meif_build -l meif industrial-pc

5) Set below parameters in local.conf file
CLOUD = "aws"
AWS_IOT_HOST_MQTT_ADDR
AWS_IOT_CLIENT_MY_THING_NAME
AWS_IOT_CLIENT_MQTT_CLIENT_ID 
AWS_IOT_SECURITY_PEM_HOST_DIR

MEIF_SOURCE             = "on"
MEIF_DOCKER_NATIVE      = "off"
MEIF_DOCKER_AZURE_EDGE  = "off"
MEIF_INSTALLATION_PATH = " "

IMAGE_FEATURES += "swupdate"
SWU_KEYS_PATH = "/home/ravi/security_keys/swupdate_keys"

6) bitbake development-image

Expected result:
=============
Image should use USER defined keys while building image

Actual result:
============
It is using default key from path "~/mgc/omni_mief14/omni/mel-core/test-keys/" instead of user defined keys from path "/home/ravi/security_keys/swupdate_keys"

Attached local.conf file.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:16:"is duplicated by";a:1:{i:0;s:9:"MEIF-2315";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:7200;s:10:"resolution";s:16:"Cannot Reproduce";s:14:"resolutiondate";i:1579513155;s:7:"updated";i:1590032494;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";i:3;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:377;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1930";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2309";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:124:"remove azure.c demo file and use the framework/cloud/azure/samples/solutions/remote_monitoring_client sample as azure sample";s:11:"description";s:405:"all changes made to azure.c shall be moved to the framework/cloud/azure/samples/solutions/remote_monitoring_client . the azure.c file shall be deleted. the purpose is to use the provided code as we already using the remote monitoring web app.

 issue derived from [https://stash.alm.mentorg.com/projects/MEIF/repos/meif/pull-requests/170/overview]

also add a print statement to print the sdk version";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:9000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580288712;s:7:"updated";i:1590032499;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:378;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2308";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:84:"Azure Iot Edge Gateway Certificate build time warning while building aws cloud image";s:11:"description";s:1942:"Warning message for Azure Iot Gateway certificates while building image for AWS cloud

 
Steps to reproduce:
 ---------------------
 1) Install Omni: : https://support.sw.siemens.com/
     Install meif installer : ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200112-222305/outputs/

2)Create project directory.
    $ mkdir myproject

3)Go to project directory.
    $ cd myproject

4)Copy the "industrial-meif" layer from <meif-installation-path>/support/isar/industrial-meif to the <mel-omni-installation-path>/omni/  folder.
   Copy the "meif" folder from <meif-installation-path>/support/isar/mel-apt/meif to the <mel-omni-installation-path>/omni/mel-apt/ folder.

5) Run the setup-environment script to create a build configuration:
$ source  <mel-omni-installation-path>/omni/mel-core/setup-environment -b meif_build -l meif industrial-pc

5) Set below parameters in local.conf file
CLOUD = "aws"
AWS_IOT_HOST_MQTT_ADDR
AWS_IOT_CLIENT_MY_THING_NAME
AWS_IOT_CLIENT_MQTT_CLIENT_ID 
AWS_IOT_SECURITY_PEM_HOST_DIR

MEIF_SOURCE             = "on"
MEIF_DOCKER_NATIVE      = "off"
MEIF_DOCKER_AZURE_EDGE  = "off"
MEIF_INSTALLATION_PATH = " "

6) bitbake development-image

Expected result:
=============
Build should get passed successfully without any warnings or errors.

Actual result:
============
{code}
WARNING: meif-1.0-r0 do_azure_iot_edge_gateway_certs_check: 
You are using default certificates for Azure IoT Edge gateway, which means each time MEIF is built, new certificates are generated.
It is recommended to provide your own certificates so that Azure IoT Edge gateway and the downstream device(azure agent) use the same certificates.
NOTE: Tasks Summary: Attempted 365 tasks of which 0 didn't need to be rerun and all succeeded.

Summary: There was 1 WARNING message shown.
ravi@ravi-Precision-Tower-3420:~/omnimeif/build_aws$ 
{code}
Attached log file & local.conf file.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578906817;s:7:"updated";i:1590032504;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";i:3;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:379;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2307";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:83:"linux_tace_agent.c should ensure if /usr/bin/traceiot.sh exists before executing it";s:11:"description";s:60:"azure agent crashes if /usr/bin/traceiot.sh does not exists.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580288767;s:7:"updated";i:1589529617;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:380;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2306";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:82:"Building MEIF fails if user does not have rights to the MentorEmbedded github repo";s:11:"description";s:2927:"while setting up a jenkins job to have some automated build setup for MEIF i installed Omni on a fresh ubuntu VM. when i built MEIF i got the following error.
{code:java}
ERROR: swupdate-2019.04-r0 do_fetch: Function failed: Fetcher failure for URL: 'git://git@github.com/mentorembedded/swupdate.git;branch=debian-none/2019.04;protocol=ssh'. Unable to fetch URL from any source. {code}
Above error indicated that swupdate's source is being fetched from the MentorEmbedded github repo.

All new MEIF developers got this error but they resolved it by getting the rights to the repo and by adding SSH key to github.

This seemed to be an issue to me from customer's point of view since any customer using MEIF with Mel Omni will get this error.

I investigated and found no swupdate.deb package in the apt repo that comes with Mel Omni. however i did see swudpate-ebg.deb and swupdate-uboot.deb. The two packages i found clearly indicate that we should be using either of two and not building from source.

another thing i investigated was how were we even building from source.  after investigations and doing multiple builds i found out that the following line in meif.bb is responsible for triggering a source build of swupdate package
{code:java}
DEPENDS += "${@bb.utils.contains("MEIF_USES_SWUPDATE", "yes", "swupdate", "", d)}" {code}
Removing the above line causes swupdate not to build from source.

however to satisfy MEIF's requirement of swupdate. the control file must be updated with either swupdate-ebg or swupdate-uboot depending on what bootloader the target board uses. meif.bb currently sets 'swudpate' in the control file.

why did we end up building swupate from source?
 MEIF needs swupdate. the first step that was done was adding swupdate in control file.if the package swupdate existed then there would have been no issue but this resulted in an error since there was no package named swupdate. (swupdate-ebg and swupdate-uboot exists only). to resolve the error there was a line added to meif.bb. that line is the "depends+=..." line mentioned above. this line resulted in fetching the swupdate recipe from source and the MEIF's issue was resolved. it was never really thought through that we should be using swupdate's debian package rather than building it. maybe we didn't even know we were building the swupdate package from source.

Fix Required
 1) remove the depends+= line from meif.bb
 2) depending on the target and bootlaoder used. add swupdate-ebg or swupdate-uboot to control file. meif.bb already adds packages to the control file generically. so essentially the following line will be updated with addition to a few conditions
{code:java}
        # if bootloader is ebg
        d.appendVar('AZURE_IOT_EDGE_PACKAGES', ", swupdate-ebg") 
        
        # else if bootloader is uboot
        d.appendVar('AZURE_IOT_EDGE_PACKAGES', ", swupdate-uboot") {code}
 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:3600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578307514;s:7:"updated";i:1579507145;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:381;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2304";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:59:"rename the MEIF variables in local.conf to start with MEIF.";s:11:"description";s:246:"currently the variables are named randomly. it is very hard to know which option is specific to MEIF. renaming variable such that all variables have MEIF  at the start will make the variables more specific to MEIF. e.g CLOUD shall be MEIF_CLOUD.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:36000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580727493;s:7:"updated";i:1580727505;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:382;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2303";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:35:"Remove the APPS variable from MEIF.";s:11:"description";s:1724:" 
{code:java}
arsalan:i was just thinking if we really need the APPS option in cmake.  We can remove this option and set APPS to be always included  except for the cloud 'azure-edge'.moreover this APPS option is also not doing what it says. it isnt really controlling the compilation. it only prevents from generating the make files. even if we have APPS on we still have to use the "make agent" command to compile the sample. so essentially if we do not want to compile the sample we can simply not give the command 'make agent' . @Fakhir Ansari @Ehtasham Saeed what do you think about my above comment?

fakhir:Didn't we introduce that for the case for Nucleus in CodeBench, the lib is built by a separate project (in which we don't want to build the apps) and the apps are built in a separate project6:03 PMAnd likely we have a similar case for MEL ADE6:03 PMThere are times when we want to build just the lib without the apps

arsalan:agent is only build if the command make agent is run. if we only run the command make  then the lib is built.enabling APPS does not guarantee that the app will be built. to build the app we need to the run the command as mentioned above.7:45 PMthe APPS variable does control generating the make files . So if APPS="off" then the make files wont be generated.7:45 PMI am not sure what are we trying to achieve with this APPS variable.

Fakhir:Regarding the APPS option, I think when this option was originally introduced we used to build both the lib and the apps with the plain "make" command. This "make agent" was likely introduced later, which is why APPS now looks redundant{code}
 

APPS variable will possibly be removed from recipe file, local.conf and cmake files.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580715658;s:7:"updated";i:1580722089;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:383;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2227";s:6:"sprint";a:4:{i:0;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";i:2;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";i:3;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2302";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:75:"Revisit MEIF + ADE workflows and possibly remove MEIF specific ADE portions";s:11:"description";s:947:"THe current ADE support for MEL Flex adds a project template in codebench. so clicking new project -> C project in the list of projects we see MEIF Azure sample template (if built for Azure). I think we need to rework this and make it more generic such that MEIF does not have to override the ADE class. 

We also should have same flows across all OS. Nucleus flow is different. It just imports the project and done. that project has all include paths, libraries and definitions pre set. 
MEL uses a different flow, it creates a project template as mentioned above.

creating the project template has a major disadvantage that whenever we add a new BSP ,MEIF has to do add some additional files that are BSP specific.

if we move to the project import method then porting ADE for new BSP will not be required in MEIF which is a very big advantage. 

We need to discuss this with TOOLS teams and identify a common flow for all OS for MEIF.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:104400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582883574;s:7:"updated";i:1583225083;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:384;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:2:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2299";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:115:"data updates do not work if postinstall and preinstall parameter is not correctly handled within the install script";s:11:"description";s:370:"data updates install script has to follow a certain logic . i.e it is passed a postinstall parameter and pre install parameter. it also needs to create the no reboot file else it will reboot after data update.

see the docker compose stack example . it contains the install script file which can be used as template.

 

probably we need to document the behavior.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1581088376;s:7:"updated";i:1581509555;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:385;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:2:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";i:1;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2298";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:88:"meif fails to build if aws options are deleted from  local.conf  when building for azure";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589806987;s:7:"updated";i:1593598459;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:386;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1955";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2297";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:39:"QA: MEIF user's reference manual review";s:11:"description";s:399:"Verify the following chapters/sections in the MEIF User's and Reference Manual.
 * Chapter 3 MEIF Host Tool - To be moved to a separate document
 * Appendix B Build System and Directory Structure
 * Third Party Information

Verify the high level use cases mentioned at [MEIFMR-240: MEIF 1.4.0 Documentation|https://confluence.alm.mentorg.com/display/QA/MEIFMR-240%3A+MEIF+1.4.0+Documentation].";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:5:"Tests";a:1:{i:0;s:9:"MEIF-1921";}}}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:30600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588333188;s:7:"updated";i:1588517744;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:3:"doc";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:387;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1955";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2296";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:37:"QA: MEIF getting started guide review";s:11:"description";s:391:"Verify the following in MEIF Getting Started Guide:
 * Chapter 1 Getting Started with MEIF for MEL > Building, Modifying, and Debugging the Cloud Application in CodeBench
 *Note*: To be documented under MEIF-2264.

Verify the high level use cases mentioned at [MEIFMR-240: MEIF 1.4.0 Documentation|https://confluence.alm.mentorg.com/display/QA/MEIFMR-240%3A+MEIF+1.4.0+Documentation].";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:5:"Tests";a:1:{i:0;s:9:"MEIF-1919";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588333239;s:7:"updated";i:1588333716;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:3:"doc";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:388;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2295";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:61:"QA: Tools: Test cycle 2 of testing of MEL ADE based debugging";s:11:"description";s:550:"Execute only high importance test cases in the following test plan.
 * *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Test Plan for Post-CF Testing
 * *Platform*:
 ** AWS - IPC 127E - Debian 10 (64 bit)
 ** Azure - IPC 127E - Debian 10 (64 bit) 
 ** MCL - IPC 127E - Windows 10 (64 bit)
 * *Suite*: CodeBench Workflow
 * *Build* - RC1

Make sure to test all the features mentioned at [QA Checklist for QA Cycle 2 of MEIF 1.4.0|https://confluence.alm.mentorg.com/display/QA/QA+Checklist+for+QA+Cycle+2+of+MEIF+1.4.0].";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594813859;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac2";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:389;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2294";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:78:"QA: Tools: Test cycle 1 of testing of MEL ADE based debugging on primary hosts";s:11:"description";s:333:"* *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - CodeBench Workflow for MEL ADE
 [https://testlink.alm.mentorg.com/lnl.php?apikey=c2e953eb2955deafcb7ed2d0d49739166b54c9e41fe8aabe84c5ce91f8dc6010&tproject_id=458205&tplan_id=751105&type=results_matrix
 * *Platform*:
 ** Debian 10 - 64bit
 ** Windows 10 - 64bit";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2314";}}}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:122400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588332440;s:7:"updated";i:1588332446;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:390;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2280";s:6:"sprint";a:1:{i:0;s:263:"com.atlassian.greenhopper.service.sprint.Sprint@159ba68e[id=1868,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 5,startDate=2020-03-23T01:25:00.000Z,endDate=2020-04-10T17:25:00.000+01:00,completeDate=2020-04-10T16:46:27.963+01:00,sequence=1868,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2293";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:47:"QA: Tools: Test cycle 1 SA IoT support on Azure";s:11:"description";s:305:"* *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Sourcery Analyzer IoT
 * *Platforms*
 ** -AWS - IPC 127E - Ubuntu 18 (37)-
 ** Azure - IPC 127E - Ubuntu 18 (38)
 ** -AWS - IPC 127E - Windows 10 (41)-
 ** Azure - IPC 127E - Windows 10 (52)
 ** Azure - IPC 127E - Debian 10 (81)";s:10:"issuelinks";a:2:{s:2:"in";a:1:{s:13:"Is Blocked By";a:1:{i:0;s:7:"SA-4847";}}s:3:"out";a:1:{s:13:"is triggering";a:1:{i:0;s:9:"MEIF-2415";}}}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:166200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586444276;s:7:"updated";i:1586444571;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:391;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2280";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2292";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:60:"QA: Tools: Documentation + OSS verificaion of SA IoT support";s:11:"description";s:272:"In addition to the functional verification of SA IoT manual, please execute test cases from following test plan as well.

*Test Plan*: MEIF 1.4.0 - Sourcery Analyzer IoT

*Platforms*: 
 * AWS - IPC 127E - Debian 10 (64 bit)
 * Azure - IPC 127E - Windows 10 (64 bit)";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:5:"Tests";a:1:{i:0;s:7:"SA-4830";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:10800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588333606;s:7:"updated";i:1588345439;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:3:"doc";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:392;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2287";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2291";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:48:"QA: Tools: Test cycle 2 of shared MEIF Host Tool";s:11:"description";s:393:"Execute test cases mentioned at [QA Checklist for QA Cycle 2 of MEIF 1.4.0|https://confluence.alm.mentorg.com/display/QA/QA+Checklist+for+QA+Cycle+2+of+MEIF+1.4.0].
 * *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Test Plan for Post-CF Testing
 * *Platforms*
 ** Debian 10 - 64bit
 ** Windows 10 - 64bit
 * *Suite*: MEIF Host Security Tool
 * *Build* - RC1

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594814724;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac2";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:393;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2287";s:6:"sprint";a:1:{i:0;s:263:"com.atlassian.greenhopper.service.sprint.Sprint@159ba68e[id=1868,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 5,startDate=2020-03-23T01:25:00.000Z,endDate=2020-04-10T17:25:00.000+01:00,completeDate=2020-04-10T16:46:27.963+01:00,sequence=1868,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2290";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"QA: Tools: Test cycle 1 of shared MEIF Host Tool";s:11:"description";s:271:"Only host side sanity testing of GUI and CLI tool will be covered.
 * Windows 10
 * Debian 10
 * Ubuntu 18 (Just make sure that the tool can be launched without any issues)
 * -Ubuntu 20-
 * RHEL 7.7 (Just make sure that the tool can be launched without any issues)";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585569808;s:7:"updated";i:1585570244;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:394;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2287";s:6:"sprint";a:1:{i:0;s:263:"com.atlassian.greenhopper.service.sprint.Sprint@159ba68e[id=1868,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 5,startDate=2020-03-23T01:25:00.000Z,endDate=2020-04-10T17:25:00.000+01:00,completeDate=2020-04-10T16:46:27.963+01:00,sequence=1868,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2289";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"QA: Tools: Test development of shared MEIF Host Tool";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:17100;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585568700;s:7:"updated";i:1585570413;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:2:"td";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:395;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2287";s:6:"sprint";a:1:{i:0;s:263:"com.atlassian.greenhopper.service.sprint.Sprint@159ba68e[id=1868,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 5,startDate=2020-03-23T01:25:00.000Z,endDate=2020-04-10T17:25:00.000+01:00,completeDate=2020-04-10T16:46:27.963+01:00,sequence=1868,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2288";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"QA: Tools: Test planning of shared MEIF Host Tool";s:11:"description";s:230:"Confluence Test Plan: [https://confluence.alm.mentorg.com/display/QA/MEIFMR-228%3A+Shared+MEIF+Host+Tool+Installation]

Test Link Test Plan: [https://testlink.alm.mentorg.com/lib/results/resultsTC.php?format=0&tplan_id=751041]";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:63000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585568569;s:7:"updated";i:1585570270;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:2:"tp";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:396;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2287";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:45:"QA: Tools: Shared MEIF Host Tool installation";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-228";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1585499307;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:2:"qa";i:1;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:397;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2280";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2286";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:42:"QA: Tools: Test Development SA IoT Support";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:900;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582528289;s:7:"updated";i:1582881870;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:2:"td";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:398;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1955";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2285";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:29:"QA: OSS documentation review.";s:11:"description";s:152:"Verify the documentation of OSS approvals mentioned at [MEIF 1.4 - OSS Approval.|https://confluence.alm.mentorg.com/display/PS/MEIF+1.4+-+OSS+Approval]";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:16200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588333121;s:7:"updated";i:1588517749;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:3:"doc";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:399;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2284";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:63:"all meif samples should follow the same method to build samples";s:11:"description";s:247:"aws and azure samples both use different methods to compile the binary. azure has all cmake logic inside the CMAkelists.txt where aws's Cmakelists.txt inlcudes another file which has the cmake logic.

all samples should follow the same approach.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1576654242;s:7:"updated";i:1579065668;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:400;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2283";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:57:"all meif configuration shall be defined in a single file.";s:11:"description";s:1000:"currently there is no source of knowing the configuration options available in meif. e.g there are options for aws cloud, azure cloud, etc. But all this information is inside the source files.

We need to add a single configuration file that has all MEIF configurations. The user can then change these configuration either by manually editing this file or pass the -D option to CMAKE command.

Essentially the -D option will be configuring this header file and MEIF will be using this header file for all configurations.

e.g we can have the configuration file as follows


{code:java}
/*value passed in via -D flag of CMAKE command. OR user can replace the '@AWS_IOT_HOST_MQTT_ADDR@' with required value here. */
#define AWS_IOT_MQTT_HOST "@AWS_IOT_HOST_MQTT_ADDR@"

#ifndef AWS_IOT_MQTT_HOST
#define AWS_IOT_MQTT_HOST "some default value"
#endif{code}
 

CMAKE has built in support for replacing the @VAR@ variables with the values. configure_file() is used for this purpose.
 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:50400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1577086918;s:7:"updated";i:1579065581;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:401;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2282";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:42:"Upgrade from MEL Omni version 1.0.1 to 2.0";s:11:"description";s:460:"Move from MEL Omni 1.0.1 to the latest snapshot of MEL Omni 2.0. Ensure all the features of MEIF are working correctly on MEL Omni 2.0, and especially check that all the swupdate and MEIF Lite requirements mention on the following page are satisfied by MEL Omni 2.0:

[https://confluence.alm.mentorg.com/display/PS/swupdate+requirements+for+MEIF+1.4]

 

Update:

Update references of MEL omni 1.0.1 to MEL Omni 2.0 from MEIF1.4 getting started guide.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:201600;s:9:"timespent";i:151350;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579247479;s:7:"updated";i:1584099403;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:402;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:4:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";i:1;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";i:2;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";i:3;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2281";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:95:"update firmwareupdate module to use device twin instead of direct method to do firmware udpates";s:11:"description";s:343:"meiffirmwareupdate module uses direct method to do firmware updates. This is against what the azure recommended way. We need to use device twin to perform firmware updates.

further more the documentation also needs to be updated accordingly to add instructions on how to update firmware once the change in made to meiffirmwareupdate module.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:117000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582538755;s:7:"updated";i:1582614381;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:403;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2280";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:43:"QA: Tools - Update Java side AWS/Azure SDKs";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:2:{i:0;s:10:"MEIFMR-225";i:1;s:8:"SAMR-338";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1586432043;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:2:"qa";i:1;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:404;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2279";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:84:"for runtime configurations the .ini file shall be named meif.ini across all OS/demos";s:11:"description";s:308:"For nucleus the file is meif.ini
however for MEL the name is demo specific. aws_meif.ini for aws demo. azure_meif.ini for azure, etc.

this should be fixed. the name of the runtime configuration file shall be meif.ini across Nucleus,MEL ,etc.


Ensure documentation is also updated if not already done.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1576135423;s:7:"updated";i:1576150298;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:405;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:2:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2278";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:51:"optimize the size of azure iot edge module  images.";s:11:"description";s:390:"size of the azure iot edge module images is more than 200mb. 
 reduce this as much as possible.

one way can be to use alpine as base image. we use ubuntu right now.

Update: after you are done optimizing the size please run the azure iot edge test cases documented on [https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+Engineering+Test+Plan] (Run-IoT-Edge* and Debug-IoT-Edge*)";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:8:"analyzes";a:1:{i:0;s:9:"MEIF-2355";}}}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:313200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584508045;s:7:"updated";i:1585202271;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:406;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:2:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";i:1;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2277";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"Replace use of strtok() with strtok_r() in MEIF code";s:11:"description";s:352:"Use of strtok() is not thread safe so it should be replaced with strtok_r(). The majority of the code in MEIF is already using strtok_r() but there still are some instances of strtok() which need to be fixed.

If any occurrence lies within third party code (such as cloud SDKs), then we'll need to discuss whether to fix it or to leave it unmodified.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1576243074;s:7:"updated";i:1581413649;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:407;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:3:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";i:1;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";i:2;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2276";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"update meif docker daemon to handle firmware updates. ";s:11:"description";s:719:"currently the meiffirmwareupdate module uses swupdae APIs directly. We have to provide the swupdate library and header files to the module.  A proper approach is that the module should only be responsible for downloading the firmware and feed the downloaded data to the meif docker daemon. The meif docker daemon should then be responsible to communicates with swupdate.

currently the downloaded file is written to a pipe. swupdate has built in feature of IPC, hence it listens on pipe to do IPC. 


work required under this ticket
1) Study of how existing firmware updates work. 1d
2) Prepare a design document to update meif docker daemon. 1d
3) Update meif docker daemon and meif firmware update module. 3d";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"duplicates";a:1:{i:0;s:9:"MEIF-2270";}}}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:201600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1581328838;s:7:"updated";i:1581337319;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:408;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2275";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:98:" all meif headers shall be installed in folder /usr/local/include/meif instead of /usr/local/meif ";s:11:"description";s:308:"when make install is run the headers are installed.
we should be installing meif headers inside a folder named meif. e.g /usr/local/include/meif . 
currently the headers are installed at /usr/local/include/

 openssl and azureiot use the mentioned convention above.

Not sure how this will impact ADE.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"duplicates";a:1:{i:0;s:9:"MEIF-2202";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1582196654;s:7:"updated";i:1582196711;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:409;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2274";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:34:"Update MEIF installer welcome text";s:11:"description";s:75:"Update MEIF installer welcome text to comply with parent Jira requirements.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582647226;s:7:"updated";i:1583153435;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:410;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2273";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:35:"Update MEIF installer splash-screen";s:11:"description";s:1433:"Update splash screen used by MEIF *installers* to comply with new requirements.
 # Review [https://inside.mentorg.com/legal/trade-secret-copyright-and-proprietary-notices] carefully for splash screen requirements.
 # Please be aware that all previous texts should be removed and the content below should be used verbatim (as there have been changes).
 # Center and adjust font size to what appears best for the title and footer sections of the following text.
 # Carefully place copyright and registered symbols as superscript, without spaces between symbol and word, except where marked as shown below:

{code:java}
                            Mentor® Embedded IoT Framework



                              Restricted © Siemens 2020.
                                All Rights Reserved.
THIS WORK CONTAINS TRADE SECRET AND CONFIDENTIAL INFORMATION WHICH ARE THE PROPERTY OF
    MENTOR GRAPHICS CORPORATION OR ITS LICENSORS AND IS SUBJECT TO LICENSE TERMS.
{code}
 # For examples, see SB-13745.
 # Output must be a bitmap with same image dimensions in pixels as those in the reference examples (ex [^splash.bmp]).
 # Please ensure that image borders are similar to reference examples.
 # Please attach {color:#d04437}all{color} *bitmaps* to this JIRA issue for review.
 # Please attach {color:#d04437}all{color} *final graphics source files* to this JIRA (meif_splash.psd, meif_splash.ai, meif_splash.xcf, etc)";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582909310;s:7:"updated";i:1583120744;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:411;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:2:{i:0;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2272";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:34:"Update MEIF to use new legal texts";s:11:"description";s:603:"This story includes text updates for all splash screens, EULAs and copyrights.

ESD agreements[
https://inside.mentorg.com/legal/embedded-software-division-esd-agreements]

Notice specific requirements for Mentor and Siemens texts at:
 [https://inside.mentorg.com/legal/trade-secret-copyright-and-proprietary-notices]

Where applicable:
 [http://tpwebdev.wv.mentorg.com/techpubs/engineering/downloads/eula_click_through.html]

Privacy:
https://jira.alm.mentorg.com/browse/CB-11210?focusedCommentId=665289&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-665289
";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582926578;s:7:"updated";i:1583153517;s:7:"duedate";s:0:"";s:8:"subtasks";a:2:{i:0;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2273";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:35:"Update MEIF installer splash-screen";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";s:0:"";s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:0:{}s:17:"issuetypecategory";s:4:"TASK";}i:1;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2274";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:34:"Update MEIF installer welcome text";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";s:0:"";s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:8:"sub-task";s:7:"subtask";b:1;s:6:"labels";a:0:{}s:11:"fixVersions";a:0:{}s:17:"issuetypecategory";s:4:"TASK";}}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:412;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:245:"com.atlassian.greenhopper.service.sprint.Sprint@94d8eee[id=1808,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3d,startDate=2019-10-31T13:14:00.000Z,endDate=2019-11-21T13:14:00.000Z,completeDate=2019-11-25T11:28:15.902Z,sequence=1740,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2271";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:26:"Add docker to MEIF product";s:11:"description";s:329:"Please add the folder 'docker' to the installer. it should be installed alongside the folders framework,samples,support,tool,etc . so the installation directory will be as follows

 
{code:java}
/<meif-install-dir>/meif/docker
/<meif-install-dir>/meif/framework 
/<meif-install-dir>/meif/samples
.
.
.
{code}
 

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1574378072;s:7:"updated";i:1574681192;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:413;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:245:"com.atlassian.greenhopper.service.sprint.Sprint@94d8eee[id=1808,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3d,startDate=2019-10-31T13:14:00.000Z,endDate=2019-11-21T13:14:00.000Z,completeDate=2019-11-25T11:28:15.902Z,sequence=1740,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2269";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"Split MEIF Azure IoT Edge Module into multiple modules";s:11:"description";s:297:"currently MEIF's azure iot edge module does firmware updates, reboots, telemetry data.

Firmware updates and Reboot shall be in the MEIF's module.

All other application logic shall be added in a separate module. This module will have no dependency on MEIF.  It will implement telemetry data.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:46800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1573738596;s:7:"updated";i:1573752914;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:414;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:245:"com.atlassian.greenhopper.service.sprint.Sprint@94d8eee[id=1808,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3d,startDate=2019-10-31T13:14:00.000Z,endDate=2019-11-21T13:14:00.000Z,completeDate=2019-11-25T11:28:15.902Z,sequence=1740,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2268";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:45:"Handle the lifecycle of Azure IoT Edge Module";s:11:"description";s:82:"Module life cycle means adding, updating, deleting, stopping, starting the module.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:19800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1573567996;s:7:"updated";i:1573752899;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:415;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2266";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:69:"Building CLOUD set to hawkbit on MEL should generate a suitable error";s:11:"description";s:429:"Setting the cmake CLOUD option to "hawkbit" is not a valid option for any OS other than Nucleus. But currently, doing so on another OS like MEL just causes a build error without any indication that this option is not valid on MEL. A more user friendly error needs to be generated for the user explaining why he shouldn't be using this combination (because hawkBit is part of the MEL build instead of the MEIF build on MEL/Linux).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1577449524;s:7:"updated";i:1581413656;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:416;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2265";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"Build is failing after changes made in MEIF-2195";s:11:"description";s:110:"If building MEIF with a cloud other than Azure, the build is failing. parson.h needs to be included in meif.h.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:3600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1572847044;s:7:"updated";i:1581344033;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:417;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2227";s:6:"sprint";a:3:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:2;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2264";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:40:"ADE update/testing on MEL-Omni + IPC127E";s:11:"description";s:207:"Prepare the ADE template for the tools team and receive the updated ADE from them for MEIF. Then test the ADE with MEL-Omni + IPC127E.

Update the MEIF1.4 getting started guide with the ADE documentation.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:13:"is blocked by";a:1:{i:0;s:8:"CB-12337";}}}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586520559;s:7:"updated";i:1586755996;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:418;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2260";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:27:"QA:MEL:MEIF 1.4 BSP Support";s:11:"description";s:0:"";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:10:"depends on";a:12:{i:0;s:9:"MEIF-2151";i:1;s:9:"MEIF-2152";i:2;s:9:"MEIF-2153";i:3;s:9:"MEIF-2154";i:4;s:9:"MEIF-2155";i:5;s:9:"MEIF-2156";i:6;s:9:"MEIF-2159";i:7;s:9:"MEIF-2160";i:8;s:9:"MEIF-2161";i:9;s:9:"MEIF-2162";i:10;s:9:"MEIF-2165";i:11;s:9:"MEIF-2166";}}s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-247";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1590153297;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:419;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2166";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@15f5a237[id=1867,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 4,startDate=2020-03-02T10:36:02.902Z,endDate=2020-03-21T10:34:00.000Z,completeDate=2020-03-20T13:24:31.728Z,sequence=1867,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2250";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:87:"PRE-FF:Automation for Build of the Products and swupdate through hawkbit(Omni and MEIF)";s:11:"description";s:224:"-Automate test cases of Install/Build which are not completed in MEIF-1965(PRE-FF:Automation setup/test for Installation and Build of the Products(Omni and MEIF))
-Automate all possible use cases of swupdate through hawkbit";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583753982;s:7:"updated";i:1584609839;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:420;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2161";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2244";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"FF:Test execution for Pending test cases till Sprint-6";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589552779;s:7:"updated";i:1589552784;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:421;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2154";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2243";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:80:"FF:Pending task of release documents review(gs,User's Manual,Installation Guide)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590145725;s:7:"updated";i:1590145730;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:422;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2159";s:6:"sprint";a:1:{i:0;s:263:"com.atlassian.greenhopper.service.sprint.Sprint@159ba68e[id=1868,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 5,startDate=2020-03-23T01:25:00.000Z,endDate=2020-04-10T17:25:00.000+01:00,completeDate=2020-04-10T16:46:27.963+01:00,sequence=1868,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2238";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:174:"PRE-FF:Test execution for MEIFMR-229 : Azure IoT Edge support for Visual Studio,Test execution for MEIF-1845,test develop/test execution for MEIF-1842 - MEL OMNI BSP(IPC127E)";s:11:"description";s:163:"Test execution for Azure IoT Edge Module Development and Debugging Using Visual Studio Code,Test execution for  MEIF-1845,test develop/test execution for MEIF-1842";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586521120;s:7:"updated";i:1586521125;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:423;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1930";s:6:"sprint";a:7:{i:0;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";i:2;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";i:3;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:4;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:5;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:6;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2231";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:36:"Apply for OSS approvals for MEIF 1.4";s:11:"description";s:270:"Apply for any OSS approvals required for MEIF 1.4, including third party libraries, SDKs or tools.

The core third party packages used by MEIF are listed on the following page:

[https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+External+Package+References]";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"relates to";a:3:{i:0;s:9:"MEIF-2389";i:1;s:9:"MEIF-2623";i:2;s:9:"MEIF-2521";}}}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580467221;s:7:"updated";i:1591248492;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:424;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2227";s:6:"sprint";a:4:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:2;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2228";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:46:"Engineering testing of MEL Omni 2.0 on IPC127E";s:11:"description";s:490:"Perform engineering testing of MEL Omni on the supported BSP (IPC127E) as follows:
 * Test all features of MEIF which can be easily testing (e.g. firmware updates, different clouds/hawkBit)
 * Make sure the documentation is valid for the particular BSP being tested.
 * Make sure the host-side tool contains correct templates for the supported BSPs.

 

Update: Please test all test  cases written here:https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+Engineering+Test+Plan";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:172800;s:9:"timespent";i:253800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586862765;s:7:"updated";i:1586862779;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:425;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2227";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:20:"MEIF 1.4 BSP support";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-247";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587037144;s:7:"updated";i:1587037144;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:426;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2226";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:41:"Test collectd/grafana support on MEL Omni";s:11:"description";s:229:"Collectd/Grafana are supported on MEL Flex but they also need to be supported on MEL Omni, if these generic packages are readily available in Omni. We need to verify this support and document it in the MEIF getting started guide.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:72000;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578321847;s:7:"updated";i:1579703629;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:427;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2225";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:45:"Test .deb package updates support on MEL Omni";s:11:"description";s:381:".deb package updates should be tested on MEL Omni using whatever suitable method we currently provide for packaging these updates (e.g. data update). If the MEL Omni recognizes .deb images in the archive, then our host-side tool should be updated to package .deb images for native upgrade support.  We need to verify this support and document it in the MEIF getting started guide.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:72000;s:9:"timespent";i:97200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1581340322;s:7:"updated";i:1581340336;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:428;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:6:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:2;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:4;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";i:5;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a0bee56[id=1985,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 8,startDate=2020-06-01T14:13:36.957+01:00,endDate=2020-06-12T06:13:00.000+01:00,completeDate=2020-06-15T03:58:53.369+01:00,sequence=1985,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2224";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"Fix MEIF documentation issues highlighted by Scott";s:11:"description";s:401:"Scott Morrison reviewed the MEIF user manual and he has provided a marked up version of the document containing his feedback. He has found several instances of sentences which need rephrasing, grammatical mistakes and problems within diagrams. Attached is the marked up MDF provided by Scott. Please review the whole MEIF user manual for similar mistakes, even besides the ones highlighted in the PDF.";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1921";}}s:2:"in";a:1:{s:12:"is Tested By";a:1:{i:0;s:9:"MEIF-2339";}}}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1591887722;s:7:"updated";i:1591944740;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:429;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3059ad22[id=1809,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3c,startDate=2019-10-15T09:10:34.063+01:00,endDate=2019-11-05T09:10:00.000Z,completeDate=2019-10-30T13:13:30.489Z,sequence=1739,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2212";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:55:"Submit the MEIF enabled drop for the Fichet Bauche eval";s:11:"description";s:31:"Prepare the drop and submit it.";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:13:"Is Blocked By";a:1:{i:0;s:8:"SB-13917";}s:16:"is child task of";a:1:{i:0;s:10:"MEIFMR-246";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:50400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1572438133;s:7:"updated";i:1573752905;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fb-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:430;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3059ad22[id=1809,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3c,startDate=2019-10-15T09:10:34.063+01:00,endDate=2019-11-05T09:10:00.000Z,completeDate=2019-10-30T13:13:30.489Z,sequence=1739,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2211";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"Support for firmware updates using MEIF on i.MX 8";s:11:"description";s:235:"Add support for firmware updates using MEIF on i.MX 8. Any new MHT templates required for this support should be generated under this ticket and all kinds of firmware updates should be thoroughly verified under this ticket, using MEIF.";s:10:"issuelinks";a:2:{s:2:"in";a:1:{s:16:"is child task of";a:1:{i:0;s:10:"MEIFMR-246";}}s:3:"out";a:1:{s:13:"is triggering";a:1:{i:0;s:8:"SB-13909";}}}s:20:"timeoriginalestimate";i:259200;s:9:"timespent";i:131400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1571930210;s:7:"updated";i:1573752894;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fb-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:431;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3059ad22[id=1809,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3c,startDate=2019-10-15T09:10:34.063+01:00,endDate=2019-11-05T09:10:00.000Z,completeDate=2019-10-30T13:13:30.489Z,sequence=1739,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2210";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"Basic build and Azure cloud verification on i.MX 8";s:11:"description";s:275:"Port MEIF to i.MX 8 and test all its basic features on the target (excluding firmware updates, separate ticket for that) and only including the Azure cloud (not Azure IoT Edge even and not any other cloud such as AWS). This is all that is needed for this Fichet Bauche eval.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:16:"is child task of";a:1:{i:0;s:10:"MEIFMR-246";}}}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:18000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1571221688;s:7:"updated";i:1573752908;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fb-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:432;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:245:"com.atlassian.greenhopper.service.sprint.Sprint@94d8eee[id=1808,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3d,startDate=2019-10-31T13:14:00.000Z,endDate=2019-11-21T13:14:00.000Z,completeDate=2019-11-25T11:28:15.902Z,sequence=1740,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2209";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:100:"Enable clean firmware update workflow on Industrial OS (persistent data, no manual config on reboot)";s:11:"description";s:266:"Update support for firmware updates so that support for a persistent data partition is added, as required by MEIF. And similarly the whole firmware update workflow should be smooth and shouldn't require any manual re-configuration on the user's part after an update.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:60;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1573565360;s:7:"updated";i:1573752919;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:433;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:245:"com.atlassian.greenhopper.service.sprint.Sprint@94d8eee[id=1808,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3d,startDate=2019-10-31T13:14:00.000Z,endDate=2019-11-21T13:14:00.000Z,completeDate=2019-11-25T11:28:15.902Z,sequence=1740,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2208";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"Enable swupdate support in Industrial OS and MHT";s:11:"description";s:521:"The latest version of Industrial OS does not support swupdate based firmware updates. Port swupdate to Industrial OS and enable firmware updates support on Industrial OS. This includes preparing a suitable template for use with the MHT tool (which can be kept external to the tool since Industrial OS isn't officially supported by MEIF, so it can be imported using the "Other" option).

This task doesn't include support for persistent data and no manual configuration on reboot – another ticket exists for that work.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:172860;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1573565389;s:7:"updated";i:1573752915;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:434;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2207";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:63:"Support for Advanced MEIF Features on x86 target on MEL Omni OS";s:11:"description";s:63:"Support for Advanced MEIF Features on x86 target on MEL Omni OS";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-245";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1576655628;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:435;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2202";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:51:"file meif.h should use relative or absolute paths. ";s:11:"description";s:1781:"meif.h is meant to be included by applications. it is meant to provide ease in developing applications such that a single file i.e meif.h should include every header file of meif framework.

however the current meif.h has include paths as following
{noformat}
// ISSUE: the following header relies on the -I gcc command to provide an absolute path to the folder where meif.h header file is placed. thus the purpose of meif.h is not fulfilled. so gcc -I/abs-path-to-meif-dot-h-folder/ must exist.

#include "iothubtransportmqtt.h" {noformat}
moreover the header files installed by cmake do not create any meif folder. they just copy the header files in /usr/local/include folder
{code:java}
-- Installing: /usr/local/include/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/vector.h-- Installing: /usr/local/include/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/tlsio.h-- Installing: /usr/local/include/framework/cloud/azure/c-utility/inc/azure_c_shared_utility/platform.h-- Installing: /usr/local/include/framework/cloud/hawkbit/hawkbit_api.h-- Installing: /usr/local/include/framework/cloud/hawkbit/hawkbit.h {code}
There should be a /usr/local/include/meif folder and within that all meif header files should be installed

Update:
 once the meif.h changes are done. you can remove the "/usr/local/include/framework/include" and "/usr/local/include/framework/env/linux" paths from meif/docker/meiffirmwareupdatemodule/CMakelists.txt and meif/docker/meifdevicecommandmodule/CMakelists.txt . You can possibly verify that modules build fine after the mentioned changes by following instructions here https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-BuildandPushMEIF'sAzureIoTEdgeModules";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:16:"is duplicated by";a:1:{i:0;s:9:"MEIF-2275";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1576235210;s:7:"updated";i:1576235215;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:436;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2201";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:24:"Doc updates improvements";s:11:"description";s:560:"during siemes sts eval work. i observed that we have poor documentation for application and data updates.
 # We need to explicitly mention the file names to be given to host security tool to package updates in GS guide chapter of MEL . e.g the kernel image name for MEL11.1.0 is fit.itb
 # We also need to specify the exact MEL version in our documentation.
 # Specify how to install the exact versions of NPM and NodeJS in the Azure instructions because a version mismatch (such as on Ubuntu 18.04.1) is causing problems for users (see EIS-39 for details).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582123912;s:7:"updated";i:1582810087;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:437;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:261:"com.atlassian.greenhopper.service.sprint.Sprint@4a6b5b97[id=1790,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3a,startDate=2019-08-19T10:39:55.702+01:00,endDate=2019-08-30T11:39:00.000+01:00,completeDate=2019-09-05T11:40:10.808+01:00,sequence=1734,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2199";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:40:"Shift from MEL Omni to Industrial OS 1.4";s:11:"description";s:197:"Setup and start using Industrial OS 1.4 instead of MEL Omni. The installation can be obtained from the following page:

[https://mentorgraphics.atlassian.net/wiki/spaces/SIEP/pages/764543000/1.4]";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:32400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1566799546;s:7:"updated";i:1573752904;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:438;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2198";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"include meif apt repository in the MEIF installer";s:11:"description";s:522:"A new repo has been added in MEIF which is as follows
[https://stash.alm.mentorg.com/projects/MEIF/repos/mel-apt/browse]

The MEIF installer needs to be updated to include this repository. The folder hierarchy after installation should be as follows
{code:java}
-meif
    -support
        -isar
            -industral-meif
            -mel-apt
                -meif
                    -conf
                    -db
                    -dists
                    -pool
        -yocto
{code}




 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:36000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1565274564;s:7:"updated";i:1573752918;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:439;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:4:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";i:2;s:261:"com.atlassian.greenhopper.service.sprint.Sprint@4a6b5b97[id=1790,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3a,startDate=2019-08-19T10:39:55.702+01:00,endDate=2019-08-30T11:39:00.000+01:00,completeDate=2019-09-05T11:40:10.808+01:00,sequence=1734,goal=]";i:3;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@eb5f252[id=1791,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3b,startDate=2019-09-05T11:41:58.919+01:00,endDate=2019-09-20T12:41:00.000+01:00,completeDate=2019-10-15T07:46:25.615+01:00,sequence=1736,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2195";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:85:"Unsafe code in MEIF (relating to use of string APIs, malloc and misuse of other APIs)";s:11:"description";s:601:"Many calls to malloc() are left unchecked
     
MEIF is calling several system functions that may be interrupted (EINTR) and do no check for errno. For instance nanosleep may be interrupted but it provides you with the time remaining so you may just call nanosleep again

While some functions do use strncpy instead of strcpy, they fail to check its return value and would happily return a non-zero terminated string (which will most likely the caller to crash). Worse, some copy data to a string allocated on the stack without any bound checks (making them a target of choice for ROP attacks).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:144000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1571119948;s:7:"updated";i:1581344032;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:440;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2280";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2193";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:36:"QA: Tools: Validation of SA IoT bugs";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:9000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589284318;s:7:"updated";i:1589284341;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:2:"bv";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:441;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2192";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:42:"QA: Nucleus: Bug verification Test cycle 1";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1575568780;s:7:"updated";i:1580704594;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:3:"nuc";i:1;s:2:"qa";i:2;s:5:"tools";i:3;s:2:"bv";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:442;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2280";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2191";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:38:"QA: Tools: Test cycle 2 SA IoT support";s:11:"description";s:568:"Execute test cases in following test plan:
 * *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Test Plan for Post-CF Testing
 * *Platforms*
 ** AWS - IPC 127E - Debian 10 (64 bit)
 ** AWS - IPC 127E - Windows 10 (64 bit)
 ** Azure - IPC 127E - Debian 10 (64 bit)
 ** Azure - IPC 127E - Windows 10 (64 bit)
 * *Suite*: Sourcery Analyzer
 * *Build* - RC1

Make sure to test all the features mentioned at [QA Checklist for QA Cycle 2 of MEIF 1.4.0|https://confluence.alm.mentorg.com/display/QA/QA+Checklist+for+QA+Cycle+2+of+MEIF+1.4.0].";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594814012;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac2";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:443;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2280";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@15f5a237[id=1867,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 4,startDate=2020-03-02T10:36:02.902Z,endDate=2020-03-21T10:34:00.000Z,completeDate=2020-03-20T13:24:31.728Z,sequence=1867,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2190";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:45:"QA: Tools: Test cycle 1 SA IoT support on AWS";s:11:"description";s:261:"* *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Sourcery Analyzer IoT
 * *Platforms*
 ** AWS - IPC 127E - Debian 10 (79)
 ** AWS - IPC 127E - Ubuntu 18 (37)
 ** AWS - IPC 127E - Windows 10 (41)
 ** -Azure - IPC 127E - Debian 10 (81)-";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:172800;s:9:"timespent";i:266400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584680616;s:7:"updated";i:1586433195;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";i:3;s:4:"res4";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:444;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2280";s:6:"sprint";a:1:{i:0;s:310:"com.atlassian.greenhopper.service.sprint.Sprint@1e92b7f0[id=1865,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 2,startDate=2020-01-20T12:39:12.352Z,endDate=2020-02-07T12:39:00.000Z,completeDate=2020-02-07T14:12:42.997Z,sequence=1865,goal=Finalize Test Plan. 
Develop test cases for new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2189";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:39:"QA: Tools: Test planning SA IoT support";s:11:"description";s:160:"Confluence test plan: [SAMR-338: Update Java side AWS/Azure SDKs|https://confluence.alm.mentorg.com/display/QA/SAMR-338%3A+Update+Java+side+AWS+and+Azure+SDKs]";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:29700;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1581061187;s:7:"updated";i:1581331063;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:2:"tp";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:445;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2188";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:69:"QA: Tools: Test cycle 2 of installer, licensing and packaging testing";s:11:"description";s:506:"Execute only high importance test cases in following test plan.
 * *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Test Plan for Post-CF Testing
 * *Platforms*
 ** Debian 10 - 64bit
 ** Windows 10 - 64bit
 * *Suites*
 ** Installer
 ** Licensing
 ** Product Release Packaging
 * *Build* - RC1

Make sure to test all the features mentioned at [QA Checklist for QA Cycle 2 of MEIF 1.4.0|https://confluence.alm.mentorg.com/display/QA/QA+Checklist+for+QA+Cycle+2+of+MEIF+1.4.0].";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594814855;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac2";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:446;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2187";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:86:"QA: Tools: Test cycle 1 of installer, licensing and packaging testing on primary hosts";s:11:"description";s:370:"* *Test Project* - Internet of Things
 * *Test Plan* - MEIF 1.4.0 - Installer, Licensing, and Packaging
[https://testlink.alm.mentorg.com/lnl.php?apikey=fc5dd45df7f6745ec9fefb6404b0cf6bd7358c6b440478e3f0c655f2fe3d0784&tproject_id=458205&tplan_id=740209&type=results_matrix]
 * *Platform*:
** Debian 10 - 64bit (137) 
** Windows 10 - 64bit (134)

           ";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2313";}}}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:125700;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582635670;s:7:"updated";i:1582896733;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:2:"qa";i:1;s:4:"qac1";i:2;s:5:"tools";i:3;s:4:"res4";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:447;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2186";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:89:"QA: Tools: Test development of regression testing (installer and MEL ADE based debugging)";s:11:"description";s:77:"This task includes test development effort for installer and MEL ADE support.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:46800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582112190;s:7:"updated";i:1582792872;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:2:"td";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:448;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2185";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:86:"QA: Tools: Test planning of regression testing (installer and MEL ADE based debugging)";s:11:"description";s:145:"Confluence test plan: https://confluence.alm.mentorg.com/display/QA/MEIFMR-225%3A+Support+for+basic+MEIF+features+on+MEL+Omni+OS+-+Tools+Support";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:68400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582112197;s:7:"updated";i:1582896334;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:2:"tp";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:449;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2167";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:33:"QA:MEL:MEIF-1.4-Linux QA Planning";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-247";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1589468824;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:450;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2166";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:57:"QA:MEL:BSP Feature Sanity test with MEIF Integrated Build";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2260";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-247";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1590151566;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:451;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2164";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:76:"QA:MEL:Revisit MEIF packaging to make it suitable for all OSes and use-cases";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:9:"MEIFMR-55";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1573752919;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:452;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2163";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:23:"QA:MEL:Device HTTPS API";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-172";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1573752906;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:453;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2162";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:63:"QA:MEL:Bug fixes, improvements and housekeeping of MEIF product";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2260";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-174";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1586529881;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:454;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2161";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:64:"QA:MEL:Support for basic MEIF features on X86 target on MEL Omni";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2260";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-225";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1591979538;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:455;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2160";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:41:"QA:MEL:Shared MEIF Host Tool installation";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2260";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-228";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1574430929;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:456;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2159";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:37:"QA:MEL:Azure IoT Edge support in MEIF";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2260";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-229";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1583137668;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:457;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2157";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:40:"QA:MEL:Support new firmware update types";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-230";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1573752906;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:458;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2156";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:63:"QA:MEL:Utilizing Mendix for cloud independent demo applications";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2260";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-232";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1574430866;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:459;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2155";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:66:"QA:MEL:MEIF needs to support concurrent encryption and compression";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2260";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-234";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1574335578;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:460;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2154";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:31:"QA:MEL:MEIF 1.4.0 Documentation";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2260";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-240";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1593793337;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:461;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2153";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:87:"QA:MEL:App Note on utilizing Mendix front-end application for use with MEIF 1.3 release";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2260";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-235";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1574427853;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:462;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2152";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:68:"QA: MEL: Review Configurability & Scalability of MEIF Implementation";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2260";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-236";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1574427663;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:463;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2151";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:53:"QA:MEL:Update AWS and Azure SDK to later LTS versions";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2260";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-241";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1579609180;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:464;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2150";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:28:"QA:MEL:Device MQTT Interface";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-239";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1573752907;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:465;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2149";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:47:"QA:MEL:Provide Alarm & Events Service on Device";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-238";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1573752913;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"mel";i:1;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:466;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2147";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:52:"QA: MEL: Simplify the MEIF default demo applications";s:11:"description";s:309:"* {color:#000000}Successful build testing of all samples from all SDKs on both Lin and Windows hosts{color}
 * {color:#000000}Runtime verification of 5 samples per cloud per host OS = 5 * 3 * 2 = 30 {color}{color:#000000}executions {color}
 * {color:#000000}Verification of new default demo for Azure{color}";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-233";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1573752903;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:467;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2146";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:29:"QA: Tools: Regression testing";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-225";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1592909586;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:2:"qa";i:1;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:468;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2128";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2135";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:86:"QA: Tools: Test cycle 2 for bugs fixes, improvements and housekeeping of MEIF product.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1593537448;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:4:"qac2";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:469;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2128";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2134";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:88:"QA: Nucleus: Test cycle 2 for bugs fixes, improvements and housekeeping of MEIF product.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:60;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1575271946;s:7:"updated";i:1580704720;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:3:"nuc";i:1;s:2:"qa";i:2;s:3:"tc2";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:470;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2128";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2133";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:86:"QA: Tools: Test cycle 1 for bugs fixes, improvements and housekeeping of MEIF product.";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2581";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589974641;s:7:"updated";i:1589974641;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:2:"bv";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:471;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2128";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2132";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:88:"QA: Nucleus: Test cycle 1 for bugs fixes, improvements and housekeeping of MEIF product.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:432000;s:9:"timespent";i:60;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1575271433;s:7:"updated";i:1580704728;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:3:"nuc";i:1;s:2:"qa";i:2;s:3:"tc1";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:472;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2128";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2131";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:90:"QA: Tools: Test development for bugs fixes, improvements and housekeeping of MEIF product.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:11400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582266248;s:7:"updated";i:1582881843;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:2:"qa";i:1;s:2:"td";i:2;s:5:"tools";i:3;s:4:"res4";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:473;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2128";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2130";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:92:"QA: Nucleus: Test development for bugs fixes, improvements and housekeeping of MEIF product.";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:60;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1575271825;s:7:"updated";i:1580704737;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:3:"nuc";i:1;s:2:"qa";i:2;s:2:"td";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:474;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2128";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2129";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:87:"QA: Tools: Test planning for bugs fixes, improvements and housekeeping of MEIF product.";s:11:"description";s:138:"Confluence Test Plan: [https://confluence.alm.mentorg.com/display/QA/MEIFMR-174+-+Bug+fixes%2C+improvements+and+housekeeping+of+MEIF+1.4]";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:18600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582266224;s:7:"updated";i:1582896334;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:2:"tp";i:3;s:4:"res4";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:475;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2128";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:68:"QA: Tools: Bug fixes, improvements and housekeeping of MEIF product.";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-174";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1589974122;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:2:"qa";i:1;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:476;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2151";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2090";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:105:"RC:Test execution for MEIFMR-241 : Update AWS and Azure SDK to later LTS versions - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594013809;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:477;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2151";s:6:"sprint";a:1:{i:0;s:310:"com.atlassian.greenhopper.service.sprint.Sprint@1e92b7f0[id=1865,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 2,startDate=2020-01-20T12:39:12.352Z,endDate=2020-02-07T12:39:00.000Z,completeDate=2020-02-07T14:12:42.997Z,sequence=1865,goal=Finalize Test Plan. 
Develop test cases for new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2087";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:109:"PRE-FF:Test execution for MEIFMR-241 : Update AWS and Azure SDK to later LTS versions - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580826992;s:7:"updated";i:1580826997;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:478;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2161";s:6:"sprint";a:2:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@15f5a237[id=1867,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 4,startDate=2020-03-02T10:36:02.902Z,endDate=2020-03-21T10:34:00.000Z,completeDate=2020-03-20T13:24:31.728Z,sequence=1867,goal=]";i:1;s:263:"com.atlassian.greenhopper.service.sprint.Sprint@159ba68e[id=1868,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 5,startDate=2020-03-23T01:25:00.000Z,endDate=2020-04-10T17:25:00.000+01:00,completeDate=2020-04-10T16:46:27.963+01:00,sequence=1868,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2085";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:93:"PRE-FF:Test execution for MEIF-2225,MEIF-2316,MEIF-2331 and MEIF-2332 - MEL OMNI BSP(IPC127E)";s:11:"description";s:128:"Test development and Test execution required for MEIF-2225
No network build (MEIF-2316)
Need to verify MEIF-2331 and MEIF-2332";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586268788;s:7:"updated";i:1586268793;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:479;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2151";s:6:"sprint";a:1:{i:0;s:351:"com.atlassian.greenhopper.service.sprint.Sprint@5d32006c[id=1864,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 1,startDate=2019-12-30T07:43:54.899Z,endDate=2020-01-17T07:43:00.000Z,completeDate=2020-01-17T14:32:34.412Z,sequence=1864,goal=MEIF QA Test Plan Development.
Complete Test Environment Setup. 
Test Development of new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2084";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:87:"PRE-FF:Test Development for MEIFMR-241 : Update AWS and Azure SDK to later LTS versions";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578887641;s:7:"updated";i:1589458233;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:480;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2154";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2083";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:59:"RC:Test execution for MEIFMR-240 : MEIF 1.4.0 Documentation";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594013809;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:481;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2154";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2082";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:63:"PRE-FF:Test execution for MEIFMR-240 : MEIF 1.4.0 Documentation";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582890108;s:7:"updated";i:1582890113;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:9:"pre-ff-qa";i:4;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:482;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2154";s:6:"sprint";a:1:{i:0;s:310:"com.atlassian.greenhopper.service.sprint.Sprint@1e92b7f0[id=1865,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 2,startDate=2020-01-20T12:39:12.352Z,endDate=2020-02-07T12:39:00.000Z,completeDate=2020-02-07T14:12:42.997Z,sequence=1865,goal=Finalize Test Plan. 
Develop test cases for new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2081";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:65:"PRE-FF:Test Development for MEIFMR-240 : MEIF 1.4.0 Documentation";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1581078608;s:7:"updated";i:1581078719;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:9:"pre-ff-qa";i:4;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:483;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2152";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2080";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:118:"RC:Test execution for MEIFMR-236 : Review Configurability & Scalability of MEIF Implementation - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594013809;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:484;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2153";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2077";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:130:"RC:Test execution for MEIFMR-235 : App Note on utilizing Mendix front-end application for use with MEIF 1.3 release - MEL OMNI BSP";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594013809;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:485;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2155";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2075";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:118:"RC:Test execution for MEIFMR-234 : MEIF needs to support concurrent encryption and compression - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594013809;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:486;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2156";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2069";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:115:"RC:Test execution for MEIFMR-232 : Utilizing Mendix for cloud independent demo applications - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594013809;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:487;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2159";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2063";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:89:"RC:Test execution for MEIFMR-229 : Azure IoT Edge support in MEIF - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594013809;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:488;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2160";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2060";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:93:"RC:Test execution for MEIFMR-228 : Shared MEIF Host Tool installation - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594013809;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:489;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2161";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2057";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:78:"RC:Test execution for MEIFMR-225 : Support x86 Target with MEIF on MEL Omni OS";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594013809;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:490;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2162";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2056";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:115:"RC:Test execution for MEIFMR-174 : Bug fixes, improvements and housekeeping of MEIF product - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594013809;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:491;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2166";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2044";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:66:"RC:MEL OMNI BSP(IPC127E) sanity testing with MEIF Integrated Build";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594013809;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:2:"qa";i:3;s:5:"rc-qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:492;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2166";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2019";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:58:"FF:Test Automation for the backlogs of Sprint-6(MEIF-1980)";s:11:"description";s:2298:" 

Below are the test cases from Sprint-6 backlogs(MEIF-1980) :
 --------------------------------------------------------------------
||Feature Name||Testcases||
|Build Images|IoT-10845:Build gives warning on not providing AWS device certificates in path specified|
|Build Images|IoT-10852: Build signed and encrypted swupdate image with custom keys|
|Bug fixes, improvements and housekeeping of MEIF 1.4|IoT-10914:Verify execution of multiple aws-agent at same time|
|Bug fixes, improvements and housekeeping of MEIF 1.4|IoT-10923:Verify execution of multiple azure-agent at same time|
|Bug fixes, improvements and housekeeping of MEIF 1.4|IoT-10915 : Verify Build for Azure cloud with deleted AWS & Mindspere options from local.conf|
|Bug fixes, improvements and housekeeping of MEIF 1.4|IoT-10917:Verify Build for AWS cloud with deleted Azure & Mindspere options from local.conf|
|Bug fixes, improvements and housekeeping of MEIF 1.4|IoT-10918:Verify Build for Mindspere cloud with deleted Azure & AWS options from local.conf|
|Bug fixes, improvements and housekeeping of MEIF 1.4|IoT-10920:Verify Building CLOUD set to INVALID Keyword on MEL should generate a suitable error|
|Bug fixes, improvements and housekeeping of MEIF 1.4|IoT-10921:Check meif headers file location|
|Bug fixes, improvements and housekeeping of MEIF 1.4|IoT-10939:Verify /usr/bin/traceiot.sh file shuold exist on target|
|Configurability & Scalability test|IoT-10867:Building MEIF without swupdate/uboot support|
|Configurability & Scalability test|IoT-10874:AWS agent run automatically on system reboot|
|Configurability & Scalability test|IoT-10875:Azure agent should auto start after reboot|
|Configurability & Scalability test|IoT-10876:Mindsphere agent should auto start after reboot|
|Configurability & Scalability test|IoT-10877:Swupdate service should auto start after reboot|
|Configurability & Scalability test|IoT-10878:Docker service should auto start after reboot|
|collectd/influxdb/grafana|IoT-10487 : Verify collectd service as systemd on target|
|Azure IoT Edge Testing|IoT-10807:Verify Iot Edge service|
|Azure IoT Edge Testing|IoT-10808:Stop Iot edge service|
|Azure IoT Edge Testing|IoT-10809:Restart IoT edge module|
|Azure IoT Edge Testing|IoT-10810:List Iot edge modules|";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589201347;s:7:"updated";i:1589268699;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:493;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2422";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2018";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:96:"FF:Test execution : Full Cycle QA for MEIFMR-247,MEIFMR-225,MEIFMR-229,MEIFMR-232 and MEIFMR-240";s:11:"description";s:363:"--Need to verify MELMRs listed in the JIRA title
-- Need to verify Docker Compose Stack,https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-DockerComposeStack
--MEIF cloud setup, https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-MEIFCloudSetup";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588257478;s:7:"updated";i:1588257483;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:494;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2480";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2016";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"FF:Plan,Estimation and test developmets for MEIFMR-252";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589976306;s:7:"updated";i:1589976314;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:495;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2166";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2015";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:62:"FF:Verifications of the fixed JIRAs and regression of the same";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589869885;s:7:"updated";i:1589869904;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:496;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2260";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2007";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:120:"FF:Install,build,boot combinations on Secondary hosts(Ubuntu 18.04,Ubuntu 20.04 and RHEL7.7) following latest test steps";s:11:"description";s:290:"--Verify all the Install,build,boot combinations mentioned in [https://confluence.alm.mentorg.com/pages/viewpage.action?pageId=184985387]

--Verify all the Install,build,boot combinations  on Secondary hosts(Ubuntu 18.04,Ubuntu 20.04 and RHEL7.7) as per the latest updated steps of gs.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590149956;s:7:"updated";i:1590149972;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:497;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2260";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2006";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:101:"FF:Install,build,boot combinations on Primary hosts(debian 10+windows 10) following latest test steps";s:11:"description";s:271:"--Verify all the Install,build,boot combinations mentioned in [https://confluence.alm.mentorg.com/pages/viewpage.action?pageId=184985387]

--Verify all the Install,build,boot combinations  on Primary hosts(debian 10+windows 10) as per the latest updated steps of gs.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590146528;s:7:"updated";i:1590146552;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:498;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2162";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2003";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:71:"PRE-FF:Test execution for the Sprint-5 backlogs - MEL OMNI BSP(IPC127E)";s:11:"description";s:1682:"*Below Test cases are from Sprint-5 backlog(**MEIF-1978* *):*

[https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10913]

[https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10922]

[https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10924|https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10913]

[https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10925|https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10913]

[https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10933]

[https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10939|https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10913]

[https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10940]

[https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10941|https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10913]

[https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10942|https://testlink.alm.mentorg.com/linkto.php?tprojectPrefix=IoT&item=testcase&id=IoT-10913]

 

*Test Development & Execution for Azure as a Downstream Device*
 * Verify Azure device is getting connected to cloud through azure iot hub target device
 * Verify Azure service is running when IOT hub target is up & running.
 * Verify Azure service is not getting Up, when iot hub target is not running.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588089792;s:7:"updated";i:1588267072;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:499;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2152";s:6:"sprint";a:1:{i:0;s:263:"com.atlassian.greenhopper.service.sprint.Sprint@159ba68e[id=1868,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 5,startDate=2020-03-23T01:25:00.000Z,endDate=2020-04-10T17:25:00.000+01:00,completeDate=2020-04-10T16:46:27.963+01:00,sequence=1868,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2002";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:122:"PRE-FF:Test execution for MEIFMR-236 : Review Configurability & Scalability of MEIF Implementation - MEL OMNI BSP(IPC127E)";s:11:"description";s:152:"Test development/execution for MEIF-2327 and MEIF-2317.
Test development/execution for other use cases of Review Configurability & Scalability feature.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586526867;s:7:"updated";i:1586526874;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:500;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2161";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2001";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:68:"PRE-FF:Test execution for MindSphere Support - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588265590;s:7:"updated";i:1588265596;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:501;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2161";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-2000";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:78:"PRE-FF:Test execution for MEIF ADEs and SA sanity test - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588063199;s:7:"updated";i:1588063225;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:502;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2153";s:6:"sprint";a:1:{i:0;s:263:"com.atlassian.greenhopper.service.sprint.Sprint@159ba68e[id=1868,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 5,startDate=2020-03-23T01:25:00.000Z,endDate=2020-04-10T17:25:00.000+01:00,completeDate=2020-04-10T16:46:27.963+01:00,sequence=1868,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1999";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:134:"PRE-FF:Test execution for MEIFMR-235 : App Note on utilizing Mendix front-end application for use with MEIF 1.3 release - MEL OMNI BSP";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586164163;s:7:"updated";i:1586164169;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:503;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2155";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1997";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:122:"PRE-FF:Test execution for MEIFMR-234 : MEIF needs to support concurrent encryption and compression - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1581681082;s:7:"updated";i:1581681088;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:504;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2156";s:6:"sprint";a:1:{i:0;s:263:"com.atlassian.greenhopper.service.sprint.Sprint@159ba68e[id=1868,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 5,startDate=2020-03-23T01:25:00.000Z,endDate=2020-04-10T17:25:00.000+01:00,completeDate=2020-04-10T16:46:27.963+01:00,sequence=1868,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1991";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:119:"PRE-FF:Test execution for MEIFMR-232 : Utilizing Mendix for cloud independent demo applications - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:172800;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586410266;s:7:"updated";i:1586429976;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:505;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2159";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1985";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:93:"PRE-FF:Test execution for MEIFMR-229 : Azure IoT Edge support in MEIF - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:187200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582170763;s:7:"updated";i:1582889900;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:506;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2151";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1983";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:129:"PRE-FF:Test execution for MEIFMR-241 : Update AWS and Azure SDK to later LTS versions(OSS approvals and remove azure.c demo file)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582891422;s:7:"updated";i:1582891426;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:507;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2160";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1982";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:97:"PRE-FF:Test execution for MEIFMR-228 : Shared MEIF Host Tool installation - MEL OMNI BSP(IPC127E)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582890336;s:7:"updated";i:1582890343;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:508;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2166";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@62a83fb8[id=1882,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 6,startDate=2020-04-13T04:04:34.374+01:00,endDate=2020-05-01T18:04:00.000+01:00,completeDate=2020-05-04T06:02:33.470+01:00,sequence=1882,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1980";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:116:"PRE-FF:Automation for scalability tests of swupdate through hawkbit/AWS and other feasible test cases(Omni and MEIF)";s:11:"description";s:1560:"*Hawkbit Integration Test cases:*
---------------------
IoT-10885: Verify signed and encrypted compound image update using Hawkbit web UI
IoT-10887: Verify rollback feature for compound update
IoT-10888: Verify target reboot(hard/soft) successfully after swupdate
IoT-10893: Swupdate for multiple times using Hawkbit web UI
IoT-10894: Verify swupdate using Hawkbit web UI & Azure portal at same time
IoT-10899: Disable/Enable Ethernet connection while swupdate is in progress
IoT-10907: Swupdate on multiple devices using Hawkbit web


*AWS Integration Test cases:*
-------------------
IoT-10712: Compound update for signed and encrypted secure image
IoT-10903: Verify rollback feature for compound update
IoT-10897: Verify Multiple time firmware update
IoT-10898:  Verify swupdate using AWS portal & Hawkbit web UI at same time
IoT-10901: Verify swupdate progress by disconnecting/disable the Ethernet connection inbetween
IoT-10909: Verify Swupdate for multiple devices at same time
IoT-458: Reboot target after applying update to verify booted partition

*Azure Integration Test cases:*
-------------------
IoT-10902:Verify rollback feature for compound update
IoT-10689: Sending Signed and Encrypted firmware to Device by invoking FirmwareUpdate method
IoT-10895:Verify Multiple time firmware update
IoT-10896:Verify swupdate using Azure portal & Hawkbit web UI at same time
IoT-10900:Verify swupdate progress by disconnecting/disable the Ethernet connection inbetween
IoT-10908:Verify Swupdate for multiple devices at same time";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:201600;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588264075;s:7:"updated";i:1589887971;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:509;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2161";s:6:"sprint";a:1:{i:0;s:310:"com.atlassian.greenhopper.service.sprint.Sprint@1e92b7f0[id=1865,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 2,startDate=2020-01-20T12:39:12.352Z,endDate=2020-02-07T12:39:00.000Z,completeDate=2020-02-07T14:12:42.997Z,sequence=1865,goal=Finalize Test Plan. 
Develop test cases for new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1979";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:152:"PRE-FF:Test execution for MEIFMR-225 :  Support for basic MEIF features on X86 target on MEL Omni(collectd/grafana support and meif with azure iot edge)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580827025;s:7:"updated";i:1580827030;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:510;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2162";s:6:"sprint";a:1:{i:0;s:263:"com.atlassian.greenhopper.service.sprint.Sprint@159ba68e[id=1868,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 5,startDate=2020-03-23T01:25:00.000Z,endDate=2020-04-10T17:25:00.000+01:00,completeDate=2020-04-10T16:46:27.963+01:00,sequence=1868,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1978";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:124:"PRE-FF:Test execution Edge and Bug fixes, improvements and housekeeping Features and of MEIF product - MEL OMNI BSP(IPC127E)";s:11:"description";s:174:"Test development and test execution for MEIF-2319,MEIF-1692 and MEIF-2334
Test development and test execution for other use cases of Bug fixes and housekeeping 1.4 feature
";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586526887;s:7:"updated";i:1586527220;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:511;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2161";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@5a87bda9[id=1866,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 3,startDate=2020-02-09T18:31:00.000Z,endDate=2020-02-28T18:29:00.000Z,completeDate=2020-02-28T13:14:10.288Z,sequence=1866,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1967";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:96:"PRE-FF:Test execution for MEIFMR-225 : Support for basic MEIF features on X86 target on MEL Omni";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:144000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582891347;s:7:"updated";i:1582891354;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:512;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2166";s:6:"sprint";a:1:{i:0;s:351:"com.atlassian.greenhopper.service.sprint.Sprint@5d32006c[id=1864,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 1,startDate=2019-12-30T07:43:54.899Z,endDate=2020-01-17T07:43:00.000Z,completeDate=2020-01-17T14:32:34.412Z,sequence=1864,goal=MEIF QA Test Plan Development.
Complete Test Environment Setup. 
Test Development of new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1966";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:70:"PRE-FF:MEL OMNI BSP(IPC127E) sanity testing with MEIF Integrated Build";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579262993;s:7:"updated";i:1579263258;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:513;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2166";s:6:"sprint";a:1:{i:0;s:310:"com.atlassian.greenhopper.service.sprint.Sprint@1e92b7f0[id=1865,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 2,startDate=2020-01-20T12:39:12.352Z,endDate=2020-02-07T12:39:00.000Z,completeDate=2020-02-07T14:12:42.997Z,sequence=1865,goal=Finalize Test Plan. 
Develop test cases for new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1965";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:86:"PRE-FF:Automation setup/test for Installation and Build of the Products(Omni and MEIF)";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579751626;s:7:"updated";i:1580975864;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:514;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1963";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:34:"MEIF-1.4-Linux QA: RC QA Execution";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1573751832;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:515;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1962";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:34:"MEIF-1.4-Linux QA: FF QA Execution";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1573751835;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:516;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1961";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:38:"MEIF-1.4-Linux QA: Pre-FF QA Execution";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1590151566;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:517;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1955";s:6:"sprint";a:1:{i:0;s:231:"com.atlassian.greenhopper.service.sprint.Sprint@40a00eab[id=2015,rapidViewId=263,state=FUTURE,name=MEIF 1.4 QA - 2020 Sprint 12,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2016,goal=Starts: 17th Aug  Till 4th Sept]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1959";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:25:"QA: Release notes review.";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:5:"Tests";a:1:{i:0;s:9:"MEIF-1920";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1593537723;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:3:"doc";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:518;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1955";s:6:"sprint";a:2:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";i:1;s:280:"com.atlassian.greenhopper.service.sprint.Sprint@764655eb[id=2014,rapidViewId=263,state=ACTIVE,name=MEIF 1.4 QA - 2020 Sprint 11,startDate=2020-07-27T04:19:00.000+01:00,endDate=2020-08-14T19:19:00.000+01:00,completeDate=<null>,sequence=2015,goal=Starts: 27th  July  Till  14th Aug]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1958";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:30:"QA: Installation guide review.";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:5:"Tests";a:1:{i:0;s:9:"MEIF-1922";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:5400;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595329896;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:3:"doc";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:519;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1955";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@15f5a237[id=1867,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 4,startDate=2020-03-02T10:36:02.902Z,endDate=2020-03-21T10:34:00.000Z,completeDate=2020-03-20T13:24:31.728Z,sequence=1867,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1957";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"QA: Tools: Test development for MEIF 1.4.0 documentation";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:19200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584691643;s:7:"updated";i:1584691649;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:2:"td";i:2;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:520;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1955";s:6:"sprint";a:1:{i:0;s:253:"com.atlassian.greenhopper.service.sprint.Sprint@15f5a237[id=1867,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 4,startDate=2020-03-02T10:36:02.902Z,endDate=2020-03-21T10:34:00.000Z,completeDate=2020-03-20T13:24:31.728Z,sequence=1867,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1956";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"QA: Tools: Test planning for MEIF 1.4.0 documentation";s:11:"description";s:109:"Confluence test plan: [https://confluence.alm.mentorg.com/display/QA/MEIFMR-240%3A+MEIF+1.4.0+Documentation]";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584613247;s:7:"updated";i:1584613318;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:2:"tp";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:521;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1955";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:35:"QA: Tools: MEIF 1.4.0 Documentation";s:11:"description";s:308:"Following will be covered (PDF and HTML if applicable).
 * Installation Instructions
 * Release Highlights and Release Notes
 * OSS documentation
 * MEIF GSG*
 * MEIF Reference Manual*

*Review of MEIF user guide and reference manual will cover sections of MEIF Host Tool and MEL ADE based debugging.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-240";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594991900;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:2:"qa";i:1;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:522;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2152";s:6:"sprint";a:1:{i:0;s:351:"com.atlassian.greenhopper.service.sprint.Sprint@5d32006c[id=1864,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 1,startDate=2019-12-30T07:43:54.899Z,endDate=2020-01-17T07:43:00.000Z,completeDate=2020-01-17T14:32:34.412Z,sequence=1864,goal=MEIF QA Test Plan Development.
Complete Test Environment Setup. 
Test Development of new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1953";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:100:"PRE-FF:Test Development for MEIFMR-236 : Review Configurability & Scalability of MEIF Implementation";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579264145;s:7:"updated";i:1582604117;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:9:"pre-ff-qa";i:4;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:523;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2153";s:6:"sprint";a:1:{i:0;s:351:"com.atlassian.greenhopper.service.sprint.Sprint@5d32006c[id=1864,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 1,startDate=2019-12-30T07:43:54.899Z,endDate=2020-01-17T07:43:00.000Z,completeDate=2020-01-17T14:32:34.412Z,sequence=1864,goal=MEIF QA Test Plan Development.
Complete Test Environment Setup. 
Test Development of new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1952";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:121:"PRE-FF:Test Development for MEIFMR-235 : App Note on utilizing Mendix front-end application for use with MEIF 1.3 release";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578398350;s:7:"updated";i:1579081189;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:9:"pre-ff-qa";i:4;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:524;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2155";s:6:"sprint";a:1:{i:0;s:351:"com.atlassian.greenhopper.service.sprint.Sprint@5d32006c[id=1864,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 1,startDate=2019-12-30T07:43:54.899Z,endDate=2020-01-17T07:43:00.000Z,completeDate=2020-01-17T14:32:34.412Z,sequence=1864,goal=MEIF QA Test Plan Development.
Complete Test Environment Setup. 
Test Development of new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1951";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:100:"PRE-FF:Test Development for MEIFMR-234 : MEIF needs to support concurrent encryption and compression";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1578045149;s:7:"updated";i:1580753598;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:9:"pre-ff-qa";i:4;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:525;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2156";s:6:"sprint";a:1:{i:0;s:351:"com.atlassian.greenhopper.service.sprint.Sprint@5d32006c[id=1864,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 1,startDate=2019-12-30T07:43:54.899Z,endDate=2020-01-17T07:43:00.000Z,completeDate=2020-01-17T14:32:34.412Z,sequence=1864,goal=MEIF QA Test Plan Development.
Complete Test Environment Setup. 
Test Development of new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1949";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:97:"PRE-FF:Test Development for MEIFMR-232 : Utilizing Mendix for cloud independent demo applications";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578483122;s:7:"updated";i:1579081134;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:9:"pre-ff-qa";i:4;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:526;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2159";s:6:"sprint";a:1:{i:0;s:310:"com.atlassian.greenhopper.service.sprint.Sprint@1e92b7f0[id=1865,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 2,startDate=2020-01-20T12:39:12.352Z,endDate=2020-02-07T12:39:00.000Z,completeDate=2020-02-07T14:12:42.997Z,sequence=1865,goal=Finalize Test Plan. 
Develop test cases for new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1947";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:71:"PRE-FF:Test Development for MEIFMR-229 : Azure IoT Edge support in MEIF";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580826847;s:7:"updated";i:1581078734;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:9:"pre-ff-qa";i:4;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:527;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2160";s:6:"sprint";a:1:{i:0;s:351:"com.atlassian.greenhopper.service.sprint.Sprint@5d32006c[id=1864,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 1,startDate=2019-12-30T07:43:54.899Z,endDate=2020-01-17T07:43:00.000Z,completeDate=2020-01-17T14:32:34.412Z,sequence=1864,goal=MEIF QA Test Plan Development.
Complete Test Environment Setup. 
Test Development of new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1946";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:75:"PRE-FF:Test Development for MEIFMR-228 : Shared MEIF Host Tool installation";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578310272;s:7:"updated";i:1579262476;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:9:"pre-ff-qa";i:4;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:528;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2161";s:6:"sprint";a:1:{i:0;s:351:"com.atlassian.greenhopper.service.sprint.Sprint@5d32006c[id=1864,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 1,startDate=2019-12-30T07:43:54.899Z,endDate=2020-01-17T07:43:00.000Z,completeDate=2020-01-17T14:32:34.412Z,sequence=1864,goal=MEIF QA Test Plan Development.
Complete Test Environment Setup. 
Test Development of new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1945";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:98:"PRE-FF:Test Development for MEIFMR-225 : Support for basic MEIF features on X86 target on MEL Omni";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579264152;s:7:"updated";i:1579270913;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:529;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2162";s:6:"sprint";a:1:{i:0;s:310:"com.atlassian.greenhopper.service.sprint.Sprint@1e92b7f0[id=1865,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 2,startDate=2020-01-20T12:39:12.352Z,endDate=2020-02-07T12:39:00.000Z,completeDate=2020-02-07T14:12:42.997Z,sequence=1865,goal=Finalize Test Plan. 
Develop test cases for new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1944";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:97:"PRE-FF:Test Development for MEIFMR-174 : Bug fixes, improvements and housekeeping of MEIF product";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:144000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580721959;s:7:"updated";i:1580786604;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:9:"pre-ff-qa";i:4;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:530;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2167";s:6:"sprint";a:1:{i:0;s:351:"com.atlassian.greenhopper.service.sprint.Sprint@5d32006c[id=1864,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 1,startDate=2019-12-30T07:43:54.899Z,endDate=2020-01-17T07:43:00.000Z,completeDate=2020-01-17T14:32:34.412Z,sequence=1864,goal=MEIF QA Test Plan Development.
Complete Test Environment Setup. 
Test Development of new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1941";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:35:"PRE-FF:Existing test cases clean up";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:144000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579264159;s:7:"updated";i:1582605055;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:9:"pre-ff-qa";i:4;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:531;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1940";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:52:"MEIF-1.4-Linux QA: Test Development Tracking tickets";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1573751847;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:532;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2167";s:6:"sprint";a:1:{i:0;s:268:"com.atlassian.greenhopper.service.sprint.Sprint@6bef18a8[id=1885,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 7,startDate=2020-05-04T06:13:07.757+01:00,endDate=2020-05-22T20:13:00.000+01:00,completeDate=2020-05-25T08:58:06.439+01:00,sequence=1885,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1939";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:81:"FF:MEIF-1.4-Linux-QA : Testlink Testplan cleanup and Prepare RC Sanity test plan ";s:11:"description";s:167:"* Create RC Sanity test plan for Omni BSP(IPC127E target) in confluence.
 * Add all the relevant/valid use cases into the test plan
 * Clean up the testlink testplan";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589561122;s:7:"updated";i:1589561127;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:533;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2167";s:6:"sprint";a:1:{i:0;s:310:"com.atlassian.greenhopper.service.sprint.Sprint@1e92b7f0[id=1865,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 2,startDate=2020-01-20T12:39:12.352Z,endDate=2020-02-07T12:39:00.000Z,completeDate=2020-02-07T14:12:42.997Z,sequence=1865,goal=Finalize Test Plan. 
Develop test cases for new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1938";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:63:"PRE-FF:MEIF-1.4-Linux-QA : Prepare Testlink test execution plan";s:11:"description";s:146:"* Create test execution plan for Omni BSP(IPC127E target) in testlink
 * Add all the relevant/valid test cases into the test execution plan

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580972057;s:7:"updated";i:1581068348;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:9:"pre-ff-qa";i:4;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:534;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2167";s:6:"sprint";a:1:{i:0;s:310:"com.atlassian.greenhopper.service.sprint.Sprint@1e92b7f0[id=1865,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 2,startDate=2020-01-20T12:39:12.352Z,endDate=2020-02-07T12:39:00.000Z,completeDate=2020-02-07T14:12:42.997Z,sequence=1865,goal=Finalize Test Plan. 
Develop test cases for new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1937";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:61:"FF:MEIF-1.4-Linux-QA : Finalize Test plan for MEL OMNI BSP QA";s:11:"description";s:97:"* Review and Rework the Test plan created for Omni BSP(IPC127E target)
 * Finalize the Test plan";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580826672;s:7:"updated";i:1580826722;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:5:"ff-qa";i:1;s:11:"meif-1.4-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:535;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2167";s:6:"sprint";a:1:{i:0;s:351:"com.atlassian.greenhopper.service.sprint.Sprint@5d32006c[id=1864,rapidViewId=263,state=CLOSED,name=MEIF 1.4 QA - 2020 Sprint 1,startDate=2019-12-30T07:43:54.899Z,endDate=2020-01-17T07:43:00.000Z,completeDate=2020-01-17T14:32:34.412Z,sequence=1864,goal=MEIF QA Test Plan Development.
Complete Test Environment Setup. 
Test Development of new features.]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1935";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:63:"PRE-FF:MEIF-1.4-Linux-QA : Create Test plan for MEL OMNI BSP QA";s:11:"description";s:147:"* Create Test plan for Omni BSP(IPC127E target)
 * Describe the acceptance criteria for each MEIFMR
 * Describe the BSP Feature Testing use cases";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579087908;s:7:"updated";i:1579263203;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-omni-qa";i:2;s:9:"pre-ff-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:536;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1933";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:26:"MEIF-1.4-Linux QA Planning";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1573751848;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:11:"meif-1.4-qa";i:1;s:11:"mel-flex-qa";i:2;s:11:"mel-omni-qa";i:3;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:537;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1930";s:6:"sprint";a:1:{i:0;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1932";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"Upgrade the Azure device SDK to the latest version";s:11:"description";s:709:"Upgrade the Azure IoT Device SDK of MEIF 1.4 to the latest stable version currently available. Also check whether there are any LTS versions of the SDK since we would likely prefer those.

The remote monitoring demo should also be upgraded to a more recent version, as much as time allows. The specific version of the cloud-side app as locked and specified in the getting started instructions for this demo should also be updated to a more recent version.

Also see whether we can start using the latest version of OpenSSL (libssl-1.1) with this upgrade, since using libssl-1.1 is now recommended instead of version 1.0. Both MEL Omni and -MEL Flex- will have to be updated to use this latest SSL version.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:7:"SA-4785";}}}s:20:"timeoriginalestimate";i:172800;s:9:"timespent";i:208800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578580629;s:7:"updated";i:1579760333;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:538;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1930";s:6:"sprint";a:1:{i:0;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1931";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"Upgrade the AWS device SDK to the latest version";s:11:"description";s:398:"Upgrade the AWS IoT Device SDK of MEIF 1.4 to the latest stable version currently available. Also check whether there are any LTS versions of the SDK since we would likely prefer those.

Also see whether we can start using the latest version of the mbedTLS library if we aren't using the latest version already. Both MEL Omni and -MEL Flex- will have to be updated to use this latest SSL version.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:7:"SA-4784";}}}s:20:"timeoriginalestimate";i:172800;s:9:"timespent";i:14400;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1578477361;s:7:"updated";i:1579690794;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:539;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1930";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:21:"Update AWS/Azure SDKs";s:11:"description";s:121:"Update the AWS IoT Device SDK and the Azure IoT Device SDK contained within MEIF to the latest available stable versions.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-241";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587037061;s:7:"updated";i:1587037061;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:540;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:3:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";i:2;s:261:"com.atlassian.greenhopper.service.sprint.Sprint@4a6b5b97[id=1790,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3a,startDate=2019-08-19T10:39:55.702+01:00,endDate=2019-08-30T11:39:00.000+01:00,completeDate=2019-09-05T11:40:10.808+01:00,sequence=1734,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1929";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:42:"Build MEL Omni with Azure IoT Edge support";s:11:"description";s:92:"Continue building MEL Omni with Azure IoT Edge support and all required run-time components.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:103200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1566281726;s:7:"updated";i:1573752895;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:541;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@6ce1ae2[id=1734,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 1,startDate=2019-07-08T03:10:47.020+01:00,endDate=2019-07-19T04:10:00.000+01:00,completeDate=2019-07-19T14:41:22.265+01:00,sequence=1735,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1928";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"Handle Swupdate dependencies of MEIF on MEL Omni";s:11:"description";s:219:"Handle dependency of swupdate in the MEL Omni installation. The swupdate library and headers need to be installed in MEL Omni because the MEIF build with firmware update support enabled required these libraries/headers.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:100800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1562916186;s:7:"updated";i:1573752909;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:542;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:2:{i:0;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@6ce1ae2[id=1734,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 1,startDate=2019-07-08T03:10:47.020+01:00,endDate=2019-07-19T04:10:00.000+01:00,completeDate=2019-07-19T14:41:22.265+01:00,sequence=1735,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1927";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:43:"Handle SSL dependencies of MEIF on MEL Omni";s:11:"description";s:143:"Add support to MEL Omni to install all required dependencies of MEIF, including the following:
 * OpenSSL
 * mbedTLS (for AWS)
 * cURL

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:104400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1562911330;s:7:"updated";i:1573752896;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:543;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:2:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1926";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:36:"FA eval support and drop preparation";s:11:"description";s:223:"As a customer I want to: have a relatively high quality (QA'ed) evaluation drop for the MEIF + Azure IoT Edge solution

So that: I can evaluate the solution for my needs

Prepare the evaluation drop and submit it to QA.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579507769;s:7:"updated";i:1579507789;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:544;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:3:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";i:2;s:261:"com.atlassian.greenhopper.service.sprint.Sprint@4a6b5b97[id=1790,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3a,startDate=2019-08-19T10:39:55.702+01:00,endDate=2019-08-30T11:39:00.000+01:00,completeDate=2019-09-05T11:40:10.808+01:00,sequence=1734,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1925";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:38:"Prepare the demo drop for the customer";s:11:"description";s:345:"As a customer I want to: have an early drop of the MEIF + Azure IoT Edge functionality on the IPC127E target

So that: I can evaluate the solution for my needs

Prepare and deliver the demo drop for the FA customer on the IPC127E target board. Include all code and instructions for running the demo. This demo drop does not need to be QA'ed.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:25200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1567166976;s:7:"updated";i:1573752907;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:545;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1923";s:6:"sprint";a:1:{i:0;s:248:"com.atlassian.greenhopper.service.sprint.Sprint@25ba78e7[id=1751,rapidViewId=263,state=CLOSED,name=Mendix - 2020 Sprint 4,startDate=2020-03-03T07:56:52.826Z,endDate=2020-03-22T07:54:00.000Z,completeDate=2020-03-24T06:48:40.584Z,sequence=1742,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1924";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:21:"Update Documentation ";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:58800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586264233;s:7:"updated";i:1586264233;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:546;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1923";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:47:"Mendix Demo Integration and Testing on MEIF 1.4";s:11:"description";s:80:"The Mendix demo created for MEIF 1.3 needs to be updated and tested on MEIF 1.4.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:1:{i:0;s:10:"MEIFMR-232";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587037378;s:7:"updated";i:1587037378;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:547;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:5:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:2;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:4;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1922";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:36:"MEIF 1.4.0 Installation Instructions";s:11:"description";s:0:"";s:10:"issuelinks";a:2:{s:2:"in";a:2:{s:12:"is cloned by";a:1:{i:0;s:9:"MEIF-2658";}s:12:"is Tested By";a:1:{i:0;s:9:"MEIF-1958";}}s:3:"out";a:1:{s:10:"depends on";a:1:{i:0;s:9:"MEIF-1874";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590660377;s:7:"updated";i:1592874691;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:548;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:4:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:1;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1921";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:38:"MEIF 1.4.0 User's and Reference Manual";s:11:"description";s:0:"";s:10:"issuelinks";a:2:{s:2:"in";a:2:{s:13:"is blocked by";a:1:{i:0;s:9:"MEIF-2224";}s:12:"is Tested By";a:2:{i:0;s:9:"MEIF-2297";i:1;s:9:"MEIF-2479";}}s:3:"out";a:1:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-2611";}}}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:64800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590660444;s:7:"updated";i:1591011151;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:549;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:4:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:1;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:2;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1920";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"MEIF 1.4.0 Release Highlights and Release Notes ";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:12:"is Tested By";a:1:{i:0;s:9:"MEIF-1959";}}}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590660401;s:7:"updated";i:1591009459;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:550;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1918";s:6:"sprint";a:5:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:2;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:3;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:4;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1919";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:32:"MEIF 1.4.0 Getting Started Guide";s:11:"description";s:282:"Ensure that the steps to perform module life cycle ,add,delete,stop,start,update,create are explain in the guide. some steps have been mentioned in MEIF-2268

Engineering content available:

[https://confluence.alm.mentorg.com:8090/display/MEIF/MEIF-1.4+-+Getting+Started+Guide]";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:10:"depends on";a:7:{i:0;s:9:"MEIF-1786";i:1;s:9:"MEIF-1827";i:2;s:9:"MEIF-1844";i:3;s:9:"MEIF-1845";i:4;s:9:"MEIF-1846";i:5;s:9:"MEIF-1858";i:6;s:9:"MEIF-1859";}}s:2:"in";a:2:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-2610";}s:12:"is Tested By";a:2:{i:0;s:9:"MEIF-2296";i:1;s:9:"MEIF-2479";}}}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:25200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590660429;s:7:"updated";i:1591013799;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:551;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1918";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:24:"MEIF 1.4.0 Documentation";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-240";}}}s:20:"timeoriginalestimate";i:288000;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1594989203;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:552;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:1:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1917";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:45:"Shift development to the IPC127E target board";s:11:"description";s:335:"I want to: Use the IPC127E target board

So that: My evaluation is on a related target board

Once the two IPC127E target boards arrive in Lahore, the MEIF team will shift to these boards from the Turbot board. The Turbot BSP should work as-is on the IPC127E but if any problems are faced then those should be fixed in this ticket.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1564048446;s:7:"updated";i:1573752901;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:553;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:2:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1916";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"Build MEL Omni with Azure IoT Edge support (cont.)";s:11:"description";s:92:"Continue building MEL Omni with Azure IoT Edge support and all required run-time components.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:172800;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1566292731;s:7:"updated";i:1574342859;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:554;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:269:"com.atlassian.greenhopper.service.sprint.Sprint@31d9b979[id=1731,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 2,startDate=2019-07-01T05:59:35.296+01:00,endDate=2019-07-12T06:59:00.000+01:00,completeDate=2019-10-07T14:20:56.813+01:00,sequence=1731,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1914";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:66:"Carry out initial MEIF 1.4 sprint planning for the IPC127 customer";s:11:"description";s:152:"The whole MEIF 1.4 engineering team will meet and carry out sprint planning in context of the prioritization of the STS and IPC127 customer engagements.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1562136888;s:7:"updated";i:1573752907;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:555;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:269:"com.atlassian.greenhopper.service.sprint.Sprint@31d9b979[id=1731,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 2,startDate=2019-07-01T05:59:35.296+01:00,endDate=2019-07-12T06:59:00.000+01:00,completeDate=2019-10-07T14:20:56.813+01:00,sequence=1731,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1913";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"Estimate and expand the new MEIFMR-238 (alarms/events)";s:11:"description";s:235:"Expand this MR. Refer to the Proximetry content on Confluence and its design document (.docx file) which explains some device-side alrams/events service. This will be added as a device-side service to MEIF, built upon cloud primitives.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1566293137;s:7:"updated";i:1573752904;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:556;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1912";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"Estimate and expand the new MEIFMR-239 (MQTT API)";s:11:"description";s:211:"Expand this MR, if required also write a Confluence page for the investigation and scoping. Then provide a break-up of tasks under the MEIFMR. Please also add tasks to the Google Sheet for MEIF 1.4 user stories.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:0;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1571209227;s:7:"updated";i:1573752901;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:557;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:269:"com.atlassian.greenhopper.service.sprint.Sprint@31d9b979[id=1731,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 2,startDate=2019-07-01T05:59:35.296+01:00,endDate=2019-07-12T06:59:00.000+01:00,completeDate=2019-10-07T14:20:56.813+01:00,sequence=1731,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1911";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:39:"Sync the Google sheet with Jira tickets";s:11:"description";s:198:"Sync all data in the purple fields of the MEIF 1.4 user stories in Google Sheets with the Jira tickets. And also update the Google Sheet yellow columns to reflect this updated description/estimates.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1562064042;s:7:"updated";i:1573752912;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:558;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:269:"com.atlassian.greenhopper.service.sprint.Sprint@31d9b979[id=1731,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 2,startDate=2019-07-01T05:59:35.296+01:00,endDate=2019-07-12T06:59:00.000+01:00,completeDate=2019-10-07T14:20:56.813+01:00,sequence=1731,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1910";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:71:"STS: Estimate effort for pushing collectd data to AWS telemetry channel";s:11:"description";s:365:"Estimate the effort required to write a wrapper/plugin for collectd to push its device health log data to an AWS IoT device's telemetry channel when used in conjunction with MEIF. We will potentially need to add commands to MEIF to enable/disable data collection via command services. Also need to explore what the standard interface is for collectd plugin writers.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1562063967;s:7:"updated";i:1573752914;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:559;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:269:"com.atlassian.greenhopper.service.sprint.Sprint@31d9b979[id=1731,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 2,startDate=2019-07-01T05:59:35.296+01:00,endDate=2019-07-12T06:59:00.000+01:00,completeDate=2019-10-07T14:20:56.813+01:00,sequence=1731,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1909";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"STS: Can collectd readily be used with AWS CloudWatch";s:11:"description";s:614:"When using MEIF 1.3 on a MEL Flex, investigate whether its collectd service can be easily using with the AWS CloudWatch service. There is already a plugin for CollectD for interfacing it with CloudWatch so you need to see how readily usable this plugin is for use with MEL's collectd.

Also confirm whether this mechanism can be used to monitor device health metrics such as processor load, memory usage and network activity.

References:

[https://github.com/awslabs/collectd-cloudwatch]

[https://aws.amazon.com/blogs/aws/new-cloudwatch-plugin-for-collectd/]

[https://aws.amazon.com/cloudwatch/]

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:10800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1561988986;s:7:"updated";i:1573752920;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:560;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:269:"com.atlassian.greenhopper.service.sprint.Sprint@31d9b979[id=1731,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 2,startDate=2019-07-01T05:59:35.296+01:00,endDate=2019-07-12T06:59:00.000+01:00,completeDate=2019-10-07T14:20:56.813+01:00,sequence=1731,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1908";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:47:"STS: JITP based auto-provisioning with MEIF 1.3";s:11:"description";s:775:"Try out the use of the JITP based AWS device auto-provisioning and see whether MEIF 1.3 can be used with this auto-provisioning mechanism without any code changes (it is likely that this should work out of the box).

Make sure you use the JITP method and not the JITR method. This is just a quick proof of concept investigation so you don't need to document this and you don't need to continue this task if it seems technically infeasible to support this without making significant changes in MEIF 1.3. You can try this out on MEIF 1.3 on any MEL Flex/Omni hardware platform.

References:

[https://docs.aws.amazon.com/iot/latest/developerguide/jit-provisioning.html]

[http://confluence.alm.mentorg.com:8090/display/MEIF/MEIFMR-214%3A+Device+Auto-Provisioning]

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:18000;s:9:"timespent";i:16200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1562048404;s:7:"updated";i:1573752916;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:561;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:269:"com.atlassian.greenhopper.service.sprint.Sprint@31d9b979[id=1731,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 2,startDate=2019-07-01T05:59:35.296+01:00,endDate=2019-07-12T06:59:00.000+01:00,completeDate=2019-10-07T14:20:56.813+01:00,sequence=1731,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1907";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:75:"STS: Prerequisites of porting MEIF 1.3 to a custom Yocto Linux distribution";s:11:"description";s:263:"Please provide an answer to this query:

What are the prerequisites of porting MEIF 1.3 to a custom Yocto based Linux distribution. Please list all dependencies for supporting MEIF, including libraries (mbedtls, etc) and other components (swupdate, uboot, etc).";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:1800;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1561964035;s:7:"updated";i:1573752902;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:562;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1824";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";i:1;s:267:"com.atlassian.greenhopper.service.sprint.Sprint@7f7ef962[id=1733,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 2,startDate=2019-07-22T11:51:17.999+01:00,endDate=2019-08-05T11:51:00.000+01:00,completeDate=2019-08-05T07:56:37.403+01:00,sequence=1733,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1906";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:25:"Prepare App Note document";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"depends on";a:1:{i:0;s:9:"MEIF-1896";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1564987864;s:7:"updated";i:1573752922;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:563;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1923";s:6:"sprint";a:1:{i:0;s:248:"com.atlassian.greenhopper.service.sprint.Sprint@25ba78e7[id=1751,rapidViewId=263,state=CLOSED,name=Mendix - 2020 Sprint 4,startDate=2020-03-03T07:56:52.826Z,endDate=2020-03-22T07:54:00.000Z,completeDate=2020-03-24T06:48:40.584Z,sequence=1742,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1905";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:22:"Testing and Bug Fixing";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584355872;s:7:"updated";i:1584355872;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:564;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1923";s:6:"sprint";a:1:{i:0;s:248:"com.atlassian.greenhopper.service.sprint.Sprint@25ba78e7[id=1751,rapidViewId=263,state=CLOSED,name=Mendix - 2020 Sprint 4,startDate=2020-03-03T07:56:52.826Z,endDate=2020-03-22T07:54:00.000Z,completeDate=2020-03-24T06:48:40.584Z,sequence=1742,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1904";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"Integrated and run sample app with MEIF 1.4 version ";s:11:"description";s:45:"Testing hardware is IPC127E using MEL Omni.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:64800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583838602;s:7:"updated";i:1584355842;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:565;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1923";s:6:"sprint";a:1:{i:0;s:248:"com.atlassian.greenhopper.service.sprint.Sprint@25ba78e7[id=1751,rapidViewId=263,state=CLOSED,name=Mendix - 2020 Sprint 4,startDate=2020-03-03T07:56:52.826Z,endDate=2020-03-22T07:54:00.000Z,completeDate=2020-03-24T06:48:40.584Z,sequence=1742,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1903";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:25:"Prepare setup of MEIF 1.4";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583326822;s:7:"updated";i:1583326822;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:566;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:203:"com.atlassian.greenhopper.service.sprint.Sprint@991e565[id=1760,rapidViewId=263,state=FUTURE,name=MEIF 1.4 - Mendix Sprint 3,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=1741,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1902";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:55:"Update Documentation, User guide and setup instructions";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1574857298;s:7:"updated";i:1574857298;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:567;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:203:"com.atlassian.greenhopper.service.sprint.Sprint@991e565[id=1760,rapidViewId=263,state=FUTURE,name=MEIF 1.4 - Mendix Sprint 3,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=1741,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1901";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:22:"Testing and Bug Fixing";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1574857336;s:7:"updated";i:1574857336;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:568;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:203:"com.atlassian.greenhopper.service.sprint.Sprint@991e565[id=1760,rapidViewId=263,state=FUTURE,name=MEIF 1.4 - Mendix Sprint 3,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=1741,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1900";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:30:"CSS and styling for new pages ";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1574857245;s:7:"updated";i:1574857245;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:569;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:2:{i:0;s:267:"com.atlassian.greenhopper.service.sprint.Sprint@7f7ef962[id=1733,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 2,startDate=2019-07-22T11:51:17.999+01:00,endDate=2019-08-05T11:51:00.000+01:00,completeDate=2019-08-05T07:56:37.403+01:00,sequence=1733,goal=]";i:1;s:203:"com.atlassian.greenhopper.service.sprint.Sprint@991e565[id=1760,rapidViewId=263,state=FUTURE,name=MEIF 1.4 - Mendix Sprint 3,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=1741,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1899";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:19:"Update domain model";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1574857329;s:7:"updated";i:1574857329;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:570;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:2:{i:0;s:267:"com.atlassian.greenhopper.service.sprint.Sprint@7f7ef962[id=1733,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 2,startDate=2019-07-22T11:51:17.999+01:00,endDate=2019-08-05T11:51:00.000+01:00,completeDate=2019-08-05T07:56:37.403+01:00,sequence=1733,goal=]";i:1;s:203:"com.atlassian.greenhopper.service.sprint.Sprint@991e565[id=1760,rapidViewId=263,state=FUTURE,name=MEIF 1.4 - Mendix Sprint 3,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=1741,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1898";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:60:"BLE connection management with respect to session management";s:11:"description";s:271:"The peer to peer connection is implemented via chrome BLE APIs using javascript , the connection disconnected when a page is changed.  This can be handled using session management. If no viable solution found then we design a specific page for peer to peer connection. ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1574857251;s:7:"updated";i:1574857251;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:571;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:267:"com.atlassian.greenhopper.service.sprint.Sprint@7f7ef962[id=1733,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 2,startDate=2019-07-22T11:51:17.999+01:00,endDate=2019-08-05T11:51:00.000+01:00,completeDate=2019-08-05T07:56:37.403+01:00,sequence=1733,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1897";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:47:"Add support for peer to peer connection via BLE";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1564988077;s:7:"updated";i:1573752902;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:572;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1896";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"Documentation User guide and setup instructions ";s:11:"description";s:0:"";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:10:"depends on";a:2:{i:0;s:9:"MEIF-1880";i:1;s:9:"MEIF-1895";}}s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1906";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563546990;s:7:"updated";i:1573752909;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:573;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1895";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:22:"Testing and Bug Fixing";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1896";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:50400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563546946;s:7:"updated";i:1573752905;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:574;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1894";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:21:"Apply CSS and Styling";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563529886;s:7:"updated";i:1573752909;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:575;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1893";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:45:"Add support in adding AWS device certificates";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:50400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563337519;s:7:"updated";i:1573752900;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:576;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1892";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:47:"Add support for adding rules to generate Alerts";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563337557;s:7:"updated";i:1573752894;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:577;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1891";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:67:"Add Iot connector and show telemetry and diagnostics data in charts";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563337580;s:7:"updated";i:1573752918;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:578;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1890";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:22:"Implement domain model";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563337633;s:7:"updated";i:1573752911;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:579;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:2:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";i:1;s:267:"com.atlassian.greenhopper.service.sprint.Sprint@7f7ef962[id=1733,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 2,startDate=2019-07-22T11:51:17.999+01:00,endDate=2019-08-05T11:51:00.000+01:00,completeDate=2019-08-05T07:56:37.403+01:00,sequence=1733,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1889";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:19:"Mobile view testing";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1564564077;s:7:"updated";i:1573752904;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:580;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1887";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1888";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:35:"Define Design and Layout of the App";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1562595537;s:7:"updated";i:1573752915;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:581;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1887";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:23:"Mendix for MEIF web app";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-232";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587037299;s:7:"updated";i:1587037299;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:582;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1825";s:6:"sprint";a:1:{i:0;s:203:"com.atlassian.greenhopper.service.sprint.Sprint@991e565[id=1760,rapidViewId=263,state=FUTURE,name=MEIF 1.4 - Mendix Sprint 3,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=1741,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1886";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:21:"Update Documentation ";s:11:"description";s:72:"Document user guide and setup instructions for Peer to peer connectivity";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1574919813;s:7:"updated";i:1574919813;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:583;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1825";s:6:"sprint";a:1:{i:0;s:203:"com.atlassian.greenhopper.service.sprint.Sprint@991e565[id=1760,rapidViewId=263,state=FUTURE,name=MEIF 1.4 - Mendix Sprint 3,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=1741,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1885";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:45:"Testing and bug fixing Peer to peer and Cloud";s:11:"description";s:30:"Peer to peer and cloud testing";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:64800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1574919807;s:7:"updated";i:1574919807;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:584;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1825";s:6:"sprint";a:1:{i:0;s:267:"com.atlassian.greenhopper.service.sprint.Sprint@7f7ef962[id=1733,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 2,startDate=2019-07-22T11:51:17.999+01:00,endDate=2019-08-05T11:51:00.000+01:00,completeDate=2019-08-05T07:56:37.403+01:00,sequence=1733,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1883";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"Implement device scanning and Bluetooth connectivity";s:11:"description";s:64:"Add support for device scanning, connection and pairing over BLE";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:79200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1564578660;s:7:"updated";i:1573752909;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:585;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1825";s:6:"sprint";a:1:{i:0;s:267:"com.atlassian.greenhopper.service.sprint.Sprint@7f7ef962[id=1733,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 2,startDate=2019-07-22T11:51:17.999+01:00,endDate=2019-08-05T11:51:00.000+01:00,completeDate=2019-08-05T07:56:37.403+01:00,sequence=1733,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1882";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:46:"Enable support of Bluetooth (BLE) in native OS";s:11:"description";s:148:"Peer to peer communication is done over Bluetooth low Energy profile. Configure the Bluetooth (Low Energy profile) on Ultrazed board/ Omni device. ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1564987889;s:7:"updated";i:1573752914;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:586;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1825";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1881";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:14:"Documentation ";s:11:"description";s:92:"Document Application functionality along with deployment instructions for K70 and Ultrazed ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563785782;s:7:"updated";i:1573752914;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:587;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1825";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1880";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:22:"Testing and Bug Fixing";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1896";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563545807;s:7:"updated";i:1573752902;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:588;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1825";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1878";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:47:"Implement Application base structure and Schema";s:11:"description";s:90:"Create App basic structure and define telemetry and device diagnostic (CPU, Memory) Schema";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1562932913;s:7:"updated";i:1573752895;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:589;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1825";s:6:"sprint";a:1:{i:0;s:266:"com.atlassian.greenhopper.service.sprint.Sprint@2e87116[id=1732,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Mendix Sprint 1,startDate=2019-07-08T09:47:17.706+01:00,endDate=2019-07-19T10:47:00.000+01:00,completeDate=2019-07-22T11:03:48.461+01:00,sequence=1732,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1877";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:23:"Prepare design document";s:11:"description";s:138:"Consider the scalability of the application as it runs on multiple OS (Nucleus and Linux) with different Data transimition configuration ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1562674464;s:7:"updated";i:1573752903;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:590;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1826";s:6:"sprint";a:6:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";i:2;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@22bdb010[id=1742,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 4,startDate=2020-03-02T12:58:08.380Z,endDate=2020-03-20T12:56:00.000Z,completeDate=2020-03-23T22:35:26.312Z,sequence=1749,goal=]";i:3;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";i:4;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:5;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1874";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:60:"Documentation changes for the new shared installation of MHT";s:11:"description";s:481:"The host security tool is changing a bit to support shared installations between MEL and MEIF:
 Installation Location
 Installation scenarios
 Script names
 Handling templates and other resources

Need to make sure that those changes are reflected in the docs as/if needed

The host-side tool is currently documented in the MEIF user manual. This chapter from the MEIF manual will probably have to be moved to a tool specific location (to be discussed with the tools team).";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1922";}s:12:"is Tested By";a:1:{i:0;s:9:"MEIF-2479";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1590655057;s:7:"updated";i:1590655070;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:591;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1826";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@11ec09c0[id=1835,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 1,startDate=2019-12-28T16:17:50.915Z,endDate=2020-01-18T03:12:00.000Z,completeDate=2020-01-18T23:03:48.577Z,sequence=1745,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+01]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1873";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"Rename Host Security Tool to MEIF Host Tool (MHT)";s:11:"description";s:619:"Rename any visible reference to the tool in the UI or CLI from Host Security tool to MEIF Host Tool (MHT)
http://jira.alm.mentorg.com:8080/browse/MEIFMR-228?focusedCommentId=656222&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-656222

Also rename the launching script from meif-host-sec-tool.sh to meif-host-tool.sh as per [the comment|http://jira.alm.mentorg.com:8080/browse/MEIFMR-228?focusedCommentId=656397&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-656397] in MEIFMR-228
[~cpeuse], this might require changes in MEL if the script names change.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:9:"MEIF-1826";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578942774;s:7:"updated";i:1578942774;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:2:"cb";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:592;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1826";s:6:"sprint";a:2:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@11ec09c0[id=1835,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 1,startDate=2019-12-28T16:17:50.915Z,endDate=2020-01-18T03:12:00.000Z,completeDate=2020-01-18T23:03:48.577Z,sequence=1745,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+01]";i:1;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@14f120ed[id=1836,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 2,startDate=2020-01-18T23:10:46.876Z,endDate=2020-02-08T10:05:00.000Z,completeDate=2020-02-09T16:28:50.981Z,sequence=1790,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+02]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1872";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"MHT/Lite to be installed to shared location tools/mht";s:11:"description";s:776:"There will be two versions of MHT: MHT and MHT Lite
 The main difference between them is that MHT Lite is CLI only.

1- Both should install in the same location <mgc/embedded>/tools/mht
 2- MHT Lite is a subset of MHT
 2-a- MHT Lite contains MHT core + MHT CLI + Resources
 2-b- MHT contains everything in MHT Lite + UI
 2-c- MHT core should depend on resources, with CLI and UI dependent on Core
 3- When installed together it is basically an MHT installation with possibly updated core and resources

[https://confluence.alm.mentorg.com:8090/display/MEIF/MEIFMR-228%3A+MEIF+Host+Tool+Restructuring]

To be done under this ticket: Revert changes done for workaround under this PR: [https://stash.alm.mentorg.com/projects/CB/repos/cb_iot/pull-requests/55/overview]";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:9:"MEIF-1826";}}}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:176400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580487394;s:7:"updated";i:1580487394;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:2:"cb";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:593;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1826";s:6:"sprint";a:2:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@11ec09c0[id=1835,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 1,startDate=2019-12-28T16:17:50.915Z,endDate=2020-01-18T03:12:00.000Z,completeDate=2020-01-18T23:03:48.577Z,sequence=1745,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+01]";i:1;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@14f120ed[id=1836,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 2,startDate=2020-01-18T23:10:46.876Z,endDate=2020-02-08T10:05:00.000Z,completeDate=2020-02-09T16:28:50.981Z,sequence=1790,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+02]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1871";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:33:"MHT to use new resources location";s:11:"description";s:354:"A new resources repo has been created and should be used instead of the resources inside the plugins.

1- The new resources repo should be installed in the correct location (work already done under MEIF Lite in MEIFMR-228)
2- The resources inside the plugin should now be removed
3- The code should be modified to read resources from the new location";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:9:"MEIF-1826";}}}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:90000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579600846;s:7:"updated";i:1579600888;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:2:"cb";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:594;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:2:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1870";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:81:"Implement/test MEIFMR-236 (configurability and scalability of MEIF) with MEL Omni";s:11:"description";s:802:"I want to: Ensure that MEIF is configurable and scalable on MEL Omni

So that: MEIF features are consistently provided across different runtimes

Extra note communicated by [~asaleem] and relates to MEL Omni:
{quote}Just discovered by awais, if we set MEIF_USES_SWUPDATE=no , we get dependency error related to swupdate.

i think the error is because we have swupdate added in Build-Depends.

solution to the problem is to use the envsubst utility to modify the Build-Depends value depending on the value of MEIF_USES_SWUPDATE.
{quote}
 

Update:
 there is a varibale SWU_KEYS_PATH in omni/mel-core/conf/distro/mel.conf.  I need to verify that if i set this variable in my local.conf file , the keys within the set folder are used. The getting started guide will be updated accordingly.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582725822;s:7:"updated";i:1583130436;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:595;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:3:{i:0;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@6ce1ae2[id=1734,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 1,startDate=2019-07-08T03:10:47.020+01:00,endDate=2019-07-19T04:10:00.000+01:00,completeDate=2019-07-19T14:41:22.265+01:00,sequence=1735,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";i:2;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1863";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:53:"Restore and test firmware updates support on MEL Omni";s:11:"description";s:369:"I want to: Perform reliable firmware updates on MEL Omni using swupdate and a bootloader

So that: MEIF features are consistently provided across different runtimes

Make sure bootloader patches such as for watchdog are enabled, and swupdate provides a consistent set of functionality across runtimes.

 

Update sw-descriptions and register them with the MHT.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:13:"is triggering";a:2:{i:0;s:8:"CB-11164";i:1;s:8:"CB-11167";}}}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:172800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1566289376;s:7:"updated";i:1573752894;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:596;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:4:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";i:2;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";i:3;s:261:"com.atlassian.greenhopper.service.sprint.Sprint@4a6b5b97[id=1790,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3a,startDate=2019-08-19T10:39:55.702+01:00,endDate=2019-08-30T11:39:00.000+01:00,completeDate=2019-09-05T11:40:10.808+01:00,sequence=1734,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1861";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:38:"Restore MEL Omni documentation in MEIF";s:11:"description";s:484:"I want to: Refer to MEIF documentation specific to MEL Omni

So that: I can easily setup and try out MEIF on MEL Omni

Restore the documentation of MEL Omni and update it if it is outdated. This documentation was previously a part of the MEIF getting started manual but was later removed for the MEIF 1.3 release.

 

Ensure that the steps to perform module life cycle ,add,delete,stop,start,update,create are explain in the guide. some steps have been mentioned in MEIF-2268";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:117000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1575029972;s:7:"updated";i:1581473396;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:597;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:2:{i:0;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@6ce1ae2[id=1734,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 1,startDate=2019-07-08T03:10:47.020+01:00,endDate=2019-07-19T04:10:00.000+01:00,completeDate=2019-07-19T14:41:22.265+01:00,sequence=1735,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1860";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:45:"Support for building/running MEIF on MEL Omni";s:11:"description";s:181:"I want to: Build/run MEIF on MEL Omni

So that: I can use MEIF on MEL Omni platforms

Restore and verify MEIF builds on MEL Omni. Update the recipes if any updates are required.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:223200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1564656011;s:7:"updated";i:1573752899;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:598;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1859";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:31:"Ability to toggle MEIF features";s:11:"description";s:461:"I want to: Customize MEIF by toggling its individual features, such as device commands, firmware update service

So that: I can enable only those features in the build which I require and reduce MEIF dependencies

Should we allow customizing the SDKs as well? Like disabling AMQP support in the Azure SDK, etc.

 

Disable Trace support, json, libfdt.

The final test would involve running MEIF on a MEL target which does not officially support MEIF.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1919";}}}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:39600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579605902;s:7:"updated";i:1586790444;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:599;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1858";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"Building MEIF without swupdate/uboot support";s:11:"description";s:591:"I want to: Build MEIF without swupdate/uboot and firmware updates support

So that: I can build MEIF on platforms which don't support swupdate or I can turn this feature off if not required

This will likely be a cmake option in the MEIF build or within the MEL Flex bitbake recipe. Also see whether we can auto-detect with the MEL recipe whether uboot and swupdate are included in the build and act accordingly.

Update:Already implemented. Consider removing http from Nucleus MEIF and use the Nucleus HTTP instead. MindConnect uses http so that too will have to be mapped to Nucleus.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1919";}}}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579513662;s:7:"updated";i:1580719699;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:600;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1852";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:28:"Run MEIF without root access";s:11:"description";s:168:"I want to: Run MEIF as an MEIF-specific user/group instead of requiring to run it as the root user

So that: My system is more secure and does not use root needlessly";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:16:"is duplicated by";a:1:{i:0;s:9:"MEIF-1741";}}}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:108000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1580289989;s:7:"updated";i:1580726723;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:601;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1823";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1851";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:58:"Register all agents/services with systemd for auto-startup";s:11:"description";s:540:"I want to: Ensure that all MEIF agents/services run automatically on system reboot without any manual intervention

So that: The IoT device can be run without any manual steps from a user on every reboot

Refer to the MEIFMR-55 confluence page for a detail of this task and the various services which need to be auto-run in different MEIF deployment configurations.

 

Update: 
Edit the meif1.4 getting started guide to remove instructions from the section "Build a MEL Omni Image with Support for MEIF" to manually run the agent";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:15300;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579681245;s:7:"updated";i:1580288866;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:602;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2427";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1850";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:38:"Multiple clouds in a single MEIF build";s:11:"description";s:703:"I want to: Enable multiple clouds/services within a single MEIF build

So that: I don't need to rebuild MEIF multiple times if I want to use multiple clouds simultaneously

Make the CLOUD cmake option of MEIF take one or more clouds instead of just allowing a single cloud. This support was added in the past but was removed so it can likely be found in the repo history. Also note that this would require addition of options such as multiple device command lists to allow each agent/demo app to have its own device commands when enabled together. Test this on both MEL Flex and Nucleus.

 

Also add support for disabling a cloud from meif.ini and taking multiple cloud optons within meif.ini.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:288000;s:9:"timespent";i:316800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588947377;s:7:"updated";i:1589875671;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:603;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1846";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:76:"Documentation for setting up MEIF on end-devices connected to an Edge device";s:11:"description";s:164:"I want to: Have detailed instructions for setting up MEIF on end-devices and using it with an Edge device

So that: I can easily deploy MEIF in this configuration";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1919";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:45000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1577451892;s:7:"updated";i:1577452005;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:604;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1845";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:78:"Documentation for running MEIF as a module and running it in a non-module mode";s:11:"description";s:212:"I want to: Have detaled instructions for running MEIF as a module or running it in a non-module mode

So that: I can easily deploy MEIF alongside Azure IoT Edge

 

Remove non-module mode from this ticket.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1919";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:900;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1575375777;s:7:"updated";i:1575375789;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:605;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:3:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";i:2;s:261:"com.atlassian.greenhopper.service.sprint.Sprint@4a6b5b97[id=1790,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3a,startDate=2019-08-19T10:39:55.702+01:00,endDate=2019-08-30T11:39:00.000+01:00,completeDate=2019-09-05T11:40:10.808+01:00,sequence=1734,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1844";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:43:"Documentation for setting up Azure IoT Edge";s:11:"description";s:139:"I want to: Have detailed instructions for setting up Azure IoT Edge on MEL Omni

So that: I can easily deploy Azure IoT Edge on my device";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1919";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1566990208;s:7:"updated";i:1573752917;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:606;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:5:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";i:1;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";i:2;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";i:3;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";i:4;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1843";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:67:"Debug and development workflow for MEIF as an Azure IoT Edge module";s:11:"description";s:419:"I want to: Be able to develop and debug MEIF when it is built as an Azure IoT Edge module

So that: I can write my custom application logic using MEIF

Document a workflow for how the user would debug and develop his MEIF application when it is built as an Azure IoT Edge module. The workflow will likely be based on VS Code and will use the standard workflow used by developers when writing Azure IoT Edge modules.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:124200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1576151876;s:7:"updated";i:1582123615;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:607;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:2:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";i:1;s:249:"com.atlassian.greenhopper.service.sprint.Sprint@254e671[id=1739,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 1,startDate=2019-12-30T06:10:35.622Z,endDate=2020-01-17T06:10:00.000Z,completeDate=2020-01-20T08:00:08.486Z,sequence=1746,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1842";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:80:"Demo application for MEIF based child devices connected to Azure IoT edge device";s:11:"description";s:553:"I want to: Have a comprehensive demo application which shows how to run MEIF based child devices in conjunction with MEL based Azure IoT Edge device

So that: I can have a reference for writing such application logic

Provide the code and build files for the demo application and also provide documentation for how to run this demo and verify its fucntionality.

 

Test that child devices can also be updated using the standard remotemon demo app. All logic to average out the telemetry values from child devices before reporting to the cloud.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:144000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1577191956;s:7:"updated";i:1577872928;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:608;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1841";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"Sample module to demonstrate app logic on Azure IoT edge";s:11:"description";s:435:"I want to: Have a sample module which demonstrates how to write application logic when developing for Azure IoT Edge

So that: I can quickly get started with a sample

Provide the code and build files for the sample module and also provide documentation for how to run this module and view its output.

 

Test the Azure IoT Edge device with the standard remotemon demo app and make sure its firmware updates can be triggered.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:32400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1575374388;s:7:"updated";i:1575525279;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:609;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:2:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";i:1;s:245:"com.atlassian.greenhopper.service.sprint.Sprint@94d8eee[id=1808,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3d,startDate=2019-10-31T13:14:00.000Z,endDate=2019-11-21T13:14:00.000Z,completeDate=2019-11-25T11:28:15.902Z,sequence=1740,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1840";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:51:"Build MEIF as IoT Edge Docker module for Intel arch";s:11:"description";s:287:"I want to: Build MEIF as an Azure IoT Edge module for supported Intel architecture(s)

So that: I can use the module on the Intel target platforms

Provide the Docker file for this particular architecture and test things o make sure everything works as expected on this architecture.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:82800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1571054299;s:7:"updated";i:1573799732;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:610;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1839";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"Build MEIF as IoT Edge Docker module for ARM arch";s:11:"description";s:391:"I want to: Build MEIF as an Azure IoT Edge module for supported ARM architecture(s)

So that: I can use the module on the ARM target platforms

Provide the Docker file for this particular architecture and test things to make sure everything works as expected on this architecture. The build will have to be cross-compiled, which is already supported by the Azure IoT Edge build workflow.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1574683146;s:7:"updated";i:1574683146;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:611;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:2:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@eb5f252[id=1791,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3b,startDate=2019-09-05T11:41:58.919+01:00,endDate=2019-09-20T12:41:00.000+01:00,completeDate=2019-10-15T07:46:25.615+01:00,sequence=1736,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1838";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:22:"Fix the reboot command";s:11:"description";s:378:"I want to: Use the reboot command even when MEIF runs as an Azure IoT Edge module

So that: The user experience of MEIF in different deployment configurations remains consistent

The reboot command will have to be modified to use the MEIF docker daemon socket instead of the system(reboot) aproach.

 

The trace command may also have to be mapped to the Docker daemon.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:300;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1571054615;s:7:"updated";i:1573752914;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:612;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:3:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";i:1;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";i:2;s:245:"com.atlassian.greenhopper.service.sprint.Sprint@94d8eee[id=1808,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3d,startDate=2019-10-31T13:14:00.000Z,endDate=2019-11-21T13:14:00.000Z,completeDate=2019-11-25T11:28:15.902Z,sequence=1740,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1837";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:49:"Enable device commands within the Dockerized MEIF";s:11:"description";s:491:"I want to: Continue using the device commands service of MEIF even when running MEIF as an Azure IoT Edge module

So that: The user experience of MEIF in different deployment configurations remains consistent

Device commands will have to be revisited because when MEIF is run as an Azure IoT Edge module then the pristine unpatched Azure SDK is used which isn't patched to work with MEIF device commands. Some workaround needs to be used to enable device commands with the pristine SDK.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:167460;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1575273536;s:7:"updated";i:1575273548;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:613;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:2:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";i:1;s:245:"com.atlassian.greenhopper.service.sprint.Sprint@94d8eee[id=1808,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3d,startDate=2019-10-31T13:14:00.000Z,endDate=2019-11-21T13:14:00.000Z,completeDate=2019-11-25T11:28:15.902Z,sequence=1740,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1836";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:50:"Enable firmware updates within the Dockerized MEIF";s:11:"description";s:410:"I want to: Perfirm firmware updates from within MEIF running as an IoT Edge module (Docker container)

So that: I can use standard MEIF services in this module based build

This task will also involve writing an MEIF Docker daemon and interfacing the MEIF Docker module with the MEIF Docker daemon and the swupdate sockets using Docker mounts. Also install the MEIF docker daemon within the MEL Omni build.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:669780;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1570609732;s:7:"updated";i:1573752917;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-eval";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:614;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1827";s:6:"sprint";a:2:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";i:1;s:261:"com.atlassian.greenhopper.service.sprint.Sprint@4a6b5b97[id=1790,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3a,startDate=2019-08-19T10:39:55.702+01:00,endDate=2019-08-30T11:39:00.000+01:00,completeDate=2019-09-05T11:40:10.808+01:00,sequence=1734,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1835";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:38:"Build MEIF as a IoT Edge Docker module";s:11:"description";s:912:"I want to: Build MEIF as an Azure IoT Edge module

So that: I can remotely deploy MEIF on my Azure IoT Edge device from the Azure portal

Provide all support files such as Docker files and documentation for building MEIF as an Azure IoT Edge module based on a Docker image. Visual Studio will likely be used as a build tool for this purpose. And the built-in Azure SDK will be disabled in this build so support for disabling that should also be added to MEIF cleanly. Also check whether each MEIF service (each agent, nginx, etc) will be run in its own Docker container or a common Docker container. Will also need to introduce a cmake build option for whether this is an meif-source-build, meif-docker-native-build or meif-docker-azure-edge-build.

 

Other clouds cannot be enabled in this config. And hawkbit is also enabled outside cmake. So only one service will be running in the Docker container.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:140400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1566990107;s:7:"updated";i:1573752910;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:615;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:3:{i:0;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@6ce1ae2[id=1734,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 1,startDate=2019-07-08T03:10:47.020+01:00,endDate=2019-07-19T04:10:00.000+01:00,completeDate=2019-07-19T14:41:22.265+01:00,sequence=1735,goal=]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";i:2;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@73f861b2[id=1736,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 3,startDate=2019-08-05T14:09:23.076+01:00,endDate=2019-08-16T15:09:00.000+01:00,completeDate=2019-08-20T10:23:06.984+01:00,sequence=1738,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1833";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:33:"Selection of MEIF deployment mode";s:11:"description";s:599:"I want to: Select whether MEIF is to be deployed as a standard source build, as an Azure IoT Edge module or as a Dockerized image

So that: I can deplog MEIF in supported configurations

Add a build option in the MEL FLex bitbake recpie to select the deployment mode and handle things accordingly. You may also need to add an equivalent opton in the MEIF cmake build options as the MEIF build needs to be adjusted in some cases.

 

Check whether any Docker build class exists for bitbake. If not, then we will build Docker images outside bitbake. Also add azure-iot-edge as a CLOUD option.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:64800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563277332;s:7:"updated";i:1573752905;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:616;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1827";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:57:"Support for basic MEIF features on X86 target on MEL Omni";s:11:"description";s:22:"X86 target on MEL Omni";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1919";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-225";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587036774;s:7:"updated";i:1587036774;s:7:"duedate";i:1567123200;s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:617;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1826";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:29:"Shared host-tool installation";s:11:"description";s:30:"Shared host-tool installation.";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:14:"implemented by";a:3:{i:0;s:9:"MEIF-1871";i:1;s:9:"MEIF-1872";i:2;s:9:"MEIF-1873";}}s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-228";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1583165200;s:7:"updated";i:1583165200;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:618;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1825";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:31:"Mendix for MEIF device demo app";s:11:"description";s:63:"Utilizing Mendix for a cloud independent MEIF demo application.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-232";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587037259;s:7:"updated";i:1587037259;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:619;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1824";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:28:"Appnote for Mendix with MEIF";s:11:"description";s:71:"Write an appnote for using Mendix with MEIF. See linked MR for details.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-235";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587037226;s:7:"updated";i:1587037226;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:620;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1823";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:39:"Configurability and Scalability of MEIF";s:11:"description";s:65:"Review and update MEIF to make it more configurable and scalable.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-236";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587036816;s:7:"updated";i:1587036816;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:621;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2427";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1815";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:61:"Commands should work for multiple cloud agents simultaneously";s:11:"description";s:629:"I want to: Have commands to work correctly when running multiple cloud agents simultaneously.

I want to: Have commands to work correctly when running tracing.

So that: A single deployment of MEIF can easily service multiple clouds

Add support for tags within the device command list, so that we don't need to maintain multiple device command lists and instead a single list contains tags for the applicable clouds. For example, the ping command can have the "all" or "*" tag while a cloud-specific command can have a specific tag such as "azure", "azure-edge" or "aws".

Also ensure Trace functionality remains intact.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"relates to";a:1:{i:0;s:9:"MEIF-2529";}}}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:122400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589451163;s:7:"updated";i:1589875692;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:622;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1801";s:6:"status";s:4:"Open";s:14:"statuscategory";s:4:"OPEN";s:7:"summary";s:54:"Concurrent encryption and compression for Linux images";s:11:"description";s:71:"Support concurrent encryption and compression on MEL Flex and MEL Omni.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-234";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1574080998;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:623;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1800";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:82:"Azure application has a memory leak of few bytes for every telemetry data it send.";s:11:"description";s:120:"The memory leak can possibly be the reason for the azure application to stop working after running for more than 24hours";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:5:"fixes";a:1:{i:0;s:9:"MEIF-1780";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:9:"Won't Fix";s:14:"resolutiondate";i:1576135441;s:7:"updated";i:1581344035;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:624;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:275:"com.atlassian.greenhopper.service.sprint.Sprint@75ff975f[id=1717,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 1,startDate=2019-05-17T12:40:22.485+01:00,endDate=2019-06-03T13:40:00.000+01:00,completeDate=2019-06-28T14:49:41.160+01:00,sequence=1717,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1798";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:61:"Document the higher-level scope of MEIF for MEL Flex and Omni";s:11:"description";s:264:"Cedric has requested a design of the MEIF product and its high level description of what use-cases we are planning to support in MEL Flex and Omni. Especially the areas of firmware update types, packaging and interfacing with system services need to be documented.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1561133171;s:7:"updated";i:1573752915;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:625;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:275:"com.atlassian.greenhopper.service.sprint.Sprint@75ff975f[id=1717,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 1,startDate=2019-05-17T12:40:22.485+01:00,endDate=2019-06-03T13:40:00.000+01:00,completeDate=2019-06-28T14:49:41.160+01:00,sequence=1717,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1797";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"Review and update the MR pages being written";s:11:"description";s:113:"Review the MEIFMR Confluence pages and proposal pages being written by the team and make any updates if required.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:79200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1559544002;s:7:"updated";i:1573752895;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:626;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:275:"com.atlassian.greenhopper.service.sprint.Sprint@75ff975f[id=1717,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 1,startDate=2019-05-17T12:40:22.485+01:00,endDate=2019-06-03T13:40:00.000+01:00,completeDate=2019-06-28T14:49:41.160+01:00,sequence=1717,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1796";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:55:"Write the MEIFMR-230 proposal for firmware update types";s:11:"description";s:1019:"This task involves studying which firmware update types we should support in MEIF and possibly which new firmware update types should we add to MEIF. The study should be carried out in the context of our desire to support rolling out firmware updates which would make sense in the practical deployment of an IoT system and which can be implemented using present technologies (i.e. by extending swupdate).

We also need to see whether we need to add back support for Flatpak and Docker images and whether these need to be handled natively or as data updates.

We also need to keep the following aspects in mind when considering firmware update types:
 * Support for rolling back the update if something goes wrong
 * Correctly processing/handling the dependencies of an update package
 * Determining the state of the current system (the version of firmware/packages it is currently running) in comparison with the newer package being rolled out and deciding whether the update is applicable to this device or not.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:158400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1561133091;s:7:"updated";i:1573752921;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:627;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:275:"com.atlassian.greenhopper.service.sprint.Sprint@75ff975f[id=1717,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 1,startDate=2019-05-17T12:40:22.485+01:00,endDate=2019-06-03T13:40:00.000+01:00,completeDate=2019-06-28T14:49:41.160+01:00,sequence=1717,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1795";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:48:"Perform Nucleus footprint analysis for MEIFMR-58";s:11:"description";s:1045:"Shafique needs to decide which MCU based target boards to recommend for MEIFMR-58. For this purpose he needs some information from the engineering team to suggest the hardware specs (RAM, ROM size) on which MEIF is capable of running.

For this task you need to analyze the MEIF product's footprint on Nucleus. This analysis needs to calculate the MEIF footprint in the following configurations:
 * Footprint of MEIF for each cloud with all other clouds disabled (hawkbit, azure, aws, mindsphere)
 * Footprint of MEIF with certain features disabled (if applicable, such as firmware update support disabled, or device commands disabled)
 * Also include the footprint numbers of the Nucleus Bootloader

Memory consumption should be calculated with respect to the following metrics: Peak dynamic memory usage, static data size (data + bss) and text size. Any product behavior which effects memory usage should also be accounted for, e.g. embedding of a factory image into the bootloader, or any requirements to copy an image from ROM to RAM.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:165600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1561552091;s:7:"updated";i:1573752903;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:628;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:275:"com.atlassian.greenhopper.service.sprint.Sprint@75ff975f[id=1717,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 1,startDate=2019-05-17T12:40:22.485+01:00,endDate=2019-06-03T13:40:00.000+01:00,completeDate=2019-06-28T14:49:41.160+01:00,sequence=1717,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1794";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:65:"Study legacy implementation and update MEIFMR-172 confluence page";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:135000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1560152023;s:7:"updated";i:1573752917;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:629;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:269:"com.atlassian.greenhopper.service.sprint.Sprint@31d9b979[id=1731,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 2,startDate=2019-07-01T05:59:35.296+01:00,endDate=2019-07-12T06:59:00.000+01:00,completeDate=2019-10-07T14:20:56.813+01:00,sequence=1731,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1793";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"Write the MEIFMR-55 proposal page for debianizing MEIF";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:43200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1562573566;s:7:"updated";i:1573752920;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:630;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1791";s:6:"sprint";a:1:{i:0;s:275:"com.atlassian.greenhopper.service.sprint.Sprint@75ff975f[id=1717,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 1,startDate=2019-05-17T12:40:22.485+01:00,endDate=2019-06-03T13:40:00.000+01:00,completeDate=2019-06-28T14:49:41.160+01:00,sequence=1717,goal=<null>]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1792";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:72:"Write the MEIFMR-55 proposal page for all-clouds and auto-start features";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:18000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1558421805;s:7:"updated";i:1573752912;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:631;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1791";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:23:"MEIF 1.4-alpha planning";s:11:"description";s:698:"An internal MEIF release is being planned, which will be work moving towards MEIF 1.4 release. This internal release is being called the MEIF 1.4-alpha. This release will be comprised of the following MRs:
 * MEIFMR-229
 * MEIFMR-228
 * MEIFMR-225
 * MEIFMR-219
 * MEIFMR-172
 * MEIFMR-55
 * MEIFMR-49
 * MEIFMR-48

The purpose of this epic is to cover the tasks in the planning phase of MEIF 1.4-alpha. This includes the following:
 * Creating MR-specific Confluence pages for certain MRs which require study or R&D before sprint planning.
 * Sprint planning and creation of all user story tickets for each requested MR. Sprints will also be created and will be ready to execute.

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1571726578;s:7:"updated";i:1573752917;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:632;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:269:"com.atlassian.greenhopper.service.sprint.Sprint@31d9b979[id=1731,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Planning Sprint 2,startDate=2019-07-01T05:59:35.296+01:00,endDate=2019-07-12T06:59:00.000+01:00,completeDate=2019-10-07T14:20:56.813+01:00,sequence=1731,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1787";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:34:"Study Azure IoT edge child devices";s:11:"description";s:485:"Setup Azure IoT Edge on a MEL device and then run MEIF on another device (such as another MEL machine) and see how the whole child and parent architecture of Azure IoT Edge works. Confirm that end-device firmware updates provided by MEIF would work in this configuration, depending on whether the remote monitoring application can be run or not. Plan how to productize this for MEIF and which topologies to support and which demo applications to write for our Azure IoT Edge offerring.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1562064084;s:7:"updated";i:1573752900;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:633;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1786";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:30:"Azure IoT Edge support in MEIF";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-1919";}s:10:"implements";a:1:{i:0;s:10:"MEIFMR-229";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587036752;s:7:"updated";i:1587036752;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:634;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1785";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"Bug fixes, improvements and housekeeping of MEIF 1.4";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:10:"MEIFMR-174";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593598475;s:7:"updated";i:1593598475;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:635;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@59de698d[id=1837,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 3,startDate=2020-02-09T16:37:53.840Z,endDate=2020-03-01T02:43:00.000Z,completeDate=2020-03-01T01:36:45.408Z,sequence=1791,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+03]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1783";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:67:"Create title area in the dialog to show error messages and warning.";s:11:"description";s:291:"MEIF GUI shows error message if supplied keys directory does not contain keys for encryption / signing. We could perhaps switch to using a "title area" dialog so that if users check encryption and there are no keys for it, then we can display an error message and disable the package button.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:187200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582638715;s:7:"updated";i:1589529124;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:5:"tools";i:1;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:636;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1769";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:43:"Azure IoT Edge Conformance - Moby vs Docker";s:11:"description";s:1035:"Ref: [https://docs.microsoft.com/en-us/azure/iot-edge/support#container-engines]
{quote}Azure IoT Edge needs a container engine to launch modules since they are implemented as containers. Microsoft provides a container engine, moby-engine, to fulfill this requirement. It is based on the Moby open-source project. Docker CE and Docker EE are other popular container engines. They are also based on the Moby open-source project and are compatible with Azure IoT Edge. Microsoft provides best effort support for systems using those container engines; however, Microsoft does not have the ability to ship fixes for issues in them. For this reason, Microsoft recommends using moby-engine on production systems.

 

!https://docs.microsoft.com/en-us/azure/iot-edge/media/support/only-moby-for-production.png!
{quote}
 
 * Explore Moby vs Docker option since we need our solution to work with Moby instead of docker because Microsoft has placed that as a requirement for Azure IoT Edge conformance.
 * Run Moby on MEL.

 

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1556098114;s:7:"updated";i:1573752908;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:637;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1786";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1767";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:54:"Study Azure IoT edge and perform MEIF firmware updates";s:11:"description";s:569:"This task involves the following:
 * Set up Azure IoT Edge
 * Carry out firmware updates on the Edge device using MEIF running outside the Docker container (document this setup)
 * Explore containerizing MEIF so that it can carry out a firmware update from within a Docker container. Also discuss this with Frans as he has something similar setup for Trace where a part of trace is running in a Docker container and a certain service is running outside the Docker container.
 * Explore deploying MEIF as a Docker "module" possibly using VS Code to build the module.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:585060;s:9:"timespent";i:585060;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1559047625;s:7:"updated";i:1580718543;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:638;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:3:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";i:1;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";i:2;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1758";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:79:"Remove the hawkBit section from the IoT related appnote and fix install.sh typo";s:11:"description";s:601:"The hawkBit section needs to be removed from the following AppNote as this has already been documented in the MEIF getting started guide:

[https://support.mentor.com/en/knowledge-base/MG600783]

Also check whether any other adjustments need to be made to the AppNote, such as freezing the package versions instead of suggesting installing the latest versions.

One other fix required in the AppNote is to fix the install.sh script to use the correct sh-bang without a space after the "#". Also see if the script can be made more portable by removing Bash-specific constructs if easily possible.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:46800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582208258;s:7:"updated";i:1582784622;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:639;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@2c8c9b5e[id=1740,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 2,startDate=2020-01-20T08:11:14.343Z,endDate=2020-02-07T08:11:00.000Z,completeDate=2020-02-10T13:23:45.766Z,sequence=1747,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1720";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:43:"Code review changes for industrial-meif PR ";s:11:"description";s:125:"https://stash.alm.mentorg.com/projects/MEIF/repos/industrial-meif/pull-requests/5/overview needs changes suggested by Cedric.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1579763874;s:7:"updated";i:1580288814;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:640;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1692";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"Separate MEIF documentation from code in SCM";s:11:"description";s:500:"Per [~mhussein], we need to separate MEIF documentation from code in SCM. At present they both are located within the same repository. This can be problematic when attempting to fetch updated release documentation after the product is built amd also interfere with tagging code that was actually used in the build. Ideally, MEIF documentation should live in its own repository, which then can be updated even after a build, but before a release and still be tagged correctly with the code repository.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:59400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1565389817;s:7:"updated";i:1582646914;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:641;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2427";s:6:"sprint";a:1:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1615";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:29:"Revisit MEIF Debian packaging";s:11:"description";s:2400:"Update MEIF Debian packaging as follows, to make it suitable for pre-built deployment on production systems such as the IPC IoT Device Solution:
 * Provide a single Debian package (or multiple, if targeting multiple architectures) such as meif_1.4.0_arm64.deb which contains an MEIF build with all clouds enabled and with all their default sample demos ready to run (CLOUD=all enablement in MEIF-1850).
 * We shouldn't assume / rely on Isar to build these packages either (especially when targeting pristine Debian/Ubuntu systems). An ISAR system might not be present on the target distribution, so the Debian package should preferably be built using MEIF's CMake system instead of bitbake recipes – (Needs further discussion - we may decide to use ISAR for now.)
 * MEIF should be packaged as a regular Debian package - that is solely by using debian/\{control,install,rules,etc.}
 * Dependencies of MEIF should be expected as separate Debian packages, instead of being built from source. Try to rely on existing Debian packages where possible instead of building and/or packaging our own. See related tickets section below for possible separation of Azure device SDK from MEIF.
 * Installation of all supporting MEIF files, such as configuration (meif.ini), systemd start-up scripts, first-boot configuration, PID file, supporting scripts, user/group, should all be done within the Debian package and not by external manually run scripts or manual user steps and neither should you expect Bitbake recipes to perform such customizations.
 * A clean uninstall of MEIF should also be supported if the user removes its Debian package.

 Open questions: should binaries with debugging info and unstripped symbols be provided in the base package or in the -dev package?

Related tickets:
 * MEIF-2431: -dev Debian package creation
 * MEIF-2434: Use external Debian package for Azure device SDK on Omni
 * Not currently included in the IoT Device Solution project but a related ticket is MEIF-2417

-You may want to add a special variant (e.g. all) which would build all supported variants into different build folders and then create <package>.install files in the debian folder to ship the bits you need in each package. You could also have have the debian/rules file sequentially call cmake with different CLOUD settings as well as different build folders. Either way would be fine.-";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:288000;s:9:"timespent";i:230400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589764012;s:7:"updated";i:1592903727;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:4:"meif";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:642;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@5d05801b[id=1738,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 18,startDate=2019-12-16T04:34:00.321Z,endDate=2019-12-30T04:34:00.000Z,completeDate=2019-12-30T06:08:09.787Z,sequence=1744,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1292";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:43:"env: linux: fix warnings in thread library ";s:11:"description";s:254:"Conversions from pointers to int emit warnings on 64-bit (LP64) systems.
The casts are safe if the API is followed for returning a thread's
status: add a comment to that effect and add an explicit cast to
intptr_t before casting to either int or pointer.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:72000;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1577170786;s:7:"updated";i:1581413589;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:643;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1291";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:41:"AWS: Fix leaking fd when getting CPU info";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1574771521;s:7:"updated";i:1581413595;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:644;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1289";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"DEVCMD_Register() does not return error if table is full";s:11:"description";s:135:"The command was not registered, as expected if the table was full, but
 the DEVCMD_Register() function would still return MEIF_SUCCESS.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1574841200;s:7:"updated";i:1581413600;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:645;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1288";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:45:"AWS: remove aws_firmware_update_is_app_update";s:11:"description";s:122:"We can make use of the fact that returning 0 from handle_update() will prevent rebooting when doing an app update instead.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1574925713;s:7:"updated";i:1581413606;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:646;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1148";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:43:"JSON generator library does not link on MEL";s:11:"description";s:708:"When {{JSON_Double_To_String}} writes the exponent, it currently does a {{NCL_Itoa}} then a {{UTIL_Uitoa}} to create the exponent string. The {{NCL_Itoa}} is unnecessary, since they result in the same string, and both calls write to the same memory, the call to {{UTIL_Uitoa}} stomping on the results of {{NCL_Itoa}}.

Looking at the history of the file in the Nucleus product, it seems that this came from erroneous merge {{6752a76d}} that overrode what commit {{07b4f6ec}} changed.

In MEIF, this prevents the JSON generator library from building on Linux, since the {{NCL_Itoa}} does not exist.

The issue exists also in the Nucleus product, but is only a performance issue because of the redundant calls.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:1800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563797465;s:7:"updated";i:1581413611;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:7:"runtime";i:1;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:647;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:251:"com.atlassian.greenhopper.service.sprint.Sprint@3a881816[id=1737,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2019 Sprint 17,startDate=2019-11-25T11:28:01.602Z,endDate=2019-12-16T11:28:00.000Z,completeDate=2019-12-16T04:28:04.818Z,sequence=1743,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1147";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:44:"Possible buffer overflow in JSON_Parser_Next";s:11:"description";s:440:"The {{name}} parameter is a fixed-size buffer passed from the user, but {{JSON_Parser_Next}} copies to it without checking if it would overflow:
{code:java}
strcpy(name, parser_handle->current_name);{code}
The buffer size is not passed to {{JSON_Parser_Next}}, so there is no way for the function to currently verify the boundaries before writing to it.

The same issue exists in the Nucleus product since that library was taken from there.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:0;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1563796740;s:7:"updated";i:1581413618;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:648;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@3b9f1f99[id=1735,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - Sprint 2,startDate=2019-07-22T14:20:14.990+01:00,endDate=2019-08-02T15:20:00.000+01:00,completeDate=2019-08-05T13:52:04.921+01:00,sequence=1737,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1146";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:73:"Possible buffer overflows in DEVCMD_List_Commands and DEVCMD_Command_Help";s:11:"description";s:307:"In both functions, an {{output}} buffer is allocated and filled, without verifying if the added contents fit in the buffer.

A pointer to {{output}} should also be moved to the end of the filled data for performance reasons, rather than starting from the start of the buffer every time something is added.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:115200;s:9:"timespent";i:115200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1563797516;s:7:"updated";i:1582181836;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:2:{i:0;s:3:"nuc";i:1;s:7:"fa-demo";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:649;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@2a569bd1[id=1952,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 6,startDate=2020-04-13T13:01:29.575+01:00,endDate=2020-05-01T05:01:00.000+01:00,completeDate=2020-05-06T05:40:35.192+01:00,sequence=1952,goal=]";i:1;s:265:"com.atlassian.greenhopper.service.sprint.Sprint@37bd203e[id=1984,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 7,startDate=2020-05-04T05:41:15.280+01:00,endDate=2020-05-21T21:41:00.000+01:00,completeDate=2020-06-01T13:59:30.835+01:00,sequence=1984,goal=]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1138";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:89:"IDE Markers: Opening source files in IDE give error markers in IDE although build is fine";s:11:"description";s:616:"*Scenario*

MEIF AWS demo project is being built using advantech UNO ADE (ade-x86_64-console-image-uno-2473g-mel-0.0.1515728186). The project built fine but when source files are opened IDE, Error Markers appear. (PFA)

Build Console: attached

*Steps to Reproduce*
 *  - Install MEL ADE for Advantech UNO
 *  - Create a new C Project
 *  File -> New C Project
 *  - Select MEIF AWS Demo Project
 *  - Click Next and select ADE for UNO.
 *  - Click finish
 *  - Build the project 
 *  - Now in project explorer open all source files: 
 *  - Error Marker would appear and Problems View would be Populated ";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"relates to";a:1:{i:0;s:9:"NUMW-5709";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:19800;s:10:"resolution";s:16:"Cannot Reproduce";s:14:"resolutiondate";i:1587121567;s:7:"updated";i:1589280865;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:20:"meif-2017.12-qa-bugs";i:1;s:9:"meifmr-59";i:2;s:3:"mel";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:650;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@59de698d[id=1837,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 3,startDate=2020-02-09T16:37:53.840Z,endDate=2020-03-01T02:43:00.000Z,completeDate=2020-03-01T01:36:45.408Z,sequence=1791,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+03]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1133";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:88:"Cleaning the meif application project should not clean the static library linked with it";s:11:"description";s:2498:"*Scenario*

Cleaning aws_demo (application) also cleans the meif library to which it is linked.

Mostly Cleaning the application project does not clean the static library linked with it

The Global Build Console after cleaning demo project is:
{quote}\{code}

15:27:01 **** Clean-only build of configuration Debug for project aws_demo ****
 cs-make clean 
 cs-rm -rf aws_demo.out ./src/nucleus/load_config.d ./src/nucleus/nuc_aws.d ./src/aws.d ./src/aws_devcmds.d 
 cs-rm -rf "C:/mgc/MEIF/2017.12/RC/RC1/wc_RC/aws_cdt/samples/aws/Debug/src/aws.o" "C:/mgc/MEIF/2017.12/RC/RC1/wc_RC/aws_cdt/samples/aws/Debug/src/aws_devcmds.o" "C:/mgc/MEIF/2017.12/RC/RC1/wc_RC/aws_cdt/samples/aws/Debug/src/nucleus/load_config.o" "C:/mgc/MEIF/2017.12/RC/RC1/wc_RC/aws_cdt/samples/aws/Debug/src/nucleus/nuc_aws.o" aws_demo.out aws_demo.out

15:27:01 Build Finished (took 259ms)

15:27:01 **** Clean-only build of project MEIFLibrary@aws_cdt ****
 "C:\\mgc\\embedded\\RS_DW_ASYNC\\ARM-DW-Async\\RS_ARM\\readystart-arm\\nucleus\\tools\\bin\\winnt\\x86
make.exe" clean 
 C:/mgc/embedded/RS_DW_ASYNC/ARM-DW-Async/RS_ARM/readystart-arm/nucleus/tools/bin/winnt/x86/make -f CMakeFiles/Makefile2 clean
 make[1]: Entering directory `C:/mgc/MEIF/2017.12/RC/RC1/wc_RC/aws_cdt'
 C:/mgc/embedded/RS_DW_ASYNC/ARM-DW-Async/RS_ARM/readystart-arm/nucleus/tools/bin/winnt/x86/make -f CMakeFiles/meif.dir/build.make CMakeFiles/meif.dir/clean
 make[2]: Entering directory `C:/mgc/MEIF/2017.12/RC/RC1/wc_RC/aws_cdt'
 "C:/Program Files/CMake/bin/cmake.exe" -P CMakeFiles/meif.dir/cmake_clean.cmake
 make[2]: Leaving directory `C:/mgc/MEIF/2017.12/RC/RC1/wc_RC/aws_cdt'
 C:/mgc/embedded/RS_DW_ASYNC/ARM-DW-Async/RS_ARM/readystart-arm/nucleus/tools/bin/winnt/x86/make -f samples/aws/CMakeFiles/aws_demo.dir/build.make samples/aws/CMakeFiles/aws_demo.dir/clean
 make[2]: Entering directory `C:/mgc/MEIF/2017.12/RC/RC1/wc_RC/aws_cdt'
 cd C:/mgc/MEIF/2017.12/RC/RC1/wc_RC/aws_cdt/samples/aws && "C:/Program Files/CMake/bin/cmake.exe" -P CMakeFiles/aws_demo.dir/cmake_clean.cmake
 make[2]: Leaving directory `C:/mgc/MEIF/2017.12/RC/RC1/wc_RC/aws_cdt'
 make[1]: Leaving directory `C:/mgc/MEIF/2017.12/RC/RC1/wc_RC/aws_cdt'

15:27:02 Build Finished (took 460ms)

\{code}
{quote}
 

*Steps to Reproduce*

 - Import meif-library and sample aws_demo in IDE

 - build the demo project

 - Now right click aws_demo and click Clean Project

 - The Global Build console is as shown above

 - Both library and demo (application) have been cleaned";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:10:"relates to";a:1:{i:0;s:9:"NUCB-3190";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:0;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1573957685;s:7:"updated";i:1582181939;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:20:"meif-2017.12-qa-bugs";i:1;s:9:"meifmr-59";i:2;s:3:"nuc";i:3;s:3:"rc1";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:651;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@59de698d[id=1837,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 3,startDate=2020-02-09T16:37:53.840Z,endDate=2020-03-01T02:43:00.000Z,completeDate=2020-03-01T01:36:45.408Z,sequence=1791,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+03]";}s:12:"story_points";i:0;s:3:"key";s:9:"MEIF-1089";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:100:"Binaries for sample demo formed in meif library output directory when imported as a Makefile project";s:11:"description";s:1154:"*Scenario*
MEIF application when imported as C/C++ project : Import > General > Existing Project into workspace ,  the binaries are generated in application 's build configuration folder as in Debug folder.
but when both meif library and application are imported as a Makefile project : Import > C/C++ > Existing Code as Makefile project.
On building application, binary is generated in meif library *build* folder.
Could it be kept consistent?
As in when a user builds an application project it expects output binary in the application folder.
*Moreover, just cleaning the application is also ineffective in this case*
*Steps to Reproduce*
 - Configure Meif library with Apps checked for *Hawkbit* Cloud in CMake GUI and generate files
 - In RS IDE ,Import > C/C++ > Existing Code as Makefile project, give the Meif-build binaries folder.
 - Build the imported project,
 -- meif-lib.a is generated in *build* folder
 - Now Import > C/C++ > Existing Code as Makefile project, give the Meif-build > samples folder
 - Build the imported project
 - Now you have to refresh the previously imported libary project to see application binaries in *build* folder";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:0;s:10:"resolution";s:9:"Not a Bug";s:14:"resolutiondate";i:1581307895;s:7:"updated";i:1581307895;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:4:{i:0;s:20:"meif-2017.12-qa-bugs";i:1;s:9:"meifmr-59";i:2;s:3:"tc1";i:3;s:5:"tools";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:652;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-1785";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@36831ea0[id=1741,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 3,startDate=2020-02-10T13:25:38.843Z,endDate=2020-02-28T13:25:00.000Z,completeDate=2020-03-02T12:52:15.327Z,sequence=1748,goal=]";}s:12:"story_points";i:0;s:3:"key";s:8:"MEIF-944";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:56:"SWUpdate: Trailing / in HAWKBIT_SERVER_URL causes issues";s:11:"description";s:1334:"I finally figured out the issue after much debugging!

The issue was that I had a trailing “/” at the end of the HAWKBIT_SERVER_URL assignment:
“http://ec2-18-216-162-135.us-east-2.compute.amazonaws.com:8080/”

This was causing swupdate to add an extra leading “/” to the GET request:
GET //default/controller/v1/e0:dc:a0:10:ab:f3, which caused hawkbit server to return 
{"config":{"polling":{"sleep":"00:00:30"}},"_links":
{"deploymentBase":{"href":"http:// ec2-18-216-162-135.us-east-2.compute.amazonaws.com:8080/default/controller/v1/e0:dc:a0:10:ab:f3/default/controller/v1/e0:dc:a0:10:ab:f3/deploymentBase/17?c=426376215"},
"configData":{"href":"http:// ec2-18-216-162-135.us-east-2.compute.amazonaws.com:8080/default/controller/v1/e0:dc:a0:10:ab:f3/default/controller/v1/e0:dc:a0:10:ab:f3/configData"}}}

Without the trailing “/”, swupdate issues the following GET request:
GET /default/controller/v1/e0:dc:a0:10:ab:f3, to which hawkbit server returns:
{"config":{"polling":{"sleep":"00:00:30"}},_links": 
{"deploymentBase":{"href":"http://ec2-18-216-162-135.us-east-2.compute.amazonaws.com:8080/default/controller/v1/e0:dc:a0:10:ab:f3/deploymentBase/17?c=426376215"},
"configData":    {"href":"http://ec2-18-216-162-135.us-east-2.compute.amazonaws.com:8080/default/controller/v1/e0:dc:a0:10:ab:f3/configData"}}}
";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:43200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1561709506;s:7:"updated";i:1581939165;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:1:{i:0;s:7:"runtime";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:653;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:11:"INDOSMR-552";s:6:"status";s:9:"Committed";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:61:"MEIF enhancements needed for reference security configuration";s:11:"description";s:613:"This MR relates to the reference security configuration for Device On-boarding and Software Update via Cloud as requested under INDOSMR-532. This particular MR only deals with the underlying MEIF product verification (or possibly some minor enhancements) needed for the reference configuration.

Verify MEIF with the following Omni 2.0 features and configurations, to ensure MEIF is compatible with them and make adjustments in MEIF where required:
 * SELinux (including testing with iotedge)
 * TPM and encrypted file system
 * Firewall (including testing with iotedge)
 * x509 based certificates workflow";s:10:"issuelinks";a:1:{s:3:"out";a:2:{s:14:"implemented by";a:1:{i:0;s:9:"MEIF-2428";}s:10:"relates to";a:1:{i:0;s:11:"INDOSMR-532";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1595308977;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:654;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:11:"INDOSMR-548";s:6:"status";s:9:"Committed";s:14:"statuscategory";s:10:"INPROGRESS";s:7:"summary";s:56:"MEIF enhancements needed for IPC127E Azure IoT Edge Demo";s:11:"description";s:498:"This MR relates to the productization of the IPC127E Azure IoT Edge demo application, as requested under INDOSMR-551. This particular MR only deals with the underlying MEIF product enhancements needed for the Azure IoT Edge demo, or the enhancements requested by the demo team.

The following enhancements are required in MEIF:

 
 * Health diagnostics commands to get stats for CPU, memory, disk, SSD, thermal
 * Firmware update information including log messages and installation progress";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:2:{i:0;s:9:"MEIF-2454";i:1;s:9:"MEIF-2552";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:0:"";s:14:"resolutiondate";s:0:"";s:7:"updated";i:1592390628;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:655;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:11:"INDOSMR-543";s:6:"status";s:11:"Implemented";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:63:"Provide a reference Docker-based Software Update Configuration ";s:11:"description";s:589:"Currently MEIF supports Docker/DockerCompose based updates using a post-ins script as documented at following link:

[https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-DockerComposeStack]

 This request is to make docker based update using MEIF command interface. This will still use the similar approach behind the scene but will present a consistent MEIF interface to user.

 
----
Associated engineering page: [https://confluence.alm.mentorg.com/display/PS/INDOSMR-543%3A+Docker-based+software+update+configuration]";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:2:{i:0;s:9:"MEIF-2551";i:1;s:9:"MEIF-2453";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1595309170;s:7:"updated";i:1595309170;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:656;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:11:"INDOSMR-533";s:6:"status";s:11:"Implemented";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:35:"Pre-built binary packaging for MEIF";s:11:"description";s:757:"* Provide a single MEIF Debian package which contains the agents for all the different supported clouds (AWS, Azure, MindSphre, {color:#00875a}Azure-Edge{color},  -HawkBit-)
 * The cloud specific configuration will be done through config file (meif.ini)
 * Provide First Boot configuration to select desired cloud
 * Provide ADE support for user to develop application for desired cloud selected at First Boot
 * Provide on-device development support using MEIF libraries
 * Provide pre-built samples for each cloud with an option to automatically run them as service at First Boot

*Update (15 Jul 2020)*: Updated the description above by adding Azure Edge and removing hawkBit from the first bullet in the description above, as highlighted by QA.";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:14:"implemented by";a:2:{i:0;s:9:"MEIF-2550";i:1;s:9:"MEIF-2427";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593419997;s:7:"updated";i:1594809354;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:15:"esd requirement";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:657;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:302:"com.atlassian.greenhopper.service.sprint.Sprint@5189d427[id=1845,rapidViewId=314,state=ACTIVE,name=CB - 2020 Sprint 11,startDate=2020-07-26T22:24:09.520+01:00,endDate=2020-08-16T22:24:00.000+01:00,completeDate=<null>,sequence=1845,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+11]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-13440";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:70:"Getting error while installing MEIF installer on top of Omni installer";s:11:"description";s:833:"1.Install Omni: [ftp://inpftp.ina.mentorg.com/pub/omni/200715_0400/]
 2.Install meif installer on the same path where omni is installed : [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200722-222208/outputs/meif-linux-x64-1.4.0.bin]

Expected Result:

MEIF should get install successfully without any error

Actual Result:

Getting below error while installing MEIF:

!meif-installation-error.png|thumbnail!

 

*Resolution*

Please use [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/release_12.0.FirOMNI/] only for MEIF 1.4.0 builds which are triggered on demand only.
 Please {color:#de350b}*do not*{color} use [ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/] for anything regardless of age as these are just sanity build to ensure code builds correctly. This location contains a README.txt.

 ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1596121382;s:7:"updated";i:1596121382;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:658;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@76b8bba5[id=1844,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 10,startDate=2020-07-05T17:37:37.002+01:00,endDate=2020-07-26T17:37:00.000+01:00,completeDate=2020-07-26T22:06:20.816+01:00,sequence=1844,goal=]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-13350";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:122:"Automatically uncheck compression checkbox when encryption checkbox is enabled and vice versa for MEL Flex Platform in MHT";s:11:"description";s:172:"For MEL FLex Platform user is able to select both Compress and Encrypt at same time.The compression check box should be disabled when encryption is selected and vice versa.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:5:"fixes";a:1:{i:0;s:9:"MEIF-2582";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:36000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594800106;s:7:"updated";i:1595882558;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:659;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@3654cde3[id=1843,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 9,startDate=2020-06-14T21:29:12.965+01:00,endDate=2020-07-05T09:29:00.000+01:00,completeDate=2020-07-05T17:26:57.684+01:00,sequence=1843,goal=]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-13279";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:21:"Add MHT docs to build";s:11:"description";s:274:"Need to add the MHT document created in https://stash.alm.mentorg.com/projects/CB/repos/cb_iot/pull-requests/66/overview to the build.

We should create a separate IU for it under MHT group, and the docs need to be installed in the shared docs location.

cc. [~mbozeman]";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593817790;s:7:"updated";i:1593817790;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:660;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@3654cde3[id=1843,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 9,startDate=2020-06-14T21:29:12.965+01:00,endDate=2020-07-05T09:29:00.000+01:00,completeDate=2020-07-05T17:26:57.684+01:00,sequence=1843,goal=]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-13225";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:67:"CODEBENCH: Connection time out issue while Debug cloud demo project";s:11:"description";s:3006:"*Issue:*
----------
Getting connection time issue while debugging cloud project

*Installer:*
| OMNI | ftp://ftpnew.alm.mentorg.com/pub/omni/200525_0400/ |
| MEIF | ftp://ftpnew.alm.mentorg.com/pub/meif/jenkins/master/200604-085527/outputs/ |

*Steps:*
------------
1. Followed confluence link for ade build and install
https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide#MEIF-1.4-GettingStartedGuide-BuildandInstalltheADEinCodeBench
2. Followed MEIF GS for Build and debug project in codebench

3. MEIF_CLOUD is set to all while building image and ade

4. Stopped meif-agent-autostart before starting debug
{code}
root@allcloud:~# systemctl stop meif-agent-autostart
root@allcloud:~# 
root@allcloud:~# systemctl status meif-agent-autostart
● meif-agent-autostart.service - MEIF Agent Autostart Service
   Loaded: loaded (/lib/systemd/system/meif-agent-autostart.service; enabled; vendor preset: enabled)
   Active: inactive (dead) since Tue 2020-06-09 15:27:39 IST; 8s ago
  Process: 1086 ExecStartPre=/usr/bin/meif-agent-autostart-config (code=exited, status=0/SUCCESS)
  Process: 1093 ExecStart=/usr/bin/meif-agent (code=killed, signal=TERM)
 Main PID: 1093 (code=killed, signal=TERM)

Jun 09 15:26:57 allcloud systemd[1]: Starting MEIF Agent Autostart Service...
Jun 09 15:26:57 allcloud systemd[1]: Started MEIF Agent Autostart Service.
Jun 09 15:26:57 allcloud meif-agent[1093]: mkdir: cannot create directory ‘/etc/meif/swupdate/traceme-2020-06-09_15-26-57’: Permission denied
Jun 09 15:26:57 allcloud meif-agent[1093]: touch: cannot touch '/etc/meif/swupdate/traceme-2020-06-09_15-26-57/traceme.log': No such file or directory
Jun 09 15:27:39 allcloud systemd[1]: Stopping MEIF Agent Autostart Service...
Jun 09 15:27:39 allcloud systemd[1]: meif-agent-autostart.service: Main process exited, code=killed, status=15/TERM
Jun 09 15:27:39 allcloud systemd[1]: meif-agent-autostart.service: Succeeded.
Jun 09 15:27:39 allcloud systemd[1]: Stopped MEIF Agent Autostart Service.
root@allcloud:~# 
{code}
Expected Output:
------------------
Debug should start and can see breakpoints

Actual Output:
------------------
GDB server and cloud agent is getting started in target, But in codebench getting connection time out issue.

{code}
root@allcloud:~# ps aux | grep aws
root      2689  0.0  0.0   9776  2276 pts/1    S    15:34   0:00 /usr/bin/gdbserver localhost:10000 /run/user/0/project_aws-demo1591696795691
root      2693  0.0  0.0    444     4 pts/1    t+   15:34   0:00 /run/user/0/project_aws-demo1591696795691
root      2698  0.0  0.0   6384   824 pts/0    S+   15:34   0:00 grep aws
root@allcloud:~# ps aux | grep gdb
root      2689  0.0  0.0   9776  2276 pts/1    S    15:34   0:00 /usr/bin/gdbserver localhost:10000 /run/user/0/project_aws-demo1591696795691
root      2700  0.0  0.0   6384   892 pts/0    S+   15:35   0:00 grep gdb
root@allcloud:~# 
{code}
 !connection_time_out_issue.JPG|thumbnail! ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:48600;s:10:"resolution";s:16:"Cannot Reproduce";s:14:"resolutiondate";i:1592390943;s:7:"updated";i:1592828449;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:3:"mel";i:2;s:2:"qa";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:661;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@721e9539[id=1841,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 7,startDate=2020-05-03T23:31:29.451+01:00,endDate=2020-05-24T21:48:00.000+01:00,completeDate=2020-05-25T16:52:39.634+01:00,sequence=1841,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+07]";i:1;s:260:"com.atlassian.greenhopper.service.sprint.Sprint@76b8bba5[id=1844,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 10,startDate=2020-07-05T17:37:37.002+01:00,endDate=2020-07-26T17:37:00.000+01:00,completeDate=2020-07-26T22:06:20.816+01:00,sequence=1844,goal=]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12905";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:91:"Semantic errors and warnings appear while building MEIF cloud applications in CodeBench IDE";s:11:"description";s:1079:"*Steps Followed*
 # Followed [MEIF-1.4 - Getting Started Guide|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide] to build ADE for Mindconnect.
 # Installed ADE in CodeBench IDE and restarted IDE.
 # Created _MEIF Mindconnect Demo Project_ using the installed ADE.
 # Right click the project and select _Properties_. Go to _C/C++ Build > Settings_.
 # In the _Tool Settings_ tab, select _Debian x86_64 GNU/Linux C Compiler (v2.0)_ > _Optimization_ and set _Optimization Level_ to _None (-O0)._ Now select _Debugging_ and set _Debug Level_ to _Maximum (-g3)_.
 # Click on _Apply and Close_.
 # Right click the project and select _Build Project_.

*Results*
 * Semantic errors appear in Problems view. These errors may not appear immediately when the project is built and appear on opening the source files.
 !image-2020-04-30-21-24-42-915.png|thumbnail!
 * A Path Entry Problem type warning also appears.
 !image-2020-05-05-11-25-33-746.png|thumbnail!

Please see [^issue-report-20200430-92509.zip] for details.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:118800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1594923423;s:7:"updated";i:1594979796;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:3:"tc2";i:3;s:5:"tools";i:4;s:13:"push-upstream";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:662;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:2:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";i:1;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@721e9539[id=1841,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 7,startDate=2020-05-03T23:31:29.451+01:00,endDate=2020-05-24T21:48:00.000+01:00,completeDate=2020-05-25T16:52:39.634+01:00,sequence=1841,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+07]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12693";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:67:"Unable to build MEIF Azure/AWS/Mindconnect demo with Release config";s:11:"description";s:6526:"*Steps Followed*
 # Followed [MEIF-1.4 - Getting Started Guide|https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+-+Getting+Started+Guide] to build service stick image and ADE for Azure. Due to MELO-321, the workaround mentioned in the PR at https://jira.alm.mentorg.com/browse/MELO-321?focusedCommentId=702817&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-702817 was manually applied.
 # Install ADE in CodeBench IDE and restarted IDE.
 # Go to _File > New > C Project_.
 # Provide any valid name for project and select _Executable > MEIF Azure Demo Project_. Click _Next_.
 # Select the installed ADE in _MEL ADE_ combo box. Click _Next_.
 # Uncheck _Create debug launch configuration_. Click _Finish_.
 # Right click the project and select _Build Configurations > Set Active > Release_.
 # Right click the project and select _Build Project_.

*Results*

When I create the project, I see following warnings in Problems view:

!image-2020-04-17-12-51-22-730.png|thumbnail!

After changing the build configuration to _Release_, following additional warnings also appear:

!image-2020-04-17-12-51-52-251.png|thumbnail!
----
h1. *Problem 1: Incorrect docker image*

*Update*: As pointed out by [~asaleem], following is the error that appears when a newly created project is built with Release configuration (as per the steps mentioned in issue's description).
{code:java}
07:53:16 **** Build of configuration Release for project azure_demo_release_config ****
[Running in image <mel-docker_debian10-base-20200410142533:v12.0>]
make all
[1] Invoking Pre-Build commands in the host:
--------------------------------------------
[2] Invoking Build commands in the container: 944c3bb4099c023426efa44082d39caacd28ce3350526061826a03188ade1204 
---------------------------------------------
Building file: ../src/linux/azure_trace_hooks.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -O3 -w -c -fmessage-length=0 -fcommon -DNDEBUG -MMD -MP -MF"src/linux/azure_trace_hooks.d" -MT"src/linux/azure_trace_hooks.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/azure_trace_hooks.o" "../src/linux/azure_trace_hooks.c"
../src/linux/azure_trace_hooks.c:24:10: fatal error: meif.h: No such file or directory
 #include "meif.h"
 ^~~~~~~~
compilation terminated.
make: *** [src/linux/subdir.mk:26: src/linux/azure_trace_hooks.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
07:53:17 Build Failed. 2 errors, 0 warnings. (took 1s.308ms)
{code}
h1. *Problem 2: pthread option enabled but flag is missing*

Whereas following error appears when a newly created project is built with default build configuration i.e. Debug, cleaned and then rebuilt with Release configuration.
----
{code:java}
13:07:04 **** Build of configuration Release for project azure_demo ****
[Running in image <ade-development-ade-mel-omni-industrial-pc-2.0.1587022316-20200416082834:latest>]
make all
[1] Invoking Pre-Build commands in the host:
--------------------------------------------
[2] Invoking Build commands in the container: 6164aa6017747c4c7ec2439edfd7b206e2c5680ffedf19b5bee56404180ae149 
---------------------------------------------
Building file: ../src/linux/azure_trace_hooks.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -fcommon -DNDEBUG -MMD -MP -MF"src/linux/azure_trace_hooks.d" -MT"src/linux/azure_trace_hooks.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/azure_trace_hooks.o" "../src/linux/azure_trace_hooks.c"
Finished building: ../src/linux/azure_trace_hooks.c
 
Building file: ../src/linux/linux_azure.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -fcommon -DNDEBUG -MMD -MP -MF"src/linux/linux_azure.d" -MT"src/linux/linux_azure.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/linux_azure.o" "../src/linux/linux_azure.c"
Finished building: ../src/linux/linux_azure.c
 
Building file: ../src/linux/swupdate_ipc.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -fcommon -DNDEBUG -MMD -MP -MF"src/linux/swupdate_ipc.d" -MT"src/linux/swupdate_ipc.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/swupdate_ipc.o" "../src/linux/swupdate_ipc.c"
Finished building: ../src/linux/swupdate_ipc.c
 
Building file: ../src/remote_monitoring.c
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I/ade/rootfs/usr/include/azureiot -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -fcommon -DNDEBUG -MMD -MP -MF"src/remote_monitoring.d" -MT"src/remote_monitoring.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/remote_monitoring.o" "../src/remote_monitoring.c"
Finished building: ../src/remote_monitoring.c
 
Building target: azure_demo
Invoking: Debian x86_64 GNU/Linux C Linker
x86_64-linux-gnu-gcc -L/ade/rootfs/usr/lib/x86_64-linux-gnu/ -Wl,-z,relro -L/ade/rootfs/usr/local/lib/x86_64-linux-gnu -L/ade/rootfs/lib/x86_64-linux-gnu -L/ade/rootfs/usr/lib/x86_64-linux-gnu -L/ade/rootfs/usr/lib/x86_64-linux-gnu64 -L/ade/rootfs/usr/local/lib64 -L/ade/rootfs/lib64 -L/ade/rootfs/usr/lib64 -L/ade/rootfs/usr/local/lib -L/ade/rootfs/lib -L/ade/rootfs/usr/lib -L/ade/rootfs/usr/x86_64-linux-gnu/lib64 -L/ade/rootfs/usr/x86_64-linux-gnu/lib -Xlinker -Map="azure_demo.map" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "azure_demo" "@objs.rsp" "@user_objs.rsp" "@libs.rsp"
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/lib/libmeif.a(linux_env_thread.c.obj): undefined reference to symbol 'pthread_join@@GLIBC_2.2.5'
/ade/sdkchroot/usr/bin/ld: /ade/rootfs/lib/x86_64-linux-gnu/libpthread.so.0: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status
make: *** [makefile:38: azure_demo] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
13:07:08 Build Failed. 3 errors, 0 warnings. (took 3s.309ms)
{code}
Please see [^issue-report-20200416-10320.zip] for details.

*Note*: This is not an issue with factorial demo.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1589195156;s:7:"updated";i:1591719471;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-225";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:663;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:258:"com.atlassian.greenhopper.service.sprint.Sprint@6e1850[id=1743,rapidViewId=263,state=CLOSED,name=MEIF 1.4 - 2020 Sprint 5,startDate=2020-03-23T22:36:13.656Z,endDate=2020-04-09T22:34:00.000+01:00,completeDate=2020-04-13T13:00:08.522+01:00,sequence=1750,goal=]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12631";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:77:"${SYSROOT_LOC}  used in include path  on mindconnect template is not working.";s:11:"description";s:1801:"i used 8th april omni installer.
i built ADE and enabled  mindconnect cloud in MEIF .

when i built the mindconnect demo i got the following error:
{code:java}
10:02:11 **** Build of configuration Debug for project mc-c ****
[Running in image <ade-development-ade-mel-omni-industrial-pc-2.0.1586491680-20200410092744:latest>]
make all In file included from /ade/rootfs/usr/include/meif/meif_internal.h:72,
                 from /ade/rootfs/usr/include/meif.h:26,
[1] Invoking Pre-Build commands in the host:
--------------------------------------------
                 from ../src/linux/linux_mindconnect.c:28:
/ade/rootfs/usr/include/meif/framework/cloud/mindconnect/include/mcl/mcl.h:20:10: fatal error: mcl/mcl_log_util.h: No such file or directory[2] Invoking Build commands in the container: bfeab593a91688b0989a7e152e22d42af00214ffe626d9080ea2c9e098ae3100 
 #include "mcl/mcl_log_util.h"
          ^~~~~~~~~~~~~~~~~~~~
---------------------------------------------
Building file: ../src/linux/linux_mindconnect.c
compilation terminated.
make: *** [src/linux/subdir.mk:20: src/linux/linux_mindconnect.o] Error 1
Invoking: Debian x86_64 GNU/Linux C Compiler
x86_64-linux-gnu-gcc -I{SYSROOT_LOC}/usr/include/meif/framework/cloud/mindconnect/include -O2 -g -w -c -fmessage-length=0 -Wformat -Werror=format-security -mtune=generic -march=x86-64 -pthread -fcommon -MMD -MP -MF"src/linux/linux_mindconnect.d" -MT"src/linux/linux_mindconnect.o" -m64 --no-sysroot-suffix --sysroot=/ade/rootfs -o "src/linux/linux_mindconnect.o" "../src/linux/linux_mindconnect.c"
"make all" terminated with exit code 2. Build might be incomplete. {code}

i modified  the mindconnect included path and replaced {color:#1d1c1d}${SYSROOT_LOC} with /ade/rootfs{color}. then the build was successfull";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:300;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1586497240;s:7:"updated";i:1586516401;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:664;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12544";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:89:"Some platforms throw error when specified in "cpio-content-types" topic in MHT help (CLI)";s:11:"description";s:430:"Launch terminal and type following command:
{code:java}
.\meif-host-tool.bat help -t cpio-content-types --platform <platform>
{code}
Error is thrown for following platforms:
 * mel_ultrazed-eg-iocc-mel_11
 * mel_uno-2473g-mel_11

Whereas, specifying following platforms do not throw error:
 * mel_v1000_11
 * omni-minnow-board-turbot-dual-e-1

Please see the following:

!image-2020-03-25-18-00-51-818.png|thumbnail!";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588243178;s:7:"updated";i:1589358702;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-228";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:665;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12542";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:84:"The output of MEIF host tool's "help -t fit-content-types" command should be updated";s:11:"description";s:515:"Please see the output of  {color:#00875a}.\meif-host-tool.bat help -t fit-content-types{color} command.
 # "image" should be replaced with "contents" as the {color:#00875a}.\meif-host-tool.bat help -t fit-content-types{color} also says the same.
 !image-2020-03-24-20-00-00-528.png|thumbnail!
 # The input file information looks redundant and should be removed as it does not show up in {color:#00875a}.\meif-host-tool.bat help -t fit-content-types{color} output.
 !image-2020-03-24-19-57-09-908.png|thumbnail!";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588252078;s:7:"updated";i:1589358484;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-228";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:666;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:4:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";i:1;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@721e9539[id=1841,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 7,startDate=2020-05-03T23:31:29.451+01:00,endDate=2020-05-24T21:48:00.000+01:00,completeDate=2020-05-25T16:52:39.634+01:00,sequence=1841,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+07]";i:2;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@6b47cc59[id=1842,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 8,startDate=2020-05-25T16:59:54.772+01:00,endDate=2020-06-15T04:59:00.000+01:00,completeDate=2020-06-14T21:20:31.570+01:00,sequence=1842,goal=]";i:3;s:259:"com.atlassian.greenhopper.service.sprint.Sprint@3654cde3[id=1843,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 9,startDate=2020-06-14T21:29:12.965+01:00,endDate=2020-07-05T09:29:00.000+01:00,completeDate=2020-07-05T17:26:57.684+01:00,sequence=1843,goal=]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12540";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:90:"Minor update required in the error message for missing keys directory for package creation";s:11:"description";s:237:"In the error messages shown below, "folder" should be changed to "directory" as the package settings also uses directory.

*GUI*

!image-2020-03-24-19-08-54-116.png|thumbnail!

*CLI*

!image-2020-03-24-19-14-28-321.png|thumbnail!";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:13:"is triggering";a:1:{i:0;s:9:"MEIF-2688";}}}s:20:"timeoriginalestimate";i:3600;s:9:"timespent";i:10800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1593814543;s:7:"updated";i:1594553936;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-228";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:667;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:319:"com.atlassian.greenhopper.service.sprint.Sprint@1e42b1d9[id=1839,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 5,startDate=2020-03-22T14:44:57.389Z,endDate=2020-04-13T01:01:00.000+01:00,completeDate=2020-04-13T01:13:51.592+01:00,sequence=1839,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+05]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12539";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:59:"Using packagefit command in MEIF Host Tool (CLI) throws NPE";s:11:"description";s:327:"*Steps Followed*

Launch terminal and generate keys using CLI version of the MEIF Host Tool. Now try to create FIT image using the keys generated above. 

*Results*

Package will be not be generated. The debug mode will show that null pointer exception has occurred.

!image-2020-03-24-14-50-03-488.png|thumbnail!  ";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:14400;s:10:"resolution";s:9:"Duplicate";s:14:"resolutiondate";i:1585818546;s:7:"updated";i:1589357097;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-228";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:668;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12535";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:52:"No error should be shown on launching MEIF Host Tool";s:11:"description";s:376:"On launching the MEIF Host Tool, error is shown in title area. The Generate Keys button is also disable which is enough.

!image-2020-03-20-19-16-35-253.png|thumbnail!

Same is the case with Package page.

Reference: https://jira.alm.mentorg.com/browse/CB-10963?focusedCommentId=657577&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-657577";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587720958;s:7:"updated";i:1589526312;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"improvement";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-228";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:669;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12534";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:85:"Redundant output directories are created when output directory name is being modified";s:11:"description";s:808:"*Steps Followed*
 * Launch MEIF Host Tool.
 * Using Generate Keys page, generate signing keys selecting any algorithm.
 * Navigate to Package page and select FIT option.
 * Provide an existing empty output directory path, keys directory created above, any sample file and content type.
 * Keep all other options to their default values.
 * Now modify the output directory name. For example, if it was {{out_sign}} previously, modify it to {{out_sign_123}}. 

*Results*
 * On entering each letter, a new directory will be created.
!image-2020-03-20-18-31-43-603.png|thumbnail!

 * Now press the Package button.
 * Package will be created in {{out_sign_123}} directory. All the intermediate directories will be empty.
 * These intermediate directories will persist even after the tool is closed.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588273233;s:7:"updated";i:1589358829;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-228";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:670;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12533";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:79:"Copyrights should be updated from Mentor Graphics to Siemens for MEIF Host Tool";s:11:"description";s:241:"Launch MEIF Host Tool and go to Help > About.

Copyrights will be of Mentor Graphics instead of Siemens.

!image-2020-03-20-18-18-10-204.png|thumbnail!

The copyright year should also be updated to the recent year. Reference: MEIF-2360";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:3600;s:9:"timespent";i:3600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1588272481;s:7:"updated";i:1589356527;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-228";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:671;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:324:"com.atlassian.greenhopper.service.sprint.Sprint@53e5b578[id=1840,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 6,startDate=2020-04-13T01:21:42.974+01:00,endDate=2020-05-03T23:38:00.000+01:00,completeDate=2020-05-03T23:22:53.745+01:00,sequence=1840,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+06]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12532";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:66:"Both Generate Keys and Package show same description in title area";s:11:"description";s:527:"Launch MEIF Host Tool.

Provide keys directory on Generate Keys page and select "Generate encryption key" and "Generate signing key" options.

!image-2020-03-20-16-12-12-430.png|thumbnail!

Navigate to Package page. Provide all the required fields for FIT option.

!image-2020-03-20-16-10-59-439.png|thumbnail!

Both pages will show same description in the title area.

If you change the {{Encrypt files}} and {{Sign files}} option, then the description will change.

!image-2020-03-20-16-30-36-056.png|thumbnail!";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:57600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1587720896;s:7:"updated";i:1589526810;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-228";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:672;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:319:"com.atlassian.greenhopper.service.sprint.Sprint@1e42b1d9[id=1839,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 5,startDate=2020-03-22T14:44:57.389Z,endDate=2020-04-13T01:01:00.000+01:00,completeDate=2020-04-13T01:13:51.592+01:00,sequence=1839,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+05]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12531";s:6:"status";s:9:"Validated";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:68:"Package button gets disable for FIT image when encryption is enabled";s:11:"description";s:846:"*Steps Followed*
 * Launch MEIF Host Tool.
 * Using Generate Keys page, generate encryption and signing keys selecting any algorithms.
 * Navigate to Package page and select FIT option.
 * Provide output directory, keys directory created above, any sample file and content type.
 * Keep all other options to their default values.

*Results*

Package button at the bottom of the page will remain disable though the GUI does not show any error.

!image-2020-03-20-15-59-26-695.png|thumbnail!

Unchecking the {{Encrypt files}} option enables Package option and package can be successfully created.

!image-2020-03-20-16-38-37-944.png|thumbnail!

It looks like package cannot be generated with encryption enabled.

*Note*: Same keys directory and other options work well for MEIF 1.3.0 tool and package can be created successfully.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:21600;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1585915036;s:7:"updated";i:1589356379;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:5:{i:0;s:16:"meif-1.4-qa-bugs";i:1;s:10:"meifmr-228";i:2;s:5:"tools";i:3;s:13:"nightly-build";i:4;s:9:"validated";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:673;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"NUCB-4869";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@2363bb02[id=1838,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 4,startDate=2020-03-01T01:37:12.078Z,endDate=2020-03-22T11:54:00.000Z,completeDate=2020-03-22T14:40:24.468Z,sequence=1838,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+04]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12505";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:64:"Handle packaging in improved MEIF demo project creation support ";s:11:"description";s:515:"Under CB-9856, we have added support of improved workflow for MEIF demo project creation. We need to add cb_relend support to make sure samples are installed at a specific locations. 

Referral: 
 - https://jira.alm.mentorg.com/browse/CB-9856?focusedCommentId=699319&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-699319
 - https://jira.alm.mentorg.com/browse/CB-9856?focusedCommentId=698509&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-698509";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:10:"relates to";a:3:{i:0;s:8:"CB-12538";i:1;s:7:"CB-9856";i:2;s:9:"MEIF-2392";}}s:2:"in";a:1:{s:10:"relates to";a:1:{i:0;s:8:"CB-12538";}}}s:20:"timeoriginalestimate";i:57600;s:9:"timespent";i:55800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584728695;s:7:"updated";i:1585114031;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:674;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:8:"CB-11949";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@59de698d[id=1837,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 3,startDate=2020-02-09T16:37:53.840Z,endDate=2020-03-01T02:43:00.000Z,completeDate=2020-03-01T01:36:45.408Z,sequence=1791,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+03]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12346";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:32:"Update Exact Access date for Fir";s:11:"description";s:469:"We need to update the exact access date for Fir to May 22nd 2020 (end of QA test cycle 2)

 

This is currently mentioned in 3 places:

1- eclipse_common: com.codesourcery.esd.license/src/com/codesourcery/esd/license/license-messages.properties This is the main reference used in the IDE and installer.

2- cb_releng: scripts/modules/licensing.py Used for the new standalone license module

3- nuc4-source: tools/bin/fuse/lib/capabilities Used in Fuse cli";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:10:"implements";a:1:{i:0;s:8:"CB-11949";}}}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:18000;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1582634813;s:7:"updated";i:1582634813;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:2:{i:0;s:10:"meif_1.4.0";i:1;s:10:"omni_2.0.0";}s:17:"issuetypecategory";s:4:"TASK";}i:675;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2227";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@2363bb02[id=1838,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 4,startDate=2020-03-01T01:37:12.078Z,endDate=2020-03-22T11:54:00.000Z,completeDate=2020-03-22T14:40:24.468Z,sequence=1838,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+04]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-12337";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:58:"Provide ADE templates for MEIF1.4 on Omni2.0(bsp IPC127E) ";s:11:"description";s:868:"To add support for ADE in MEIF1.4 we need the Tools team to provide us the files which will add MEIF sample templates in codebench for IPC127E using Omni2.0.

There are two ways this can be done

1) Use the existing method in which MEIF team provides confluence pages to Tools team and they provide the ADE files to MEIF team.

The following page is created for Tools team to help them create the ADE templates:

[https://confluence.alm.mentorg.com/display/MEIF/MEIF-1.4+Azure+Demo+Application+Build+Steps+from+CodeBench+IDE]

Pages for other templates will be created if required.

2) The workflow for the ADE generation can be improved. Tools team has prepared the following page:https://confluence.alm.mentorg.com/display/~usair/MEIF+Templates+for+MEIF+1.4

I have added a rough time estimate of 3days(one day for each template(AWS,Azure,Mindconnect).";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:6:"blocks";a:1:{i:0;s:9:"MEIF-2264";}}s:2:"in";a:1:{s:10:"relates to";a:1:{i:0;s:8:"CB-12339";}}}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:0;s:10:"resolution";s:16:"Fixed Indirectly";s:14:"resolutiondate";i:1584612792;s:7:"updated";i:1592404898;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:676;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@59de698d[id=1837,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 3,startDate=2020-02-09T16:37:53.840Z,endDate=2020-03-01T02:43:00.000Z,completeDate=2020-03-01T01:36:45.408Z,sequence=1791,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+03]";}s:12:"story_points";d:1;s:3:"key";s:8:"CB-12052";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:58:"QA: Address any feedback received for MEIF 1.4.0 test plan";s:11:"description";s:0:"";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:28800;s:9:"timespent";i:25500;s:10:"resolution";s:8:"Resolved";s:14:"resolutiondate";i:1582714209;s:7:"updated";i:1583135478;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:2:"tp";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:677;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:8:"CB-11687";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@11ec09c0[id=1835,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 1,startDate=2019-12-28T16:17:50.915Z,endDate=2020-01-18T03:12:00.000Z,completeDate=2020-01-18T23:03:48.577Z,sequence=1745,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+01]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-11894";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:29:"cb_iot updates to new eclipse";s:11:"description";s:0:"";s:10:"issuelinks";a:1:{s:2:"in";a:2:{s:5:"fixes";a:1:{i:0;s:8:"CB-11892";}s:10:"implements";a:1:{i:0;s:8:"CB-11687";}}}s:20:"timeoriginalestimate";i:7200;s:9:"timespent";i:7200;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1578479953;s:7:"updated";i:1578479953;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:2:{i:0;s:10:"meif_1.4.0";i:1;s:10:"omni_2.0.0";}s:17:"issuetypecategory";s:4:"TASK";}i:678;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:8:"CB-11892";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:37:"Recent changes break automated builds";s:11:"description";s:17192:"Recent changes to MEHV master branch / code base have broken automated builds.
https://alm-jenkins-02.alm.mentorg.com:8443/job/meif/job/meif_elm/
{code}
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO]
[INFO] default_unbranched_settings ........................ SUCCESS [  0.108 s]
[INFO] release_versions ................................... SUCCESS [  0.003 s]
[INFO] base_mvn_settings .................................. SUCCESS [  0.069 s]
[INFO] build_settings ..................................... SUCCESS [  0.081 s]
[INFO] make_settings ...................................... SUCCESS [  0.003 s]
[INFO] com.codesourcery.common.root ....................... SUCCESS [  0.003 s]
[INFO] com.codesourcery.util .............................. SUCCESS [  2.633 s]
[INFO] com.codesourcery.esd.license ....................... SUCCESS [  0.827 s]
[INFO] com.codesourcery.esd.license.linux.x86_64 .......... SUCCESS [  1.641 s]
[INFO] com.codesourcery.esd.license.win32.x86_64 .......... SUCCESS [  2.722 s]
[INFO] com.codesourcery.libs .............................. SUCCESS [  1.413 s]
[INFO] com.codesourcery.udc ............................... SUCCESS [  0.878 s]
[INFO] com.codesourcery.util.eclipse ...................... SUCCESS [  1.006 s]
[INFO] com.codesourcery.runtime.util ...................... SUCCESS [  0.740 s]
[INFO] com.codesourcery.p2 ................................ SUCCESS [  0.787 s]
[INFO] com.mentor.embedded.license ........................ SUCCESS [  0.898 s]
[INFO] com.codesourcery.license.feature ................... SUCCESS [  0.743 s]
[INFO] com.codesourcery.common.feature .................... SUCCESS [  0.580 s]
[INFO] com.codesourcery.common.update ..................... SUCCESS [  3.580 s]
[INFO] com.mentor.iot.tools.root .......................... SUCCESS [  0.006 s]
[INFO] com.mentor.common.cli .............................. SUCCESS [  0.570 s]
[INFO] com.mentor.common.logging .......................... SUCCESS [  0.642 s]
[INFO] com.mentor.common.compress ......................... SUCCESS [  0.703 s]
[INFO] com.mentor.iot.tools.ssl ........................... SUCCESS [  1.004 s]
[INFO] com.mentor.iot.tools.core .......................... SUCCESS [  0.916 s]
[INFO] com.mentor.iot.tools.mkimage.linux.x86 ............. SUCCESS [  0.939 s]
[INFO] com.mentor.iot.tools.mkimage.linux.x86_64 .......... SUCCESS [  1.056 s]
[INFO] com.mentor.iot.tools.mkimage.win32.x86 ............. SUCCESS [  1.147 s]
[INFO] com.mentor.iot.tools.mkimage.win32.x86_64 .......... SUCCESS [  1.198 s]
[INFO] com.mentor.iot.tools.cli ........................... SUCCESS [  0.702 s]
[INFO] com.mentor.iot.tools.ui ............................ SUCCESS [  0.909 s]
[INFO] com.mentor.iot.tools.product ....................... SUCCESS [  0.667 s]
[INFO] com.mentor.iot.tools.feature ....................... FAILURE [  0.163 s]
[INFO] com.mentor.iot.tools.product_definition ............ SKIPPED
[INFO] iot_cli ............................................ SKIPPED
[INFO] com.mentor.iot.tools.core.tests .................... SKIPPED
[INFO] settings.base ...................................... SKIPPED
[INFO] settings.build ..................................... SKIPPED
[INFO] com.mentor.embedded.profiler.releng.prepare ........ SKIPPED
[INFO] core ............................................... SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.tmf ................... SKIPPED
[INFO] com.mentor.embedded.profiler ....................... SKIPPED
[INFO] com.mentor.embedded.profiler.jwdb .................. SKIPPED
[INFO] com.mentor.embedded.profiler.model ................. SKIPPED
[INFO] com.mentor.embedded.profiler.core .................. SKIPPED
[INFO] com.mentor.embedded.profiler.agent ................. SKIPPED
[INFO] com.mentor.embedded.profiler.graphview ............. SKIPPED
[INFO] com.mentor.embedded.profiler.reports ............... SKIPPED
[INFO] com.mentor.embedded.profiler.traceview ............. SKIPPED
[INFO] com.mentor.embedded.profiler.sessionview ........... SKIPPED
[INFO] com.mentor.embedded.profiler.analysis .............. SKIPPED
[INFO] com.mentor.embedded.profiler.toolchain ............. SKIPPED
[INFO] com.mentor.embedded.profiler.cbi ................... SKIPPED
[INFO] com.mentor.embedded.profiler.connection.mapfile .... SKIPPED
[INFO] com.mentor.embedded.profiler.fileimport ............ SKIPPED
[INFO] com.mentor.embedded.profiler.odadriver ............. SKIPPED
[INFO] com.mentor.embedded.profiler.search ................ SKIPPED
[INFO] com.mentor.embedded.profiler.textimport ............ SKIPPED
[INFO] com.mentor.embedded.profiler.launch ................ SKIPPED
[INFO] com.mentor.embedded.profiler.sessionlist ........... SKIPPED
[INFO] com.mentor.embedded.profiler.textimport.grammarbased SKIPPED
[INFO] com.mentor.embedded.profiler.toolchain.gnuelf ...... SKIPPED
[INFO] com.mentor.embedded.profiler.core.feature .......... SKIPPED
[INFO] com.mentor.embedded.profiler.develop ............... SKIPPED
[INFO] com.mentor.embedded.profiler.develop.feature ....... SKIPPED
[INFO] com.mentor.embedded.profiler.help .................. SKIPPED
[INFO] com.mentor.embedded.profiler.help.feature .......... SKIPPED
[INFO] com.mentor.embedded.profiler.readme.feature ........ SKIPPED
[INFO] com.mentor.embedded.profiler.samples ............... SKIPPED
[INFO] com.mentor.embedded.profiler.samples.feature ....... SKIPPED
[INFO] com.mentor.embedded.profiler.feature ............... SKIPPED
[INFO] releng.core ........................................ SKIPPED
[INFO] system.lttng ....................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.agent.lttng ........... SKIPPED
[INFO] com.mentor.embedded.profiler.system.lttng .......... SKIPPED
[INFO] com.mentor.embedded.profiler.system.lttng.help ..... SKIPPED
[INFO] com.mentor.embedded.profiler.system.lttng.samples .. SKIPPED
[INFO] com.mentor.embedded.profiler.system.lttng.linux.x86_64 SKIPPED
[INFO] com.mentor.embedded.profiler.system.lttng.win32.x86_64 SKIPPED
[INFO] com.mentor.embedded.profiler.system.mel.launch ..... SKIPPED
[INFO] com.mentor.embedded.profiler.system.mel.launch.help  SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] com.mentor.embedded.profiler.system.lttng.readme.feature SKIPPED
[INFO] com.mentor.embedded.profiler.system.lttng.samples.feature SKIPPED
[INFO] com.mentor.embedded.profiler.system.lttng.feature .. SKIPPED
[INFO] com.mentor.embedded.profiler.system.mel.launch.readme.feature SKIPPED
[INFO] com.mentor.embedded.profiler.system.mel.launch.feature SKIPPED
[INFO] system.ust ......................................... SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.agent.ust ............. SKIPPED
[INFO] com.mentor.embedded.profiler.system.ust ............ SKIPPED
[INFO] com.mentor.embedded.profiler.system.ust.cdt ........ SKIPPED
[INFO] com.mentor.embedded.profiler.system.ust.help ....... SKIPPED
[INFO] com.mentor.embedded.profiler.system.ust.feature .... SKIPPED
[INFO] system.dlt ......................................... SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.system.dlt ............ SKIPPED
[INFO] com.mentor.embedded.profiler.system.dlt.readme.feature SKIPPED
[INFO] com.mentor.embedded.profiler.system.dlt.samples.feature SKIPPED
[INFO] com.mentor.embedded.profiler.system.dlt.help ....... SKIPPED
[INFO] com.mentor.embedded.profiler.system.dlt.win32.x86_64 SKIPPED
[INFO] com.mentor.embedded.profiler.system.dlt.linux.x86_64 SKIPPED
[INFO] com.mentor.embedded.profiler.system.dlt.feature .... SKIPPED
[INFO] system.gst ......................................... SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.agent.gst ............. SKIPPED
[INFO] com.mentor.embedded.profiler.system.gst.feature .... SKIPPED
[INFO] system.qt .......................................... SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.agent.qt .............. SKIPPED
[INFO] com.mentor.embedded.profiler.system.qt.samples.feature SKIPPED
[INFO] com.mentor.embedded.profiler.system.qt.feature ..... SKIPPED
[INFO] system.v4l2 ........................................ SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.agent.v4l2 ............ SKIPPED
[INFO] com.mentor.embedded.profiler.system.v4l2.feature ... SKIPPED
[INFO] system.wdb ......................................... SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.agent.wdb ............. SKIPPED
[INFO] com.mentor.embedded.profiler.system.wdb.readme.feature SKIPPED
[INFO] com.mentor.embedded.profiler.system.wdb.help ....... SKIPPED
[INFO] com.mentor.embedded.profiler.system.wdb.feature .... SKIPPED
[INFO] system.ftrace ...................................... SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.ftraceimport .......... SKIPPED
[INFO] com.mentor.embedded.profiler.system.ftrace.feature . SKIPPED
[INFO] system.mehv ........................................ SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.agent.mehv ............ SKIPPED
[INFO] com.mentor.embedded.profiler.system.mehv.readme.feature SKIPPED
[INFO] com.mentor.embedded.profiler.system.mehv.help ...... SKIPPED
[INFO] com.mentor.embedded.profiler.system.mehv.feature ... SKIPPED
[INFO] com.mentor.embedded.profiler.system.mehv ........... SKIPPED
[INFO] system.memf ........................................ SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.agent.memf ............ SKIPPED
[INFO] com.mentor.embedded.profiler.system.memf.readme.feature SKIPPED
[INFO] com.mentor.embedded.profiler.system.memf.help ...... SKIPPED
[INFO] com.mentor.embedded.profiler.system.memf.feature ... SKIPPED
[INFO] system.autosar ..................................... SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.agent.autosar ......... SKIPPED
[INFO] com.mentor.embedded.profiler.system.autosar ........ SKIPPED
[INFO] com.mentor.embedded.profiler.system.autosar.readme.feature SKIPPED
[INFO] com.mentor.embedded.profiler.system.autosar.help ... SKIPPED
[INFO] com.mentor.embedded.profiler.system.autosar.feature  SKIPPED
[INFO] system.iot ......................................... SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.system.aws.libs ....... SKIPPED
[INFO] com.mentor.embedded.profiler.rse.iot ............... SKIPPED
[INFO] com.mentor.embedded.profiler.rse.aws ............... SKIPPED
[INFO] com.mentor.embedded.profiler.system.azure.libs ..... SKIPPED
[INFO] com.mentor.embedded.profiler.rse.azure ............. SKIPPED
[INFO] com.mentor.embedded.profiler.system.iot.launch ..... SKIPPED
[INFO] com.mentor.embedded.profiler.system.azure .......... SKIPPED
[INFO] com.mentor.embedded.profiler.system.iot ............ SKIPPED
[INFO] com.mentor.embedded.profiler.system.iot.readme ..... SKIPPED
[INFO] com.mentor.embedded.profiler.system.iot.help ....... SKIPPED
[INFO] com.mentor.embedded.profiler.system.iot.feature .... SKIPPED
[INFO] releng.systems ..................................... SKIPPED
[INFO] toolchain.greenhills ............................... SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.toolchain.gh .......... SKIPPED
[INFO] com.mentor.embedded.profiler.toolchain.gh.help ..... SKIPPED
[INFO] com.mentor.embedded.profiler.toolchain.gh.feature .. SKIPPED
[INFO] toolchain.windriver ................................ SKIPPED
[INFO] features ........................................... SKIPPED
[INFO] plugins ............................................ SKIPPED
[INFO] com.mentor.embedded.profiler.toolchain.wr .......... SKIPPED
[INFO] com.mentor.embedded.profiler.toolchain.wr.help ..... SKIPPED
[INFO] com.mentor.embedded.profiler.toolchain.wr.feature .. SKIPPED
[INFO] releng.toolchains .................................. SKIPPED
[INFO] site.product ....................................... SKIPPED
[INFO] com.mentor.embedded.sourceryanalyzer ............... SKIPPED
[INFO] com.mentor.embedded.sourceryanalyzer.addons ........ SKIPPED
[INFO] com.mentor.embedded.sourceryanalyzer.iot ........... SKIPPED
[INFO] site.profiler ...................................... SKIPPED
[INFO] site.profiler.version .............................. SKIPPED
[INFO] site.profiler.iot.releng ........................... SKIPPED
[INFO] site.profiler.iot .................................. SKIPPED
[INFO] sourcery-analyzer .................................. SKIPPED
[INFO] meif_root .......................................... SKIPPED
[INFO] meif_ius ........................................... SKIPPED
[INFO] iot_ius ............................................ SKIPPED
[INFO] meif_installer ..................................... SKIPPED
[INFO] main ............................................... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 04:58 min
[INFO] Finished at: 2019-12-27T05:31:30-08:00
[INFO] Final Memory: 647M/11998M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.eclipse.tycho:tycho-packaging-plugin:1.5.1:package-feature (default-package-feature) on project com.mentor.iot.tools.feature: Execution default-package-feature of goal org.eclipse.tycho:tycho-packaging-plugin:1.5.1:package-feature failed: eclipse-plugin artifact with ID "com.mentor.iot.tools.mkimage.linux.x86" and version matching "0.0.0" was not found in the target platform -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginExecutionException
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :com.mentor.iot.tools.feature
[12-27 05:31:35] [ERROR]: Traceback (most recent call last):
  File "/scratch/jenkins/workspace/meif/meif_elm/191227-070722/src/cb_releng/scripts/cbutils/AbstractScript.py", line 78, in main
    ret = self.perform_operation(mods)
  File "./src/cb_releng/scripts/cb_build.py", line 91, in perform_operation
    mod.build()
  File "/scratch/jenkins/workspace/meif/meif_elm/191227-070722/src/cb_releng/scripts/modules/AbstractMavenModule.py", line 127, in build
    GLOBALS.DIR_BUILD)
Exception: Error running command 'mvn -B -gt="cb_iot/com.mentor.iot.tools.core.tests/jca_jre.xml"  -Dmaven.repo.local=../.m2 clean verify  -Drelease.version="12.0.0.201912270525" -P mesa.iot' in directory build , Check previous messages for program output.

[12-27 05:31:35] [ERROR]: cb_build.py: Exception('Error running command \'mvn -B -gt="cb_iot/com.mentor.iot.tools.core.tests/jca_jre.xml"  -Dmaven.repo.local=../.m2 clean verify  -Drelease.version="12.0.0.201912270525" -P mesa.iot\' in directory build , Check previous messages for program output.',)

[12-27 05:31:35] [ERROR]:              for help use --help
cd build ; mvn -B -gt="cb_iot/com.mentor.iot.tools.core.tests/jca_jre.xml"  -Dmaven.repo.local=../.m2 clean verify  -Drelease.version="12.0.0.201912270525" -P mesa.iot
{code}";s:10:"issuelinks";a:1:{s:3:"out";a:1:{s:8:"fixed by";a:1:{i:0;s:8:"CB-11894";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:16:"Fixed Indirectly";s:14:"resolutiondate";i:1578332642;s:7:"updated";i:1578470627;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:679;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"MEIF-2146";s:6:"sprint";a:2:{i:0;s:245:"com.atlassian.greenhopper.service.sprint.Sprint@54f9b734[id=1593,rapidViewId=314,state=CLOSED,name=2019 CB - Sprint 12,startDate=2019-12-01T16:06:55.150Z,endDate=2019-12-29T03:01:00.000Z,completeDate=2019-12-28T16:14:00.533Z,sequence=1593,goal=]";i:1;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@11ec09c0[id=1835,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 1,startDate=2019-12-28T16:17:50.915Z,endDate=2020-01-18T03:12:00.000Z,completeDate=2020-01-18T23:03:48.577Z,sequence=1745,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+01]";}s:12:"story_points";d:3;s:3:"key";s:8:"CB-11711";s:6:"status";s:6:"Closed";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:35:"QA: Create test plan for MEIF 1.4.0";s:11:"description";s:177:"Create Test plan in confluence

Create Jira Task

Create Testlink plan

Clear dashboard [http://sos.pkl.mentorg.com/widget/treeview/meif/39] from not applicable QA tasks";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:86700;s:10:"resolution";s:8:"Resolved";s:14:"resolutiondate";i:1578914601;s:7:"updated";i:1580704628;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:5:"story";s:7:"subtask";b:0;s:6:"labels";a:3:{i:0;s:2:"qa";i:1;s:5:"tools";i:2;s:2:"tp";}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:680;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@345e2837[id=1591,rapidViewId=314,state=CLOSED,name=2019 CB - Sprint 10,startDate=2019-10-01T22:47:50.571+01:00,endDate=2019-10-31T07:46:00.000Z,completeDate=2019-10-31T22:39:10.609Z,sequence=1591,goal=]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-11442";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:79:"install-ipk.sh has a critical bug causing application updates to fail for MEIF.";s:11:"description";s:1621:"During MEIF evaluation by a customer using MEL ELM 11.1.0 and MEIF1.3. It has been discovered that application updates for MEIF are broken. I have investigated the issue and found the following reason for the issue and i have also proposed a fix for the issue.

The install-ipk.sh has been modified in the PR : [https://stash.alm.mentorg.com/projects/CB/repos/mht_resources/pull-requests/2/overview]

The modification just involves removing of a single asterisk character. This modification is causing the application updates to fail for MEIF.  This buggy script is already released in MEL ELM 11.1.0.

The working install-ipk.sh file is here : [https://stash.alm.mentorg.com/projects/CB/repos/cb_iot/browse/com.mentor.iot.tools.core/resources/swu/mel_ultrazed-eg-iocc-mel_11/install-ipk.sh]

Buggy:
{code:java}
    mkdir /tmp/updates -p
    packages=$(cd /tmp/updates && find * -maxdepth 1 -name '*.ipk')
    for package in ${packages}; do
        package_name=$(echo ${package} | cut -d_ -f1)
        opkg remove ${package_name}
    done    opkg install /tmp/updates/*.ipk
    result=${?}
    rm -f /tmp/updates/*.ipk
    sync{code}
Working:
{code:java}
    mkdir /tmp/updates -p
    packages=$(cd /tmp/updates && find * -maxdepth 1 -name '*.ipk*')
    for package in ${packages}; do
        package_name=$(echo ${package} | cut -d_ -f1)
        opkg remove ${package_name}
    done    opkg install /tmp/updates/*.ipk*
    result=${?}
    rm -f /tmp/updates/*.ipk*
    sync{code}
So all that is required under this ticket is to update the install-ipk.sh for atleast ultrazed and uno BSPs.";s:10:"issuelinks";a:0:{}s:20:"timeoriginalestimate";i:14400;s:9:"timespent";i:14400;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1569848282;s:7:"updated";i:1570087039;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:3:"bug";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:681;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:8:"CB-11164";s:6:"sprint";s:0:"";s:12:"story_points";i:0;s:3:"key";s:8:"CB-11167";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:47:"MHT: Support secure boot for omni/turbot-dual-e";s:11:"description";s:509:"MEL Omni uses secure boot signing by default for turbot-dual-e. This is a configurable option that can be turned off if required. Omni uses sbsign for signing the efi boot image.

Below is the command line that does this:
{noformat}
sbsign --key ${SB_KEYS_PATH}/db.key --cert ${SB_KEYS_PATH}/db.crt \
 --output ${WORKDIR}/bootx64.efi ${WORKDIR}/bootx64.efi {noformat}

Similar support is required in MHT where the efi boot image will be signed by default and the user may have an option to turn it off.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:15:"is triggered by";a:1:{i:0;s:9:"MEIF-1863";}}}s:20:"timeoriginalestimate";i:86400;s:9:"timespent";i:28800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1571752218;s:7:"updated";i:1571752218;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:11:"new feature";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:682;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:0:"";s:6:"sprint";a:1:{i:0;s:250:"com.atlassian.greenhopper.service.sprint.Sprint@345e2837[id=1591,rapidViewId=314,state=CLOSED,name=2019 CB - Sprint 10,startDate=2019-10-01T22:47:50.571+01:00,endDate=2019-10-31T07:46:00.000Z,completeDate=2019-10-31T22:39:10.609Z,sequence=1591,goal=]";}s:12:"story_points";i:0;s:3:"key";s:8:"CB-11164";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:39:"MHT: Add support for omni/turbot-dual-e";s:11:"description";s:2690:"The sw-description file used by MEL Omni has a different format than the one being used by MEL Flex and it also defines encryption/signing as mandatory instead of the optional support in MEL Flex updates. The GUI of the tool and the backend handling of templates will both require updates.

[^sw-description.in] file attached with this ticket is the template file that MEL Omni uses to generate [^sw-description]

sw-description.in defines six _images_ files i.e. first 6 entries in the below table.

The final swu contains the 8 files listed in the output filename column.

 
||S/no.||input file||sw-description variable||sw-description value/ output filename||encrypted||compressed
 (gzip)||UI name suggestions||
|1|<build-dir>/tmp/deploy/images/turbot-dual-e/turbot-dual-e.parted|BSP_PARTED_SCRIPT|turbot-dual-e.parted|true|false|Parted Script|
|2|<build-dir>/tmp/deploy/images/turbot-dual-e/turbot-dual-e.lvm|BSP_LVM_SCRIPT|turbot-dual-e.lvm|true|false|LVM Script|
|3|<build-dir>/tmp/deploy/images/turbot-dual-e/efibootguardx64-mel-omni-turbot-dual-e.efi|BSP_EBG_BIN|bootx64.efi|true|false|EBG Bin|
|4|<build-dir>/tmp/deploy/images/turbot-dual-e/development-image-mel-omni-turbot-dual-e/boota-development-image-mel-omni-turbot-dual-e.vfat.img
 (!) This is a vfat image and the actual efi file is /system.efi. The tool needs to extract this file first after mounting the image.|BSP_BOOT_A_BIN|systema.efi|true|false|Boot A Bin|
|5|<build-dir>/tmp/deploy/images/turbot-dual-e/development-image-mel-omni-turbot-dual-e/bootb-development-image-mel-omni-turbot-dual-e.vfat.img
 (!) This is a vfat image and the actual efi file is /system.efi. The tool needs to extract this file first after mounting the image.|BSP_BOOT_B_BIN|systemb.efi|true|false|Boot B Bin|
|6|<build-dir>/tmp/deploy/images/turbot-dual-e/development-image-mel-omni-turbot-dual-e/platforma-development-image-mel-omni-turbot-dual-e.ext4.img|BSP_ROOTFS|rootfs.gz|true|true|Rootfs|
|7|n/a|n/a|sw-description|n/a|n/a|n/a|
|8|n/a|n/a|sw-description.sig|n/a|n/a|n/a|

 

These input files can be downloaded from this link [ftp://ftpnew.alm.mentorg.com/pub/abdurr/input_files/]. The output cpio archive generated by Omni build system is uploaded here for reference: [ftp://ftpnew.alm.mentorg.com/pub/abdurr/development-image-mel-omni-turbot-dual-e.swu]

As seen in the above table some of these files need to be encrypted only while others need to be compressed also. The sw-description is always signed.

+UI changes+
 The user will need to provide paths for the six images mentioned above(rows 1-6 in above table).
 There should be no option for enabling/disabling signing/encryption/compression.";s:10:"issuelinks";a:1:{s:2:"in";a:1:{s:15:"is triggered by";a:1:{i:0;s:9:"MEIF-1863";}}}s:20:"timeoriginalestimate";i:0;s:9:"timespent";i:0;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1571752228;s:7:"updated";i:1572600144;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"epic";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}i:683;O:18:"mahmad\Jira\Ticket":21:{s:9:"epic_link";s:9:"NUCB-4869";s:6:"sprint";a:1:{i:0;s:309:"com.atlassian.greenhopper.service.sprint.Sprint@2363bb02[id=1838,rapidViewId=314,state=CLOSED,name=CB - 2020 Sprint 4,startDate=2020-03-01T01:37:12.078Z,endDate=2020-03-22T11:54:00.000Z,completeDate=2020-03-22T14:40:24.468Z,sequence=1838,goal=https://confluence.alm.mentorg.com/display/CB/CB+-+2020+Sprint+04]";}s:12:"story_points";i:0;s:3:"key";s:7:"CB-9856";s:6:"status";s:8:"Resolved";s:14:"statuscategory";s:8:"RESOLVED";s:7:"summary";s:51:"Improve MEIF demo project template creation support";s:11:"description";s:1325:"We need to improve MEIF demo template creation workflows. ATM, it involves following:

*1)*. MEIF team provides Tools team with an updated version of [http://confluence.alm.mentorg.com:8090/display/MEIF/Azure+Demo+Application+Build+Steps+from+CodeBench+IDE] and similar steps for building Mindconnect sample.
  
 *2)* Tools team provides updated golden binaries for MEIF which support building all three cloud demos.

*3)* MEIF team updates the golden binaries in the MEL meta layer.
 Previous PR for MEIF/AWS [https://github.com/MentorEmbedded/mel-meta-mentor-private/pull/98/commits/16c3ff44de46a32fd0d52a72479ac3f98932b64c]

 

This involves too much back n forth steps between teams and all we need to do is to put replace given information in a new template and package in a p2 repo and give that to MEIF team that they then use to package in ADE.

We can create a new script *gen_meif_template.sh* that takes required information in args and generate a template plugin. We can then create a jenkins job with fields to provide all required information and then MEIF team can use this jenkins job to provide all required information. This job will generate new template plugin and will then run CB releng to generate a P2 repo that MEIF team can add to ADE. This will remove dependency from our team.

 ";s:10:"issuelinks";a:2:{s:3:"out";a:1:{s:13:"is triggering";a:2:{i:0;s:8:"CB-12538";i:1;s:9:"MEIF-2392";}}s:2:"in";a:1:{s:10:"relates to";a:3:{i:0;s:7:"CB-9863";i:1;s:8:"CB-12538";i:2;s:8:"CB-12505";}}}s:20:"timeoriginalestimate";i:144000;s:9:"timespent";i:217800;s:10:"resolution";s:5:"Fixed";s:14:"resolutiondate";i:1584703455;s:7:"updated";i:1585042143;s:7:"duedate";s:0:"";s:8:"subtasks";a:0:{}s:9:"issuetype";s:4:"task";s:7:"subtask";b:0;s:6:"labels";a:0:{}s:11:"fixVersions";a:1:{i:0;s:10:"meif_1.4.0";}s:17:"issuetypecategory";s:4:"TASK";}}